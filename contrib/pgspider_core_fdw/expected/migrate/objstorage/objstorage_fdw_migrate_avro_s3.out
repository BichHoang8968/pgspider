\set ECHO none
SELECT * FROM substring(version(),1,8) \gset
\set FILE_FORMAT 'avro'
\ir sql/migrate/objstorage/objstorage_fdw_migrate_dirname.sql
\set ECHO all
-- ===================================================================
-- **Migrate dirname 
-- Note: objstorage will use "relaion name" as prefix to create file.
-- ===================================================================
\set src_var :PATH_FILENAME'/':FILE_FORMAT'/migrate_src_':FILE_FORMAT
\set des_var :PATH_FILENAME'/':FILE_FORMAT'/migrate_des_':FILE_FORMAT
\set src_foreigntable_opt 'dirname ':'src_var'', format ':'FILE_FORMAT'', insert_file_selector \'selector(c1 , dirname)\''
\set dest_foreigntable_opt 'dirname ':'des_var'', format ':'FILE_FORMAT'
\set tablename_opt 'dirname'
\set default_dest_foreigntable_opt 'dirname ':'des_var'', format \'json\''
\ir objstorage_fdw_migrate.sql
-- ===================================================================
-- create FDW objects
-- ===================================================================
-- Create FDW extensions
--Testcase 1:
CREATE EXTENSION pgspider_core_fdw;
--Testcase 2:
SET datestyle = ISO;
SET timezone = 'UTC';
--Testcase 3:
CREATE EXTENSION objstorage_fdw;
CREATE ROLE objstorage_fdw_ddl LOGIN SUPERUSER;
SET ROLE objstorage_fdw_ddl;
-- Source: init SERVER, USER MAPPING
--Testcase 4:
CREATE SERVER source_svr FOREIGN DATA WRAPPER objstorage_fdw :SERVER_OPTIONS;
--Testcase 5:
CREATE SERVER dest_svr FOREIGN DATA WRAPPER objstorage_fdw :SERVER_OPTIONS2;
--Testcase 6:
CREATE USER MAPPING FOR CURRENT_USER SERVER source_svr :USER_PASSWORD;
--Testcase 7:
CREATE USER MAPPING FOR CURRENT_USER SERVER dest_svr :USER_PASSWORD;
SELECT format($$
CREATE FUNCTION selector(c int, dirname text)
RETURNS TEXT AS
$func$
    SELECT dirname || '/new_file.%1$I';
$func$
LANGUAGE SQL
$$, :'FILE_FORMAT')\gexec

CREATE FUNCTION selector(c int, dirname text)
RETURNS TEXT AS
$func$
    SELECT dirname || '/new_file.avro';
$func$
LANGUAGE SQL

--------------------------- MIGRATE foreign table tests -----------------------
-- pre-condition: create foreign table for source table
--Testcase 8:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 9:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 10:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
--Testcase 11:
SELECT count(*) FROM ft1;
 count 
-------
  1000
(1 row)

--Testcase 12:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

-- ===================================================================
-- MIGRATE without TO/REPLACE, single server without any SERVER OPTION
-- Can not MIGRATE data to mysql_fdw and parquet_s3_fdw without any OPTIONS.
--		- mysql_fdw requires 'dbname' option
--		- parquet_s3_fdw requires 'dirname' option
-- ===================================================================
-- Foreign table is created for source server.
--Testcase 13:
\det+
                                                              List of foreign tables
 Schema | Table |   Server   |                                             FDW options                                              | Description 
--------+-------+------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1   | source_svr | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(1 row)

-- MIGRATE datasource
-- Failed if dest_svr is server of mysql_fdw or parquet_s3_fdw.
-- OK when MIGRATE parquet_s3_fdw to parquet_s3_fdw, 'dirname' inherited from source table
-- OK when MIGRATE objstorage_fdw to objstorage_fdw in cloud, option inherited from source table. 
--Testcase 14:
MIGRATE TABLE ft1 SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- Does not create new foreign table
--Testcase 15:
\det+
                                                              List of foreign tables
 Schema | Table |   Server   |                                             FDW options                                              | Description 
--------+-------+------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1   | source_svr | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(1 row)

-- Validate new datasource:
-- When dest_svr is the server of mysql_fdw or parquet_s3_fdw, this validation will not work correctly due to failed MIGRATE.
-- create temp foreign table to check data of new table which in destination server
--Testcase 16:
CREATE FOREIGN TABLE tmp_ftbl (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
--Testcase 17:
SELECT * FROM tmp_ftbl ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 18:
SELECT count(*) FROM tmp_ftbl; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 19:
INSERT INTO tmp_ftbl
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 20:
SELECT count(*) FROM tmp_ftbl; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 21:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 22:
DROP DATASOURCE TABLE tmp_ftbl;
--Testcase 23:
DROP FOREIGN TABLE tmp_ftbl;
--Testcase 24:
DROP DATASOURCE TABLE ft1;
--Testcase 25:
DROP FOREIGN TABLE ft1;
-- ===================================================================
-- MIGRATE without TO/REPLACE, single server with SERVER OPTION
-- ===================================================================
-- pre-condition: create foreign table for source table
--Testcase 26:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 27:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 28:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 29:
\det+
                                                              List of foreign tables
 Schema | Table |   Server   |                                             FDW options                                              | Description 
--------+-------+------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1   | source_svr | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(1 row)

-- MIGRATE datasource
--Testcase 30:
MIGRATE TABLE ft1 SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- Does not create new foreign table
--Testcase 31:
\det+
                                                              List of foreign tables
 Schema | Table |   Server   |                                             FDW options                                              | Description 
--------+-------+------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1   | source_svr | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(1 row)

-- Validate new datasource:
-- create temp foreign table to check data of new table which in destination server
--Testcase 32:
CREATE FOREIGN TABLE tmp_ftbl (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
--Testcase 33:
SELECT * FROM tmp_ftbl ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 34:
SELECT count(*) FROM tmp_ftbl; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
ALTER TABLE tmp_ftbl OPTIONS (insert_file_selector 'selector(c1 , dirname)');
--Testcase 35:
INSERT INTO tmp_ftbl
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 36:
SELECT count(*) FROM tmp_ftbl; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 37:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 38:
DROP DATASOURCE TABLE tmp_ftbl;
--Testcase 39:
DROP FOREIGN TABLE tmp_ftbl;
--Testcase 40:
DROP DATASOURCE TABLE ft1;
--Testcase 41:
DROP FOREIGN TABLE ft1;
-- ===================================================================
-- MIGRATE REPLACE, single server without any SERVER OPTION
-- Can not MIGRATE data to mysql_fdw and parquet_s3_fdw without any OPTIONS.
--		- mysql_fdw requires 'dbname' option
--		- parquet_s3_fdw requires 'dirname' option
-- ===================================================================
-- pre-condition: create foreign table for source table
--Testcase 42:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 43:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 44:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 45:
\det+
                                                              List of foreign tables
 Schema | Table |   Server   |                                             FDW options                                              | Description 
--------+-------+------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1   | source_svr | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(1 row)

-- MIGRATE datasource
-- Failed if dest_svr is server of mysql_fdw or parquet_s3_fdw.
-- OK when MIGRATE parquet_s3_fdw to parquet_s3_fdw, 'dirname' inherited from source table
-- OK when MIGRATE objstorage_fdw to objstorage_fdw in cloud, option inherited from source table. 
--Testcase 46:
MIGRATE TABLE ft1 REPLACE SERVER dest_svr;
-- foreign table of source server has been removed,
-- foreign table of destination server is created.
--Testcase 47:
\det+
                                     List of foreign tables
 Schema | Table |  Server  |                      FDW options                      | Description 
--------+-------+----------+-------------------------------------------------------+-------------
 public | ft1   | dest_svr | (format 'avro', dirname 'data/avro/migrate_src_avro') | 
(1 row)

-- Validate new datasource:
-- When dest_svr is the server of mysql_fdw or parquet_s3_fdw, this validation will not work correctly due to failed MIGRATE.
-- create temp foreign table to check data of source table which in source server
--Testcase 48:
CREATE FOREIGN TABLE tmp_ftbl (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
--Testcase 49:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 50:
SELECT count(*) FROM ft1; -- It should return: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 51:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 52:
SELECT count(*) FROM ft1; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 53:
SELECT count(*) FROM tmp_ftbl; -- It should return 1010 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 54:
DROP DATASOURCE TABLE ft1;
--Testcase 55:
DROP FOREIGN TABLE ft1;
--Testcase 56:
DROP DATASOURCE TABLE tmp_ftbl;
--Testcase 57:
DROP FOREIGN TABLE tmp_ftbl;
-- ===================================================================
-- MIGRATE REPLACE, single server with SERVER OPTION
-- ===================================================================
-- pre-condition: create foreign table for source table
--Testcase 58:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 59:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 60:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 61:
\det+
                                                              List of foreign tables
 Schema | Table |   Server   |                                             FDW options                                              | Description 
--------+-------+------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1   | source_svr | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(1 row)

-- MIGRATE datasource
--Testcase 62:
MIGRATE TABLE ft1 REPLACE SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- foreign table of source server has been removed,
-- foreign table of destination server is created.
--Testcase 63:
\det+
                                     List of foreign tables
 Schema | Table |  Server  |                      FDW options                      | Description 
--------+-------+----------+-------------------------------------------------------+-------------
 public | ft1   | dest_svr | (dirname 'data/avro/migrate_des_avro', format 'avro') | 
(1 row)

-- Validate new datasource:
-- create temp foreign table to check data of source table which in source server
--Testcase 64:
CREATE FOREIGN TABLE tmp_ftbl (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
--Testcase 65:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 66:
SELECT count(*) FROM ft1; -- It should return: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 67:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 68:
SELECT count(*) FROM ft1; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 69:
SELECT count(*) FROM tmp_ftbl; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 70:
DROP DATASOURCE TABLE ft1;
--Testcase 71:
DROP FOREIGN TABLE ft1;
--Testcase 72:
DROP DATASOURCE TABLE tmp_ftbl;
--Testcase 73:
DROP FOREIGN TABLE tmp_ftbl;
-- ===================================================================
-- MIGRATE TO, single server without any SERVER OPTION
-- Can not MIGRATE data to mysql_fdw and parquet_s3_fdw without any OPTIONS.
--		- mysql_fdw requires 'dbname' option
--		- parquet_s3_fdw requires 'dirname' option
-- ===================================================================
-- pre-condition: create foreign table for source table
--Testcase 74:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 75:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 76:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 77:
\det+
                                                              List of foreign tables
 Schema | Table |   Server   |                                             FDW options                                              | Description 
--------+-------+------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1   | source_svr | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(1 row)

-- MIGRATE datasource
-- Failed if dest_svr is server of mysql_fdw or parquet_s3_fdw.
-- OK when MIGRATE parquet_s3_fdw to parquet_s3_fdw, 'dirname' inherited from source table
-- OK when MIGRATE objstorage_fdw to objstorage_fdw in cloud, option inherited from source table. 
--Testcase 78:
MIGRATE TABLE ft1 TO ft2 SERVER dest_svr;
-- foreign table of source server is kept
-- foreign table of destination server is created
--Testcase 79:
\det+
                                                              List of foreign tables
 Schema | Table |   Server   |                                             FDW options                                              | Description 
--------+-------+------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1   | source_svr | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
 public | ft2   | dest_svr   | (format 'avro', dirname 'data/avro/migrate_src_avro')                                                | 
(2 rows)

-- Validate new datasource
-- When dest_svr is the server of mysql_fdw or parquet_s3_fdw, this validation will not work correctly due to failed MIGRATE.
--Testcase 80:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 81:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 82:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 83:
SELECT count(*) FROM ft2; -- It should return same as ft1: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 84:
INSERT INTO ft2
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 85:
SELECT count(*) FROM ft2; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 86:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 87:
DROP DATASOURCE TABLE ft1;
--Testcase 88:
DROP FOREIGN TABLE ft1;
--Testcase 89:
DROP DATASOURCE TABLE ft2;
--Testcase 90:
DROP FOREIGN TABLE ft2;
-- ===================================================================
-- MIGRATE TO, single server with SERVER OPTION
-- ===================================================================
-- pre-condition: create foreign table for source table
--Testcase 91:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 92:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 93:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 94:
\det+
                                                              List of foreign tables
 Schema | Table |   Server   |                                             FDW options                                              | Description 
--------+-------+------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1   | source_svr | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(1 row)

-- MIGRATE datasource
--Testcase 95:
MIGRATE TABLE ft1 TO ft2 SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- foreign table of source server is kept
-- foreign table of destination server is created
--Testcase 96:
\det+
                                                              List of foreign tables
 Schema | Table |   Server   |                                             FDW options                                              | Description 
--------+-------+------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1   | source_svr | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
 public | ft2   | dest_svr   | (dirname 'data/avro/migrate_des_avro', format 'avro')                                                | 
(2 rows)

-- Validate new datasource
--Testcase 97:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 98:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 99:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 100:
SELECT count(*) FROM ft2; -- It should return same as ft1: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 101:
INSERT INTO ft2
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 102:
SELECT count(*) FROM ft2; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 103:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 104:
DROP DATASOURCE TABLE ft1;
--Testcase 105:
DROP FOREIGN TABLE ft1;
--Testcase 106:
DROP DATASOURCE TABLE ft2;
--Testcase 107:
DROP FOREIGN TABLE ft2;
-- ===================================================================
-- MIGRATE TO has USE_MULTITENANT_SERVER option, single server without any SERVER OPTION
-- Can not MIGRATE data to mysql_fdw and parquet_s3_fdw without any OPTIONS.
--		- mysql_fdw requires 'dbname' option
--		- parquet_s3_fdw requires 'dirname' option
-- ===================================================================
-- pre-condition: create foreign table for source table
--Testcase 108:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 109:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 110:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 111:
\det+
                                                              List of foreign tables
 Schema | Table |   Server   |                                             FDW options                                              | Description 
--------+-------+------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1   | source_svr | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(1 row)

-- MIGRATE datasource
-- Failed if dest_svr is server of mysql_fdw or parquet_s3_fdw.
-- OK when MIGRATE parquet_s3_fdw to parquet_s3_fdw, 'dirname' inherited from source table
-- OK when MIGRATE objstorage_fdw to objstorage_fdw in cloud, option inherited from source table. 
--Testcase 112:
MIGRATE TABLE ft1 TO ft2 OPTIONS (USE_MULTITENANT_SERVER 'new_pgspider_core_svr') SERVER dest_svr;
-- New 'new_pgspider_core_svr' is created
--Testcase 113:
\des+
                                                                                       List of foreign servers
         Name          |       Owner        | Foreign-data wrapper | Access privileges | Type | Version |                                 FDW options                                  | Description 
-----------------------+--------------------+----------------------+-------------------+------+---------+------------------------------------------------------------------------------+-------------
 dest_svr              | objstorage_fdw_ddl | objstorage_fdw       |                   |      |         | (storage_type 's3', endpoint 'http://127.0.0.1:9010', suppress_retry 'true') | 
 new_pgspider_core_svr | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 pgspider_core_svr     | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 source_svr            | objstorage_fdw_ddl | objstorage_fdw       |                   |      |         | (storage_type 's3', endpoint 'http://127.0.0.1:9000', suppress_retry 'true') | 
(4 rows)

-- foreign table of source server is kept
-- multi-tenant table of pgspider core server is created,
-- name of server is set by USE_MULTITENANT_SERVER option
-- Child node is created with name: ft2__dest_svr__0
--Testcase 114:
\det+
                                                                         List of foreign tables
 Schema |      Table       |        Server         |                                             FDW options                                              | Description 
--------+------------------+-----------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1              | source_svr            | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
 public | ft2              | new_pgspider_core_svr |                                                                                                      | 
 public | ft2__dest_svr__0 | dest_svr              | (format 'avro', dirname 'data/avro/migrate_src_avro')                                                | 
(3 rows)

-- Validate new datasource
-- When dest_svr is the server of mysql_fdw or parquet_s3_fdw, this validation will not work correctly due to failed MIGRATE.
--Testcase 115:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  | __spd_url  
----+----+-------+----+------------------------+--------------------+----+-----+------------
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo | /dest_svr/
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo | /dest_svr/
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo | /dest_svr/
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo | /dest_svr/
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo | /dest_svr/
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo | /dest_svr/
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo | /dest_svr/
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo | /dest_svr/
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo | /dest_svr/
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo | /dest_svr/
(10 rows)

--Testcase 116:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 117:
SELECT count(*) FROM ft2; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 118:
SELECT count(*) FROM ft2__dest_svr__0; -- It should return same as ft1: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 119:
INSERT INTO ft2__dest_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 120:
SELECT count(*) FROM ft2__dest_svr__0; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 121:
SELECT count(*) FROM ft2; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 122:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 123:
DROP DATASOURCE TABLE ft1;
--Testcase 124:
DROP FOREIGN TABLE ft1;
--Testcase 125:
DROP DATASOURCE TABLE ft2__dest_svr__0;
--Testcase 126:
DROP FOREIGN TABLE ft2__dest_svr__0;
--Testcase 127:
DROP FOREIGN TABLE ft2;
--Testcase 128:
DROP SERVER new_pgspider_core_svr CASCADE;
-- ===================================================================
-- MIGRATE TO has USE_MULTITENANT_SERVER option, single server with SERVER OPTION
-- ===================================================================
-- pre-condition: create foreign table for source table
--Testcase 129:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 130:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 131:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 132:
\det+
                                                              List of foreign tables
 Schema | Table |   Server   |                                             FDW options                                              | Description 
--------+-------+------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1   | source_svr | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(1 row)

-- MIGRATE datasource
--Testcase 133:
MIGRATE TABLE ft1 TO ft2 OPTIONS (USE_MULTITENANT_SERVER 'new_pgspider_core_svr') SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- New 'new_pgspider_core_svr' is created
--Testcase 134:
\des+
                                                                                       List of foreign servers
         Name          |       Owner        | Foreign-data wrapper | Access privileges | Type | Version |                                 FDW options                                  | Description 
-----------------------+--------------------+----------------------+-------------------+------+---------+------------------------------------------------------------------------------+-------------
 dest_svr              | objstorage_fdw_ddl | objstorage_fdw       |                   |      |         | (storage_type 's3', endpoint 'http://127.0.0.1:9010', suppress_retry 'true') | 
 new_pgspider_core_svr | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 pgspider_core_svr     | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 source_svr            | objstorage_fdw_ddl | objstorage_fdw       |                   |      |         | (storage_type 's3', endpoint 'http://127.0.0.1:9000', suppress_retry 'true') | 
(4 rows)

-- foreign table of source server is kept
-- multi-tenant table of pgspider core server is created,
-- name of server is set by USE_MULTITENANT_SERVER option
-- Child node is created with name: ft2__dest_svr__0
--Testcase 135:
\det+
                                                                         List of foreign tables
 Schema |      Table       |        Server         |                                             FDW options                                              | Description 
--------+------------------+-----------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1              | source_svr            | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
 public | ft2              | new_pgspider_core_svr |                                                                                                      | 
 public | ft2__dest_svr__0 | dest_svr              | (dirname 'data/avro/migrate_des_avro', format 'avro')                                                | 
(3 rows)

-- Validate new datasource
--Testcase 136:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  | __spd_url  
----+----+-------+----+------------------------+--------------------+----+-----+------------
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo | /dest_svr/
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo | /dest_svr/
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo | /dest_svr/
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo | /dest_svr/
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo | /dest_svr/
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo | /dest_svr/
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo | /dest_svr/
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo | /dest_svr/
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo | /dest_svr/
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo | /dest_svr/
(10 rows)

--Testcase 137:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 138:
SELECT count(*) FROM ft2; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 139:
SELECT count(*) FROM ft2__dest_svr__0; -- It should return same as ft1: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 140:
INSERT INTO ft2__dest_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 141:
SELECT count(*) FROM ft2__dest_svr__0; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 142:
SELECT count(*) FROM ft2; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 143:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 144:
DROP DATASOURCE TABLE ft2__dest_svr__0;
--Testcase 145:
DROP FOREIGN TABLE ft2__dest_svr__0;
--Testcase 146:
DROP FOREIGN TABLE ft2;
--Testcase 147:
DROP DATASOURCE TABLE ft1;
--Testcase 148:
DROP FOREIGN TABLE ft1;
--Testcase 149:
DROP SERVER new_pgspider_core_svr CASCADE;
--------------------------- MIGRATE Single Layer Single Node tests ------------
--Testcase 150:
CREATE SERVER pgspider_core_srv FOREIGN DATA WRAPPER pgspider_core_fdw;
--Testcase 151:
CREATE USER MAPPING FOR public SERVER pgspider_core_srv;
-- pre-condition: create foreign tables for source table
-- Create source multi-tenant table
--Testcase 152:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text,
	__spd_url text
) SERVER pgspider_core_srv;
--Testcase 153:
CREATE FOREIGN TABLE ft1__source_svr__0 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 154:
CREATE DATASOURCE TABLE ft1__source_svr__0;
-- Init data for source datasource
--Testcase 155:
INSERT INTO ft1__source_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
--Testcase 156:
SELECT count(*) FROM ft1__source_svr__0;
 count 
-------
  1000
(1 row)

--Testcase 157:
SELECT * FROM ft1__source_svr__0 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

-- ===================================================================
-- MIGRATE without TO/REPLACE, single server without any SERVER OPTION
-- Can not MIGRATE data to mysql_fdw and parquet_s3_fdw without any OPTIONS.
--		- mysql_fdw requires 'dbname' option
--		- parquet_s3_fdw requires 'dirname' option
-- ===================================================================
-- Foreign table is created for source server.
--Testcase 158:
\det+
                                                                        List of foreign tables
 Schema |       Table        |      Server       |                                             FDW options                                              | Description 
--------+--------------------+-------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                                                                      | 
 public | ft1__source_svr__0 | source_svr        | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(2 rows)

-- MIGRATE datasource
-- Failed if dest_svr is server of mysql_fdw or parquet_s3_fdw.
-- Failed if dest_svr is objstorage_fdw in cloud, objstorage_fdw cannot create bucket or write permssion
--Testcase 159:
MIGRATE TABLE ft1 SERVER dest_svr;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:883: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
-- Does not create new foreign table
--Testcase 160:
\det+
                                                                        List of foreign tables
 Schema |       Table        |      Server       |                                             FDW options                                              | Description 
--------+--------------------+-------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                                                                      | 
 public | ft1__source_svr__0 | source_svr        | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(2 rows)

-- Validate new datasource:
-- When dest_svr is the server of mysql_fdw or parquet_s3_fdw, this validation will not work correctly due to failed MIGRATE.
-- When dest_svr is objstorage_fdw, this validation will not work correctly due to failed MIGRATE.
-- create temp foreign table to check data of new table which in destination server
--Testcase 161:
CREATE FOREIGN TABLE tmp_ftbl (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER dest_svr OPTIONS (:default_dest_foreigntable_opt);
-- New datasource has name of multitenant foreign table, use it for temporary foreign table to query
--Testcase 162:
ALTER FOREIGN TABLE tmp_ftbl OPTIONS (SET :tablename_opt 'ft1');
--Testcase 163:
\det+
                                                                        List of foreign tables
 Schema |       Table        |      Server       |                                             FDW options                                              | Description 
--------+--------------------+-------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                                                                      | 
 public | ft1__source_svr__0 | source_svr        | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
 public | tmp_ftbl           | dest_svr          | (dirname 'ft1', format 'json')                                                                       | 
(3 rows)

--Testcase 164:
SELECT * FROM tmp_ftbl ORDER BY c1 LIMIT 10;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:913: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
--Testcase 165:
SELECT count(*) FROM tmp_ftbl; -- It should return 1000 rows
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:915: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
--Testcase 166:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  |  __spd_url   
----+----+-------+----+------------------------+--------------------+----+-----+--------------
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo | /source_svr/
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo | /source_svr/
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo | /source_svr/
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo | /source_svr/
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo | /source_svr/
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo | /source_svr/
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo | /source_svr/
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo | /source_svr/
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo | /source_svr/
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo | /source_svr/
(10 rows)

--Testcase 167:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 168:
INSERT INTO tmp_ftbl
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:932: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
--Testcase 169:
SELECT count(*) FROM tmp_ftbl; -- It should return 1010 rows
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:935: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
--Testcase 170:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 171:
DROP DATASOURCE TABLE ft1__source_svr__0;
--Testcase 172:
DROP FOREIGN TABLE ft1__source_svr__0;
--Testcase 173:
DROP FOREIGN TABLE ft1;
--Testcase 174:
DROP DATASOURCE TABLE tmp_ftbl;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:947: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
--Testcase 175:
DROP FOREIGN TABLE tmp_ftbl;
-- ===================================================================
-- MIGRATE without TO/REPLACE, single server with SERVER OPTION
-- ===================================================================
-- pre-condition: create foreign tables for source table
-- Create source multi-tenant table
--Testcase 176:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text,
	__spd_url text
) SERVER pgspider_core_srv;
--Testcase 177:
CREATE FOREIGN TABLE ft1__source_svr__0 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 178:
CREATE DATASOURCE TABLE ft1__source_svr__0;
-- Init data for source datasource
--Testcase 179:
INSERT INTO ft1__source_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 180:
\det+
                                                                        List of foreign tables
 Schema |       Table        |      Server       |                                             FDW options                                              | Description 
--------+--------------------+-------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                                                                      | 
 public | ft1__source_svr__0 | source_svr        | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(2 rows)

-- MIGRATE datasource
--Testcase 181:
MIGRATE TABLE ft1 SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- Does not create new foreign table
--Testcase 182:
\det+
                                                                        List of foreign tables
 Schema |       Table        |      Server       |                                             FDW options                                              | Description 
--------+--------------------+-------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                                                                      | 
 public | ft1__source_svr__0 | source_svr        | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(2 rows)

-- Validate new datasource:
-- create temp foreign table to check data of new table which in destination server
--Testcase 183:
CREATE FOREIGN TABLE tmp_ftbl (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
--Testcase 184:
\det+
                                                                        List of foreign tables
 Schema |       Table        |      Server       |                                             FDW options                                              | Description 
--------+--------------------+-------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                                                                      | 
 public | ft1__source_svr__0 | source_svr        | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
 public | tmp_ftbl           | dest_svr          | (dirname 'data/avro/migrate_des_avro', format 'avro')                                                | 
(3 rows)

--Testcase 185:
SELECT * FROM tmp_ftbl ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 186:
SELECT count(*) FROM tmp_ftbl; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 187:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  |  __spd_url   
----+----+-------+----+------------------------+--------------------+----+-----+--------------
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo | /source_svr/
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo | /source_svr/
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo | /source_svr/
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo | /source_svr/
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo | /source_svr/
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo | /source_svr/
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo | /source_svr/
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo | /source_svr/
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo | /source_svr/
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo | /source_svr/
(10 rows)

--Testcase 188:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 189:
INSERT INTO tmp_ftbl
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 190:
SELECT count(*) FROM tmp_ftbl; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 191:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 192:
DROP DATASOURCE TABLE ft1__source_svr__0;
--Testcase 193:
DROP FOREIGN TABLE ft1__source_svr__0;
--Testcase 194:
DROP FOREIGN TABLE ft1;
--Testcase 195:
DROP DATASOURCE TABLE tmp_ftbl;
--Testcase 196:
DROP FOREIGN TABLE tmp_ftbl;
-- ===================================================================
-- MIGRATE REPLACE, single server without any SERVER OPTION
-- Can not MIGRATE data to mysql_fdw and parquet_s3_fdw without any OPTIONS.
--		- mysql_fdw requires 'dbname' option
--		- parquet_s3_fdw requires 'dirname' option
-- ===================================================================
-- pre-condition: create foreign tables for source table
-- Create source multi-tenant table
--Testcase 197:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text,
	__spd_url text
) SERVER pgspider_core_srv;
--Testcase 198:
CREATE FOREIGN TABLE ft1__source_svr__0 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 199:
CREATE DATASOURCE TABLE ft1__source_svr__0;
-- Init data for source datasource
--Testcase 200:
INSERT INTO ft1__source_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 201:
\det+
                                                                        List of foreign tables
 Schema |       Table        |      Server       |                                             FDW options                                              | Description 
--------+--------------------+-------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                                                                      | 
 public | ft1__source_svr__0 | source_svr        | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(2 rows)

-- MIGRATE datasource
-- Failed if dest_svr is server of mysql_fdw or parquet_s3_fdw.
-- Failed if dest_svr is objstorage_fdw in cloud, objstorage_fdw cannot create bucket or write permssion
--Testcase 202:
MIGRATE TABLE ft1 REPLACE SERVER dest_svr;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1124: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
-- foreign table of source server has been removed,
-- foreign table of destination server is created.
--Testcase 203:
\det+
                                                                        List of foreign tables
 Schema |       Table        |      Server       |                                             FDW options                                              | Description 
--------+--------------------+-------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                                                                      | 
 public | ft1__source_svr__0 | source_svr        | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(2 rows)

-- Validate new datasource:
-- When dest_svr is the server of mysql_fdw or parquet_s3_fdw, this validation will not work correctly due to failed MIGRATE.
-- create temp foreign table to check data of source table which in source server
--Testcase 204:
CREATE FOREIGN TABLE tmp_ftbl (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
--Testcase 205:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  |  __spd_url   
----+----+-------+----+------------------------+--------------------+----+-----+--------------
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo | /source_svr/
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo | /source_svr/
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo | /source_svr/
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo | /source_svr/
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo | /source_svr/
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo | /source_svr/
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo | /source_svr/
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo | /source_svr/
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo | /source_svr/
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo | /source_svr/
(10 rows)

--Testcase 206:
SELECT count(*) FROM ft1; -- It should return: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 207:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 208:
SELECT count(*) FROM ft1; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

-- Clean up datasources
--Testcase 209:
DROP DATASOURCE TABLE tmp_ftbl;
--Testcase 210:
DROP FOREIGN TABLE tmp_ftbl;
--Testcase 211:
DROP DATASOURCE TABLE ft1;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1174: ERROR:  Does not support DROP DATASOURCE TABLE command for multitenant foreign table.
--Testcase 212:
DROP FOREIGN TABLE ft1;
-- ===================================================================
-- MIGRATE REPLACE, single server with SERVER OPTION
-- ===================================================================
-- pre-condition: create foreign tables for source table
-- Create source multi-tenant table
--Testcase 213:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text,
	__spd_url text
) SERVER pgspider_core_srv;
--Testcase 214:
CREATE FOREIGN TABLE ft1__source_svr__0 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1206: ERROR:  relation "ft1__source_svr__0" already exists
-- Create source datasource
--Testcase 215:
CREATE DATASOURCE TABLE ft1__source_svr__0;
-- Init data for source datasource
--Testcase 216:
INSERT INTO ft1__source_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 217:
\det+
                                                                        List of foreign tables
 Schema |       Table        |      Server       |                                             FDW options                                              | Description 
--------+--------------------+-------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                                                                      | 
 public | ft1__source_svr__0 | source_svr        | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(2 rows)

-- MIGRATE datasource
--Testcase 218:
MIGRATE TABLE ft1 REPLACE SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- foreign table of source server has been removed,
-- foreign table of destination server is created.
--Testcase 219:
\det+
                                     List of foreign tables
 Schema | Table |  Server  |                      FDW options                      | Description 
--------+-------+----------+-------------------------------------------------------+-------------
 public | ft1   | dest_svr | (dirname 'data/avro/migrate_des_avro', format 'avro') | 
(1 row)

-- Validate new datasource:
-- create temp foreign table to check data of source table which in source server
--Testcase 220:
CREATE FOREIGN TABLE tmp_ftbl (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
--Testcase 221:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 222:
SELECT count(*) FROM ft1; -- It should return: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 223:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 224:
SELECT count(*) FROM ft1; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

-- Clean up datasources
--Testcase 225:
DROP DATASOURCE TABLE tmp_ftbl;
--Testcase 226:
DROP FOREIGN TABLE tmp_ftbl;
--Testcase 227:
DROP DATASOURCE TABLE ft1;
--Testcase 228:
DROP FOREIGN TABLE ft1;
-- ===================================================================
-- MIGRATE TO, single server without any SERVER OPTION
-- Can not MIGRATE data to mysql_fdw and parquet_s3_fdw without any OPTIONS.
--		- mysql_fdw requires 'dbname' option
--		- parquet_s3_fdw requires 'dirname' option
-- ===================================================================
-- pre-condition: create multitenant and foreign table for source table
--Testcase 229:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text,
	__spd_url text
) SERVER pgspider_core_srv;
--Testcase 230:
CREATE FOREIGN TABLE ft1__source_svr__0 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 231:
CREATE DATASOURCE TABLE ft1__source_svr__0;
-- Init data for source datasource
--Testcase 232:
INSERT INTO ft1__source_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 233:
\det+
                                                                        List of foreign tables
 Schema |       Table        |      Server       |                                             FDW options                                              | Description 
--------+--------------------+-------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                                                                      | 
 public | ft1__source_svr__0 | source_svr        | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(2 rows)

-- MIGRATE datasource
-- Failed if dest_svr is server of mysql_fdw or parquet_s3_fdw.
-- Failed if dest_svr is objstorage_fdw in cloud, objstorage_fdw cannot create bucket or write permssion
--Testcase 234:
MIGRATE TABLE ft1 TO ft2 SERVER dest_svr;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1340: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
-- foreign table of source server is kept
-- foreign table of destination server is created
--Testcase 235:
\det+
                                                                        List of foreign tables
 Schema |       Table        |      Server       |                                             FDW options                                              | Description 
--------+--------------------+-------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                                                                      | 
 public | ft1__source_svr__0 | source_svr        | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(2 rows)

-- Validate new datasource
-- When dest_svr is the server of mysql_fdw or parquet_s3_fdw, this validation will not work correctly due to failed MIGRATE.
--Testcase 236:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  |  __spd_url   
----+----+-------+----+------------------------+--------------------+----+-----+--------------
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo | /source_svr/
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo | /source_svr/
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo | /source_svr/
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo | /source_svr/
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo | /source_svr/
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo | /source_svr/
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo | /source_svr/
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo | /source_svr/
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo | /source_svr/
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo | /source_svr/
(10 rows)

--Testcase 237:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 238:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1354: ERROR:  relation "ft2" does not exist
LINE 1: SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
                      ^
--Testcase 239:
SELECT count(*) FROM ft2; -- It should return same as ft1: 1000 rows
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1356: ERROR:  relation "ft2" does not exist
LINE 1: SELECT count(*) FROM ft2;
                             ^
-- Insert more data to new datasource
--Testcase 240:
INSERT INTO ft2
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1369: ERROR:  relation "ft2" does not exist
LINE 1: INSERT INTO ft2
                    ^
--Testcase 241:
SELECT count(*) FROM ft2; -- It should return 1010 rows
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1372: ERROR:  relation "ft2" does not exist
LINE 1: SELECT count(*) FROM ft2;
                             ^
--Testcase 242:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 243:
DROP DATASOURCE TABLE ft1__source_svr__0;
--Testcase 244:
DROP FOREIGN TABLE ft1__source_svr__0;
--Testcase 245:
DROP FOREIGN TABLE ft1;
--Testcase 246:
DROP DATASOURCE TABLE ft2;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1384: ERROR:  relation "ft2" does not exist
--Testcase 247:
DROP FOREIGN TABLE ft2;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1386: ERROR:  foreign table "ft2" does not exist
-- ===================================================================
-- MIGRATE TO, single server with SERVER OPTION
-- ===================================================================
-- pre-condition: create multitenant and foreign table for source table
--Testcase 248:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text,
	__spd_url text
) SERVER pgspider_core_srv;
--Testcase 249:
CREATE FOREIGN TABLE ft1__source_svr__0 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 250:
CREATE DATASOURCE TABLE ft1__source_svr__0;
-- Init data for source datasource
--Testcase 251:
INSERT INTO ft1__source_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 252:
\det+
                                                                        List of foreign tables
 Schema |       Table        |      Server       |                                             FDW options                                              | Description 
--------+--------------------+-------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                                                                      | 
 public | ft1__source_svr__0 | source_svr        | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(2 rows)

-- MIGRATE datasource
--Testcase 253:
MIGRATE TABLE ft1 TO ft2 SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- foreign table of source server is kept
-- foreign table of destination server is created
--Testcase 254:
\det+
                                                                        List of foreign tables
 Schema |       Table        |      Server       |                                             FDW options                                              | Description 
--------+--------------------+-------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                                                                      | 
 public | ft1__source_svr__0 | source_svr        | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
 public | ft2                | dest_svr          | (dirname 'data/avro/migrate_des_avro', format 'avro')                                                | 
(3 rows)

-- Validate new datasource
--Testcase 255:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  |  __spd_url   
----+----+-------+----+------------------------+--------------------+----+-----+--------------
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo | /source_svr/
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo | /source_svr/
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo | /source_svr/
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo | /source_svr/
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo | /source_svr/
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo | /source_svr/
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo | /source_svr/
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo | /source_svr/
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo | /source_svr/
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo | /source_svr/
(10 rows)

--Testcase 256:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 257:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 258:
SELECT count(*) FROM ft2; -- It should return same as ft1: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 259:
INSERT INTO ft2
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 260:
SELECT count(*) FROM ft2; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 261:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 262:
DROP DATASOURCE TABLE ft1__source_svr__0;
--Testcase 263:
DROP FOREIGN TABLE ft1__source_svr__0;
--Testcase 264:
DROP FOREIGN TABLE ft1;
--Testcase 265:
DROP DATASOURCE TABLE ft2;
--Testcase 266:
DROP FOREIGN TABLE ft2;
-- ===================================================================
-- MIGRATE TO has USE_MULTITENANT_SERVER option, single server without any SERVER OPTION
-- Can not MIGRATE data to mysql_fdw and parquet_s3_fdw without any OPTIONS.
--		- mysql_fdw requires 'dbname' option
--		- parquet_s3_fdw requires 'dirname' option
-- ===================================================================
-- pre-condition: create multitenant and foreign table for source table
--Testcase 267:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text,
	__spd_url text
) SERVER pgspider_core_srv;
--Testcase 268:
CREATE FOREIGN TABLE ft1__source_svr__0 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 269:
CREATE DATASOURCE TABLE ft1__source_svr__0;
-- Init data for source datasource
--Testcase 270:
INSERT INTO ft1__source_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 271:
\det+
                                                                        List of foreign tables
 Schema |       Table        |      Server       |                                             FDW options                                              | Description 
--------+--------------------+-------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                                                                      | 
 public | ft1__source_svr__0 | source_svr        | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(2 rows)

-- MIGRATE datasource
-- Failed if dest_svr is server of mysql_fdw or parquet_s3_fdw.
-- Failed if dest_svr is objstorage_fdw in cloud, objstorage_fdw cannot create bucket or write permssion
--Testcase 272:
MIGRATE TABLE ft1 TO ft2 OPTIONS (USE_MULTITENANT_SERVER 'new_pgspider_core_svr') SERVER dest_svr;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1544: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
-- New 'new_pgspider_core_svr' is created
--Testcase 273:
\des+
                                                                                     List of foreign servers
       Name        |       Owner        | Foreign-data wrapper | Access privileges | Type | Version |                                 FDW options                                  | Description 
-------------------+--------------------+----------------------+-------------------+------+---------+------------------------------------------------------------------------------+-------------
 dest_svr          | objstorage_fdw_ddl | objstorage_fdw       |                   |      |         | (storage_type 's3', endpoint 'http://127.0.0.1:9010', suppress_retry 'true') | 
 pgspider_core_srv | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 pgspider_core_svr | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 source_svr        | objstorage_fdw_ddl | objstorage_fdw       |                   |      |         | (storage_type 's3', endpoint 'http://127.0.0.1:9000', suppress_retry 'true') | 
(4 rows)

-- foreign table of source server is kept
-- multi-tenant table of pgspider core server is created,
-- name of server is set by USE_MULTITENANT_SERVER option
-- Create new ft2 multitenant
-- Child node is created with name: ft2__dest_svr__0
--Testcase 274:
\det+
                                                                        List of foreign tables
 Schema |       Table        |      Server       |                                             FDW options                                              | Description 
--------+--------------------+-------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                                                                      | 
 public | ft1__source_svr__0 | source_svr        | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(2 rows)

-- Validate new datasource
-- When dest_svr is the server of mysql_fdw or parquet_s3_fdw, this validation will not work correctly due to failed MIGRATE.
--Testcase 275:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1561: ERROR:  relation "ft2" does not exist
LINE 1: SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
                      ^
--Testcase 276:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 277:
SELECT count(*) FROM ft2; -- It should return 1000 rows
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1567: ERROR:  relation "ft2" does not exist
LINE 1: SELECT count(*) FROM ft2;
                             ^
--Testcase 278:
SELECT count(*) FROM ft2__dest_svr__0; -- It should return same as ft1: 1000 rows
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1570: ERROR:  relation "ft2__dest_svr__0" does not exist
LINE 1: SELECT count(*) FROM ft2__dest_svr__0;
                             ^
-- Insert more data to new datasource
--Testcase 279:
INSERT INTO ft2__dest_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1583: ERROR:  relation "ft2__dest_svr__0" does not exist
LINE 1: INSERT INTO ft2__dest_svr__0
                    ^
--Testcase 280:
SELECT count(*) FROM ft2__dest_svr__0; -- It should return 1010 rows
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1586: ERROR:  relation "ft2__dest_svr__0" does not exist
LINE 1: SELECT count(*) FROM ft2__dest_svr__0;
                             ^
--Testcase 281:
SELECT count(*) FROM ft2; -- It should return 1010 rows
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1588: ERROR:  relation "ft2" does not exist
LINE 1: SELECT count(*) FROM ft2;
                             ^
--Testcase 282:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 283:
DROP DATASOURCE TABLE ft1__source_svr__0;
--Testcase 284:
DROP FOREIGN TABLE ft1__source_svr__0;
--Testcase 285:
DROP FOREIGN TABLE ft1;
--Testcase 286:
DROP DATASOURCE TABLE ft2__dest_svr__0;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1600: ERROR:  relation "ft2__dest_svr__0" does not exist
--Testcase 287:
DROP FOREIGN TABLE ft2__dest_svr__0;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1602: ERROR:  foreign table "ft2__dest_svr__0" does not exist
--Testcase 288:
DROP FOREIGN TABLE ft2;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1604: ERROR:  foreign table "ft2" does not exist
--Testcase 289:
DROP SERVER new_pgspider_core_svr CASCADE;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1606: ERROR:  server "new_pgspider_core_svr" does not exist
-- ===================================================================
-- MIGRATE TO has USE_MULTITENANT_SERVER option, single server with SERVER OPTION
-- ===================================================================
-- pre-condition: create multitenant and foreign table for source table
--Testcase 290:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text,
	__spd_url text
) SERVER pgspider_core_srv;
--Testcase 291:
CREATE FOREIGN TABLE ft1__source_svr__0 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 292:
CREATE DATASOURCE TABLE ft1__source_svr__0;
-- Init data for source datasource
--Testcase 293:
INSERT INTO ft1__source_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 294:
\det+
                                                                        List of foreign tables
 Schema |       Table        |      Server       |                                             FDW options                                              | Description 
--------+--------------------+-------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                                                                      | 
 public | ft1__source_svr__0 | source_svr        | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(2 rows)

-- MIGRATE datasource
--Testcase 295:
MIGRATE TABLE ft1 TO ft2 OPTIONS (USE_MULTITENANT_SERVER 'new_pgspider_core_svr') SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- New 'new_pgspider_core_svr' is created
--Testcase 296:
\des+
                                                                                       List of foreign servers
         Name          |       Owner        | Foreign-data wrapper | Access privileges | Type | Version |                                 FDW options                                  | Description 
-----------------------+--------------------+----------------------+-------------------+------+---------+------------------------------------------------------------------------------+-------------
 dest_svr              | objstorage_fdw_ddl | objstorage_fdw       |                   |      |         | (storage_type 's3', endpoint 'http://127.0.0.1:9010', suppress_retry 'true') | 
 new_pgspider_core_svr | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 pgspider_core_srv     | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 pgspider_core_svr     | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 source_svr            | objstorage_fdw_ddl | objstorage_fdw       |                   |      |         | (storage_type 's3', endpoint 'http://127.0.0.1:9000', suppress_retry 'true') | 
(5 rows)

-- foreign table of source server is kept
-- multi-tenant table of pgspider core server is created,
-- name of server is set by USE_MULTITENANT_SERVER option
-- Create new ft2 multitenant
-- Child node is created with name: ft2__dest_svr__0
--Testcase 297:
\det+
                                                                          List of foreign tables
 Schema |       Table        |        Server         |                                             FDW options                                              | Description 
--------+--------------------+-----------------------+------------------------------------------------------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv     |                                                                                                      | 
 public | ft1__source_svr__0 | source_svr            | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
 public | ft2                | new_pgspider_core_svr |                                                                                                      | 
 public | ft2__dest_svr__0   | dest_svr              | (dirname 'data/avro/migrate_des_avro', format 'avro')                                                | 
(4 rows)

-- Validate new datasource
--Testcase 298:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  | __spd_url  
----+----+-------+----+------------------------+--------------------+----+-----+------------
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo | /dest_svr/
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo | /dest_svr/
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo | /dest_svr/
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo | /dest_svr/
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo | /dest_svr/
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo | /dest_svr/
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo | /dest_svr/
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo | /dest_svr/
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo | /dest_svr/
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo | /dest_svr/
(10 rows)

--Testcase 299:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 300:
SELECT count(*) FROM ft2; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 301:
SELECT count(*) FROM ft2__dest_svr__0; -- It should return same as ft1: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 302:
INSERT INTO ft2__dest_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 303:
SELECT count(*) FROM ft2__dest_svr__0; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 304:
SELECT count(*) FROM ft2; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 305:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 306:
DROP DATASOURCE TABLE ft2__dest_svr__0;
--Testcase 307:
DROP FOREIGN TABLE ft2__dest_svr__0;
--Testcase 308:
DROP FOREIGN TABLE ft2;
--Testcase 309:
DROP DATASOURCE TABLE ft1__source_svr__0;
--Testcase 310:
DROP FOREIGN TABLE ft1__source_svr__0;
--Testcase 311:
DROP FOREIGN TABLE ft1;
--Testcase 312:
DROP SERVER new_pgspider_core_svr CASCADE;
-- ===================================================================
-- MIGRATE to an existed table in destination: same name but different schema with source table
-- ===================================================================
-- pre-condition: create foreign table for source table
--Testcase 313:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 314:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 315:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- pre-condition: create an existed table in destination: same name but different schema with source table
--Testcase 316:
CREATE FOREIGN TABLE existed_ft1 (
	c1 int NOT NULL,
	c2 bool,
	c3 double precision,
	c4 text
) SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
--Testcase 317:
CREATE DATASOURCE TABLE existed_ft1;
--Testcase 318:
INSERT INTO existed_ft1
	SELECT id,
	       't',
	       (id::double precision) / 3,
	       id % 10
	FROM generate_series(1, 5) id;
--Testcase 319:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 320:
SELECT * FROM existed_ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |         c3         | c4 
----+----+--------------------+----
  1 | t  | 0.3333333333333333 | 1
  2 | t  | 0.6666666666666666 | 2
  3 | t  |                  1 | 3
  4 | t  | 1.3333333333333333 | 4
  5 | t  | 1.6666666666666667 | 5
(5 rows)

-- list all foreign tables
--Testcase 321:
\det+
                                                                 List of foreign tables
 Schema |    Table    |   Server   |                                             FDW options                                              | Description 
--------+-------------+------------+------------------------------------------------------------------------------------------------------+-------------
 public | existed_ft1 | dest_svr   | (dirname 'data/avro/migrate_des_avro', format 'avro')                                                | 
 public | ft1         | source_svr | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(2 rows)

-- MIGRATE datasource
--Testcase 322:
MIGRATE TABLE ft1 TO ft2 SERVER dest_svr OPTIONS (:dest_foreigntable_opt); -- failed
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1787: ERROR:  objstorage_fdw: directory 'data/avro/migrate_des_avro' already have file.
--Testcase 323:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 324:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1791: ERROR:  relation "ft2" does not exist
LINE 1: SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
                      ^
--Testcase 325:
SELECT * FROM existed_ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |         c3         | c4 
----+----+--------------------+----
  1 | t  | 0.3333333333333333 | 1
  2 | t  | 0.6666666666666666 | 2
  3 | t  |                  1 | 3
  4 | t  | 1.3333333333333333 | 4
  5 | t  | 1.6666666666666667 | 5
(5 rows)

-- list all foreign tables
--Testcase 326:
\det+
                                                                 List of foreign tables
 Schema |    Table    |   Server   |                                             FDW options                                              | Description 
--------+-------------+------------+------------------------------------------------------------------------------------------------------+-------------
 public | existed_ft1 | dest_svr   | (dirname 'data/avro/migrate_des_avro', format 'avro')                                                | 
 public | ft1         | source_svr | (dirname 'data/avro/migrate_src_avro', format 'avro', insert_file_selector 'selector(c1 , dirname)') | 
(2 rows)

-- Clean up datasources
--Testcase 327:
DROP DATASOURCE TABLE ft2;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1800: ERROR:  relation "ft2" does not exist
--Testcase 328:
DROP FOREIGN TABLE ft2;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1802: ERROR:  foreign table "ft2" does not exist
--Testcase 329:
DROP DATASOURCE TABLE existed_ft1;
--Testcase 330:
DROP FOREIGN TABLE existed_ft1;
--Testcase 331:
DROP DATASOURCE TABLE ft1;
--Testcase 332:
DROP FOREIGN TABLE ft1;
--------------------------- End tests -----------------------------------------
DROP FUNCTION selector(int, text);
--Testcase 333:
DROP EXTENSION pgspider_core_fdw CASCADE;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1816: NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to server pgspider_core_svr
drop cascades to server pgspider_core_srv
drop cascades to user mapping for public on server pgspider_core_srv
--Testcase 334:
DROP EXTENSION objstorage_fdw CASCADE;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1818: NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to server source_svr
drop cascades to user mapping for objstorage_fdw_ddl on server source_svr
drop cascades to server dest_svr
drop cascades to user mapping for objstorage_fdw_ddl on server dest_svr
--Testcase 335:
DROP EXTENSION IF EXISTS objstorage_fdw CASCADE;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1820: NOTICE:  extension "objstorage_fdw" does not exist, skipping
RESET ROLE;
DROP ROLE objstorage_fdw_ddl;
\ir sql/migrate/objstorage/objstorage_fdw_migrate_file.sql
\set ECHO all
-- ===================================================================
-- **Migrate filename
-- Note: objstorage will still use 'dirname' to create file in case no option inherit.
-- ===================================================================
\set src_var :PATH_FILENAME'/':FILE_FORMAT'/migrate_src.':FILE_FORMAT
\set des_var :PATH_FILENAME'/':FILE_FORMAT'/migrate_des.':FILE_FORMAT
\set src_foreigntable_opt 'filename ':'src_var'', format ':'FILE_FORMAT'
\set dest_foreigntable_opt 'filename ':'des_var'', format ':'FILE_FORMAT'
\set tablename_opt 'dirname'
\set default_dest_foreigntable_opt 'dirname ':'des_var'', format \'json\''
\ir objstorage_fdw_migrate.sql
-- ===================================================================
-- create FDW objects
-- ===================================================================
-- Create FDW extensions
--Testcase 1:
CREATE EXTENSION pgspider_core_fdw;
--Testcase 2:
SET datestyle = ISO;
SET timezone = 'UTC';
--Testcase 3:
CREATE EXTENSION objstorage_fdw;
CREATE ROLE objstorage_fdw_ddl LOGIN SUPERUSER;
SET ROLE objstorage_fdw_ddl;
-- Source: init SERVER, USER MAPPING
--Testcase 4:
CREATE SERVER source_svr FOREIGN DATA WRAPPER objstorage_fdw :SERVER_OPTIONS;
--Testcase 5:
CREATE SERVER dest_svr FOREIGN DATA WRAPPER objstorage_fdw :SERVER_OPTIONS2;
--Testcase 6:
CREATE USER MAPPING FOR CURRENT_USER SERVER source_svr :USER_PASSWORD;
--Testcase 7:
CREATE USER MAPPING FOR CURRENT_USER SERVER dest_svr :USER_PASSWORD;
SELECT format($$
CREATE FUNCTION selector(c int, dirname text)
RETURNS TEXT AS
$func$
    SELECT dirname || '/new_file.%1$I';
$func$
LANGUAGE SQL
$$, :'FILE_FORMAT')\gexec

CREATE FUNCTION selector(c int, dirname text)
RETURNS TEXT AS
$func$
    SELECT dirname || '/new_file.avro';
$func$
LANGUAGE SQL

--------------------------- MIGRATE foreign table tests -----------------------
-- pre-condition: create foreign table for source table
--Testcase 8:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 9:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 10:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
--Testcase 11:
SELECT count(*) FROM ft1;
 count 
-------
  1000
(1 row)

--Testcase 12:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

-- ===================================================================
-- MIGRATE without TO/REPLACE, single server without any SERVER OPTION
-- Can not MIGRATE data to mysql_fdw and parquet_s3_fdw without any OPTIONS.
--		- mysql_fdw requires 'dbname' option
--		- parquet_s3_fdw requires 'dirname' option
-- ===================================================================
-- Foreign table is created for source server.
--Testcase 13:
\det+
                                       List of foreign tables
 Schema | Table |   Server   |                      FDW options                       | Description 
--------+-------+------------+--------------------------------------------------------+-------------
 public | ft1   | source_svr | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(1 row)

-- MIGRATE datasource
-- Failed if dest_svr is server of mysql_fdw or parquet_s3_fdw.
-- OK when MIGRATE parquet_s3_fdw to parquet_s3_fdw, 'dirname' inherited from source table
-- OK when MIGRATE objstorage_fdw to objstorage_fdw in cloud, option inherited from source table. 
--Testcase 14:
MIGRATE TABLE ft1 SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- Does not create new foreign table
--Testcase 15:
\det+
                                       List of foreign tables
 Schema | Table |   Server   |                      FDW options                       | Description 
--------+-------+------------+--------------------------------------------------------+-------------
 public | ft1   | source_svr | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(1 row)

-- Validate new datasource:
-- When dest_svr is the server of mysql_fdw or parquet_s3_fdw, this validation will not work correctly due to failed MIGRATE.
-- create temp foreign table to check data of new table which in destination server
--Testcase 16:
CREATE FOREIGN TABLE tmp_ftbl (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
--Testcase 17:
SELECT * FROM tmp_ftbl ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 18:
SELECT count(*) FROM tmp_ftbl; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 19:
INSERT INTO tmp_ftbl
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 20:
SELECT count(*) FROM tmp_ftbl; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 21:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 22:
DROP DATASOURCE TABLE tmp_ftbl;
--Testcase 23:
DROP FOREIGN TABLE tmp_ftbl;
--Testcase 24:
DROP DATASOURCE TABLE ft1;
--Testcase 25:
DROP FOREIGN TABLE ft1;
-- ===================================================================
-- MIGRATE without TO/REPLACE, single server with SERVER OPTION
-- ===================================================================
-- pre-condition: create foreign table for source table
--Testcase 26:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 27:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 28:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 29:
\det+
                                       List of foreign tables
 Schema | Table |   Server   |                      FDW options                       | Description 
--------+-------+------------+--------------------------------------------------------+-------------
 public | ft1   | source_svr | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(1 row)

-- MIGRATE datasource
--Testcase 30:
MIGRATE TABLE ft1 SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- Does not create new foreign table
--Testcase 31:
\det+
                                       List of foreign tables
 Schema | Table |   Server   |                      FDW options                       | Description 
--------+-------+------------+--------------------------------------------------------+-------------
 public | ft1   | source_svr | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(1 row)

-- Validate new datasource:
-- create temp foreign table to check data of new table which in destination server
--Testcase 32:
CREATE FOREIGN TABLE tmp_ftbl (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
--Testcase 33:
SELECT * FROM tmp_ftbl ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 34:
SELECT count(*) FROM tmp_ftbl; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
ALTER TABLE tmp_ftbl OPTIONS (insert_file_selector 'selector(c1 , dirname)');
--Testcase 35:
INSERT INTO tmp_ftbl
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 36:
SELECT count(*) FROM tmp_ftbl; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 37:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 38:
DROP DATASOURCE TABLE tmp_ftbl;
--Testcase 39:
DROP FOREIGN TABLE tmp_ftbl;
--Testcase 40:
DROP DATASOURCE TABLE ft1;
--Testcase 41:
DROP FOREIGN TABLE ft1;
-- ===================================================================
-- MIGRATE REPLACE, single server without any SERVER OPTION
-- Can not MIGRATE data to mysql_fdw and parquet_s3_fdw without any OPTIONS.
--		- mysql_fdw requires 'dbname' option
--		- parquet_s3_fdw requires 'dirname' option
-- ===================================================================
-- pre-condition: create foreign table for source table
--Testcase 42:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 43:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 44:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 45:
\det+
                                       List of foreign tables
 Schema | Table |   Server   |                      FDW options                       | Description 
--------+-------+------------+--------------------------------------------------------+-------------
 public | ft1   | source_svr | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(1 row)

-- MIGRATE datasource
-- Failed if dest_svr is server of mysql_fdw or parquet_s3_fdw.
-- OK when MIGRATE parquet_s3_fdw to parquet_s3_fdw, 'dirname' inherited from source table
-- OK when MIGRATE objstorage_fdw to objstorage_fdw in cloud, option inherited from source table. 
--Testcase 46:
MIGRATE TABLE ft1 REPLACE SERVER dest_svr;
-- foreign table of source server has been removed,
-- foreign table of destination server is created.
--Testcase 47:
\det+
                                      List of foreign tables
 Schema | Table |  Server  |                      FDW options                       | Description 
--------+-------+----------+--------------------------------------------------------+-------------
 public | ft1   | dest_svr | (format 'avro', filename 'data/avro/migrate_src.avro') | 
(1 row)

-- Validate new datasource:
-- When dest_svr is the server of mysql_fdw or parquet_s3_fdw, this validation will not work correctly due to failed MIGRATE.
-- create temp foreign table to check data of source table which in source server
--Testcase 48:
CREATE FOREIGN TABLE tmp_ftbl (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
--Testcase 49:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 50:
SELECT count(*) FROM ft1; -- It should return: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 51:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 52:
SELECT count(*) FROM ft1; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 53:
SELECT count(*) FROM tmp_ftbl; -- It should return 1010 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 54:
DROP DATASOURCE TABLE ft1;
--Testcase 55:
DROP FOREIGN TABLE ft1;
--Testcase 56:
DROP DATASOURCE TABLE tmp_ftbl;
--Testcase 57:
DROP FOREIGN TABLE tmp_ftbl;
-- ===================================================================
-- MIGRATE REPLACE, single server with SERVER OPTION
-- ===================================================================
-- pre-condition: create foreign table for source table
--Testcase 58:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 59:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 60:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 61:
\det+
                                       List of foreign tables
 Schema | Table |   Server   |                      FDW options                       | Description 
--------+-------+------------+--------------------------------------------------------+-------------
 public | ft1   | source_svr | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(1 row)

-- MIGRATE datasource
--Testcase 62:
MIGRATE TABLE ft1 REPLACE SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- foreign table of source server has been removed,
-- foreign table of destination server is created.
--Testcase 63:
\det+
                                      List of foreign tables
 Schema | Table |  Server  |                      FDW options                       | Description 
--------+-------+----------+--------------------------------------------------------+-------------
 public | ft1   | dest_svr | (filename 'data/avro/migrate_des.avro', format 'avro') | 
(1 row)

-- Validate new datasource:
-- create temp foreign table to check data of source table which in source server
--Testcase 64:
CREATE FOREIGN TABLE tmp_ftbl (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
--Testcase 65:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 66:
SELECT count(*) FROM ft1; -- It should return: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 67:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 68:
SELECT count(*) FROM ft1; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 69:
SELECT count(*) FROM tmp_ftbl; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 70:
DROP DATASOURCE TABLE ft1;
--Testcase 71:
DROP FOREIGN TABLE ft1;
--Testcase 72:
DROP DATASOURCE TABLE tmp_ftbl;
--Testcase 73:
DROP FOREIGN TABLE tmp_ftbl;
-- ===================================================================
-- MIGRATE TO, single server without any SERVER OPTION
-- Can not MIGRATE data to mysql_fdw and parquet_s3_fdw without any OPTIONS.
--		- mysql_fdw requires 'dbname' option
--		- parquet_s3_fdw requires 'dirname' option
-- ===================================================================
-- pre-condition: create foreign table for source table
--Testcase 74:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 75:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 76:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 77:
\det+
                                       List of foreign tables
 Schema | Table |   Server   |                      FDW options                       | Description 
--------+-------+------------+--------------------------------------------------------+-------------
 public | ft1   | source_svr | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(1 row)

-- MIGRATE datasource
-- Failed if dest_svr is server of mysql_fdw or parquet_s3_fdw.
-- OK when MIGRATE parquet_s3_fdw to parquet_s3_fdw, 'dirname' inherited from source table
-- OK when MIGRATE objstorage_fdw to objstorage_fdw in cloud, option inherited from source table. 
--Testcase 78:
MIGRATE TABLE ft1 TO ft2 SERVER dest_svr;
-- foreign table of source server is kept
-- foreign table of destination server is created
--Testcase 79:
\det+
                                       List of foreign tables
 Schema | Table |   Server   |                      FDW options                       | Description 
--------+-------+------------+--------------------------------------------------------+-------------
 public | ft1   | source_svr | (filename 'data/avro/migrate_src.avro', format 'avro') | 
 public | ft2   | dest_svr   | (format 'avro', filename 'data/avro/migrate_src.avro') | 
(2 rows)

-- Validate new datasource
-- When dest_svr is the server of mysql_fdw or parquet_s3_fdw, this validation will not work correctly due to failed MIGRATE.
--Testcase 80:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 81:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 82:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 83:
SELECT count(*) FROM ft2; -- It should return same as ft1: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 84:
INSERT INTO ft2
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 85:
SELECT count(*) FROM ft2; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 86:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 87:
DROP DATASOURCE TABLE ft1;
--Testcase 88:
DROP FOREIGN TABLE ft1;
--Testcase 89:
DROP DATASOURCE TABLE ft2;
--Testcase 90:
DROP FOREIGN TABLE ft2;
-- ===================================================================
-- MIGRATE TO, single server with SERVER OPTION
-- ===================================================================
-- pre-condition: create foreign table for source table
--Testcase 91:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 92:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 93:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 94:
\det+
                                       List of foreign tables
 Schema | Table |   Server   |                      FDW options                       | Description 
--------+-------+------------+--------------------------------------------------------+-------------
 public | ft1   | source_svr | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(1 row)

-- MIGRATE datasource
--Testcase 95:
MIGRATE TABLE ft1 TO ft2 SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- foreign table of source server is kept
-- foreign table of destination server is created
--Testcase 96:
\det+
                                       List of foreign tables
 Schema | Table |   Server   |                      FDW options                       | Description 
--------+-------+------------+--------------------------------------------------------+-------------
 public | ft1   | source_svr | (filename 'data/avro/migrate_src.avro', format 'avro') | 
 public | ft2   | dest_svr   | (filename 'data/avro/migrate_des.avro', format 'avro') | 
(2 rows)

-- Validate new datasource
--Testcase 97:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 98:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 99:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 100:
SELECT count(*) FROM ft2; -- It should return same as ft1: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 101:
INSERT INTO ft2
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 102:
SELECT count(*) FROM ft2; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 103:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 104:
DROP DATASOURCE TABLE ft1;
--Testcase 105:
DROP FOREIGN TABLE ft1;
--Testcase 106:
DROP DATASOURCE TABLE ft2;
--Testcase 107:
DROP FOREIGN TABLE ft2;
-- ===================================================================
-- MIGRATE TO has USE_MULTITENANT_SERVER option, single server without any SERVER OPTION
-- Can not MIGRATE data to mysql_fdw and parquet_s3_fdw without any OPTIONS.
--		- mysql_fdw requires 'dbname' option
--		- parquet_s3_fdw requires 'dirname' option
-- ===================================================================
-- pre-condition: create foreign table for source table
--Testcase 108:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 109:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 110:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 111:
\det+
                                       List of foreign tables
 Schema | Table |   Server   |                      FDW options                       | Description 
--------+-------+------------+--------------------------------------------------------+-------------
 public | ft1   | source_svr | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(1 row)

-- MIGRATE datasource
-- Failed if dest_svr is server of mysql_fdw or parquet_s3_fdw.
-- OK when MIGRATE parquet_s3_fdw to parquet_s3_fdw, 'dirname' inherited from source table
-- OK when MIGRATE objstorage_fdw to objstorage_fdw in cloud, option inherited from source table. 
--Testcase 112:
MIGRATE TABLE ft1 TO ft2 OPTIONS (USE_MULTITENANT_SERVER 'new_pgspider_core_svr') SERVER dest_svr;
-- New 'new_pgspider_core_svr' is created
--Testcase 113:
\des+
                                                                                       List of foreign servers
         Name          |       Owner        | Foreign-data wrapper | Access privileges | Type | Version |                                 FDW options                                  | Description 
-----------------------+--------------------+----------------------+-------------------+------+---------+------------------------------------------------------------------------------+-------------
 dest_svr              | objstorage_fdw_ddl | objstorage_fdw       |                   |      |         | (storage_type 's3', endpoint 'http://127.0.0.1:9010', suppress_retry 'true') | 
 new_pgspider_core_svr | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 pgspider_core_svr     | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 source_svr            | objstorage_fdw_ddl | objstorage_fdw       |                   |      |         | (storage_type 's3', endpoint 'http://127.0.0.1:9000', suppress_retry 'true') | 
(4 rows)

-- foreign table of source server is kept
-- multi-tenant table of pgspider core server is created,
-- name of server is set by USE_MULTITENANT_SERVER option
-- Child node is created with name: ft2__dest_svr__0
--Testcase 114:
\det+
                                                  List of foreign tables
 Schema |      Table       |        Server         |                      FDW options                       | Description 
--------+------------------+-----------------------+--------------------------------------------------------+-------------
 public | ft1              | source_svr            | (filename 'data/avro/migrate_src.avro', format 'avro') | 
 public | ft2              | new_pgspider_core_svr |                                                        | 
 public | ft2__dest_svr__0 | dest_svr              | (format 'avro', filename 'data/avro/migrate_src.avro') | 
(3 rows)

-- Validate new datasource
-- When dest_svr is the server of mysql_fdw or parquet_s3_fdw, this validation will not work correctly due to failed MIGRATE.
--Testcase 115:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  | __spd_url  
----+----+-------+----+------------------------+--------------------+----+-----+------------
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo | /dest_svr/
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo | /dest_svr/
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo | /dest_svr/
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo | /dest_svr/
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo | /dest_svr/
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo | /dest_svr/
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo | /dest_svr/
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo | /dest_svr/
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo | /dest_svr/
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo | /dest_svr/
(10 rows)

--Testcase 116:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 117:
SELECT count(*) FROM ft2; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 118:
SELECT count(*) FROM ft2__dest_svr__0; -- It should return same as ft1: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 119:
INSERT INTO ft2__dest_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 120:
SELECT count(*) FROM ft2__dest_svr__0; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 121:
SELECT count(*) FROM ft2; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 122:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 123:
DROP DATASOURCE TABLE ft1;
--Testcase 124:
DROP FOREIGN TABLE ft1;
--Testcase 125:
DROP DATASOURCE TABLE ft2__dest_svr__0;
--Testcase 126:
DROP FOREIGN TABLE ft2__dest_svr__0;
--Testcase 127:
DROP FOREIGN TABLE ft2;
--Testcase 128:
DROP SERVER new_pgspider_core_svr CASCADE;
-- ===================================================================
-- MIGRATE TO has USE_MULTITENANT_SERVER option, single server with SERVER OPTION
-- ===================================================================
-- pre-condition: create foreign table for source table
--Testcase 129:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 130:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 131:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 132:
\det+
                                       List of foreign tables
 Schema | Table |   Server   |                      FDW options                       | Description 
--------+-------+------------+--------------------------------------------------------+-------------
 public | ft1   | source_svr | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(1 row)

-- MIGRATE datasource
--Testcase 133:
MIGRATE TABLE ft1 TO ft2 OPTIONS (USE_MULTITENANT_SERVER 'new_pgspider_core_svr') SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- New 'new_pgspider_core_svr' is created
--Testcase 134:
\des+
                                                                                       List of foreign servers
         Name          |       Owner        | Foreign-data wrapper | Access privileges | Type | Version |                                 FDW options                                  | Description 
-----------------------+--------------------+----------------------+-------------------+------+---------+------------------------------------------------------------------------------+-------------
 dest_svr              | objstorage_fdw_ddl | objstorage_fdw       |                   |      |         | (storage_type 's3', endpoint 'http://127.0.0.1:9010', suppress_retry 'true') | 
 new_pgspider_core_svr | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 pgspider_core_svr     | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 source_svr            | objstorage_fdw_ddl | objstorage_fdw       |                   |      |         | (storage_type 's3', endpoint 'http://127.0.0.1:9000', suppress_retry 'true') | 
(4 rows)

-- foreign table of source server is kept
-- multi-tenant table of pgspider core server is created,
-- name of server is set by USE_MULTITENANT_SERVER option
-- Child node is created with name: ft2__dest_svr__0
--Testcase 135:
\det+
                                                  List of foreign tables
 Schema |      Table       |        Server         |                      FDW options                       | Description 
--------+------------------+-----------------------+--------------------------------------------------------+-------------
 public | ft1              | source_svr            | (filename 'data/avro/migrate_src.avro', format 'avro') | 
 public | ft2              | new_pgspider_core_svr |                                                        | 
 public | ft2__dest_svr__0 | dest_svr              | (filename 'data/avro/migrate_des.avro', format 'avro') | 
(3 rows)

-- Validate new datasource
--Testcase 136:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  | __spd_url  
----+----+-------+----+------------------------+--------------------+----+-----+------------
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo | /dest_svr/
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo | /dest_svr/
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo | /dest_svr/
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo | /dest_svr/
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo | /dest_svr/
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo | /dest_svr/
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo | /dest_svr/
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo | /dest_svr/
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo | /dest_svr/
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo | /dest_svr/
(10 rows)

--Testcase 137:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 138:
SELECT count(*) FROM ft2; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 139:
SELECT count(*) FROM ft2__dest_svr__0; -- It should return same as ft1: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 140:
INSERT INTO ft2__dest_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 141:
SELECT count(*) FROM ft2__dest_svr__0; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 142:
SELECT count(*) FROM ft2; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 143:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 144:
DROP DATASOURCE TABLE ft2__dest_svr__0;
--Testcase 145:
DROP FOREIGN TABLE ft2__dest_svr__0;
--Testcase 146:
DROP FOREIGN TABLE ft2;
--Testcase 147:
DROP DATASOURCE TABLE ft1;
--Testcase 148:
DROP FOREIGN TABLE ft1;
--Testcase 149:
DROP SERVER new_pgspider_core_svr CASCADE;
--------------------------- MIGRATE Single Layer Single Node tests ------------
--Testcase 150:
CREATE SERVER pgspider_core_srv FOREIGN DATA WRAPPER pgspider_core_fdw;
--Testcase 151:
CREATE USER MAPPING FOR public SERVER pgspider_core_srv;
-- pre-condition: create foreign tables for source table
-- Create source multi-tenant table
--Testcase 152:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text,
	__spd_url text
) SERVER pgspider_core_srv;
--Testcase 153:
CREATE FOREIGN TABLE ft1__source_svr__0 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 154:
CREATE DATASOURCE TABLE ft1__source_svr__0;
-- Init data for source datasource
--Testcase 155:
INSERT INTO ft1__source_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
--Testcase 156:
SELECT count(*) FROM ft1__source_svr__0;
 count 
-------
  1000
(1 row)

--Testcase 157:
SELECT * FROM ft1__source_svr__0 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

-- ===================================================================
-- MIGRATE without TO/REPLACE, single server without any SERVER OPTION
-- Can not MIGRATE data to mysql_fdw and parquet_s3_fdw without any OPTIONS.
--		- mysql_fdw requires 'dbname' option
--		- parquet_s3_fdw requires 'dirname' option
-- ===================================================================
-- Foreign table is created for source server.
--Testcase 158:
\det+
                                                 List of foreign tables
 Schema |       Table        |      Server       |                      FDW options                       | Description 
--------+--------------------+-------------------+--------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                        | 
 public | ft1__source_svr__0 | source_svr        | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(2 rows)

-- MIGRATE datasource
-- Failed if dest_svr is server of mysql_fdw or parquet_s3_fdw.
-- Failed if dest_svr is objstorage_fdw in cloud, objstorage_fdw cannot create bucket or write permssion
--Testcase 159:
MIGRATE TABLE ft1 SERVER dest_svr;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:883: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
-- Does not create new foreign table
--Testcase 160:
\det+
                                                 List of foreign tables
 Schema |       Table        |      Server       |                      FDW options                       | Description 
--------+--------------------+-------------------+--------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                        | 
 public | ft1__source_svr__0 | source_svr        | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(2 rows)

-- Validate new datasource:
-- When dest_svr is the server of mysql_fdw or parquet_s3_fdw, this validation will not work correctly due to failed MIGRATE.
-- When dest_svr is objstorage_fdw, this validation will not work correctly due to failed MIGRATE.
-- create temp foreign table to check data of new table which in destination server
--Testcase 161:
CREATE FOREIGN TABLE tmp_ftbl (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER dest_svr OPTIONS (:default_dest_foreigntable_opt);
-- New datasource has name of multitenant foreign table, use it for temporary foreign table to query
--Testcase 162:
ALTER FOREIGN TABLE tmp_ftbl OPTIONS (SET :tablename_opt 'ft1');
--Testcase 163:
\det+
                                                 List of foreign tables
 Schema |       Table        |      Server       |                      FDW options                       | Description 
--------+--------------------+-------------------+--------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                        | 
 public | ft1__source_svr__0 | source_svr        | (filename 'data/avro/migrate_src.avro', format 'avro') | 
 public | tmp_ftbl           | dest_svr          | (dirname 'ft1', format 'json')                         | 
(3 rows)

--Testcase 164:
SELECT * FROM tmp_ftbl ORDER BY c1 LIMIT 10;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:913: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
--Testcase 165:
SELECT count(*) FROM tmp_ftbl; -- It should return 1000 rows
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:915: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
--Testcase 166:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  |  __spd_url   
----+----+-------+----+------------------------+--------------------+----+-----+--------------
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo | /source_svr/
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo | /source_svr/
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo | /source_svr/
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo | /source_svr/
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo | /source_svr/
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo | /source_svr/
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo | /source_svr/
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo | /source_svr/
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo | /source_svr/
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo | /source_svr/
(10 rows)

--Testcase 167:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 168:
INSERT INTO tmp_ftbl
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:932: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
--Testcase 169:
SELECT count(*) FROM tmp_ftbl; -- It should return 1010 rows
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:935: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
--Testcase 170:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 171:
DROP DATASOURCE TABLE ft1__source_svr__0;
--Testcase 172:
DROP FOREIGN TABLE ft1__source_svr__0;
--Testcase 173:
DROP FOREIGN TABLE ft1;
--Testcase 174:
DROP DATASOURCE TABLE tmp_ftbl;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:947: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
--Testcase 175:
DROP FOREIGN TABLE tmp_ftbl;
-- ===================================================================
-- MIGRATE without TO/REPLACE, single server with SERVER OPTION
-- ===================================================================
-- pre-condition: create foreign tables for source table
-- Create source multi-tenant table
--Testcase 176:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text,
	__spd_url text
) SERVER pgspider_core_srv;
--Testcase 177:
CREATE FOREIGN TABLE ft1__source_svr__0 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 178:
CREATE DATASOURCE TABLE ft1__source_svr__0;
-- Init data for source datasource
--Testcase 179:
INSERT INTO ft1__source_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 180:
\det+
                                                 List of foreign tables
 Schema |       Table        |      Server       |                      FDW options                       | Description 
--------+--------------------+-------------------+--------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                        | 
 public | ft1__source_svr__0 | source_svr        | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(2 rows)

-- MIGRATE datasource
--Testcase 181:
MIGRATE TABLE ft1 SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- Does not create new foreign table
--Testcase 182:
\det+
                                                 List of foreign tables
 Schema |       Table        |      Server       |                      FDW options                       | Description 
--------+--------------------+-------------------+--------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                        | 
 public | ft1__source_svr__0 | source_svr        | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(2 rows)

-- Validate new datasource:
-- create temp foreign table to check data of new table which in destination server
--Testcase 183:
CREATE FOREIGN TABLE tmp_ftbl (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
--Testcase 184:
\det+
                                                 List of foreign tables
 Schema |       Table        |      Server       |                      FDW options                       | Description 
--------+--------------------+-------------------+--------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                        | 
 public | ft1__source_svr__0 | source_svr        | (filename 'data/avro/migrate_src.avro', format 'avro') | 
 public | tmp_ftbl           | dest_svr          | (filename 'data/avro/migrate_des.avro', format 'avro') | 
(3 rows)

--Testcase 185:
SELECT * FROM tmp_ftbl ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 186:
SELECT count(*) FROM tmp_ftbl; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 187:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  |  __spd_url   
----+----+-------+----+------------------------+--------------------+----+-----+--------------
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo | /source_svr/
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo | /source_svr/
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo | /source_svr/
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo | /source_svr/
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo | /source_svr/
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo | /source_svr/
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo | /source_svr/
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo | /source_svr/
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo | /source_svr/
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo | /source_svr/
(10 rows)

--Testcase 188:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 189:
INSERT INTO tmp_ftbl
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 190:
SELECT count(*) FROM tmp_ftbl; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 191:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 192:
DROP DATASOURCE TABLE ft1__source_svr__0;
--Testcase 193:
DROP FOREIGN TABLE ft1__source_svr__0;
--Testcase 194:
DROP FOREIGN TABLE ft1;
--Testcase 195:
DROP DATASOURCE TABLE tmp_ftbl;
--Testcase 196:
DROP FOREIGN TABLE tmp_ftbl;
-- ===================================================================
-- MIGRATE REPLACE, single server without any SERVER OPTION
-- Can not MIGRATE data to mysql_fdw and parquet_s3_fdw without any OPTIONS.
--		- mysql_fdw requires 'dbname' option
--		- parquet_s3_fdw requires 'dirname' option
-- ===================================================================
-- pre-condition: create foreign tables for source table
-- Create source multi-tenant table
--Testcase 197:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text,
	__spd_url text
) SERVER pgspider_core_srv;
--Testcase 198:
CREATE FOREIGN TABLE ft1__source_svr__0 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 199:
CREATE DATASOURCE TABLE ft1__source_svr__0;
-- Init data for source datasource
--Testcase 200:
INSERT INTO ft1__source_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 201:
\det+
                                                 List of foreign tables
 Schema |       Table        |      Server       |                      FDW options                       | Description 
--------+--------------------+-------------------+--------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                        | 
 public | ft1__source_svr__0 | source_svr        | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(2 rows)

-- MIGRATE datasource
-- Failed if dest_svr is server of mysql_fdw or parquet_s3_fdw.
-- Failed if dest_svr is objstorage_fdw in cloud, objstorage_fdw cannot create bucket or write permssion
--Testcase 202:
MIGRATE TABLE ft1 REPLACE SERVER dest_svr;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1124: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
-- foreign table of source server has been removed,
-- foreign table of destination server is created.
--Testcase 203:
\det+
                                                 List of foreign tables
 Schema |       Table        |      Server       |                      FDW options                       | Description 
--------+--------------------+-------------------+--------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                        | 
 public | ft1__source_svr__0 | source_svr        | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(2 rows)

-- Validate new datasource:
-- When dest_svr is the server of mysql_fdw or parquet_s3_fdw, this validation will not work correctly due to failed MIGRATE.
-- create temp foreign table to check data of source table which in source server
--Testcase 204:
CREATE FOREIGN TABLE tmp_ftbl (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
--Testcase 205:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  |  __spd_url   
----+----+-------+----+------------------------+--------------------+----+-----+--------------
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo | /source_svr/
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo | /source_svr/
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo | /source_svr/
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo | /source_svr/
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo | /source_svr/
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo | /source_svr/
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo | /source_svr/
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo | /source_svr/
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo | /source_svr/
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo | /source_svr/
(10 rows)

--Testcase 206:
SELECT count(*) FROM ft1; -- It should return: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 207:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 208:
SELECT count(*) FROM ft1; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

-- Clean up datasources
--Testcase 209:
DROP DATASOURCE TABLE tmp_ftbl;
--Testcase 210:
DROP FOREIGN TABLE tmp_ftbl;
--Testcase 211:
DROP DATASOURCE TABLE ft1;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1174: ERROR:  Does not support DROP DATASOURCE TABLE command for multitenant foreign table.
--Testcase 212:
DROP FOREIGN TABLE ft1;
-- ===================================================================
-- MIGRATE REPLACE, single server with SERVER OPTION
-- ===================================================================
-- pre-condition: create foreign tables for source table
-- Create source multi-tenant table
--Testcase 213:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text,
	__spd_url text
) SERVER pgspider_core_srv;
--Testcase 214:
CREATE FOREIGN TABLE ft1__source_svr__0 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1206: ERROR:  relation "ft1__source_svr__0" already exists
-- Create source datasource
--Testcase 215:
CREATE DATASOURCE TABLE ft1__source_svr__0;
-- Init data for source datasource
--Testcase 216:
INSERT INTO ft1__source_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 217:
\det+
                                                 List of foreign tables
 Schema |       Table        |      Server       |                      FDW options                       | Description 
--------+--------------------+-------------------+--------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                        | 
 public | ft1__source_svr__0 | source_svr        | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(2 rows)

-- MIGRATE datasource
--Testcase 218:
MIGRATE TABLE ft1 REPLACE SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- foreign table of source server has been removed,
-- foreign table of destination server is created.
--Testcase 219:
\det+
                                      List of foreign tables
 Schema | Table |  Server  |                      FDW options                       | Description 
--------+-------+----------+--------------------------------------------------------+-------------
 public | ft1   | dest_svr | (filename 'data/avro/migrate_des.avro', format 'avro') | 
(1 row)

-- Validate new datasource:
-- create temp foreign table to check data of source table which in source server
--Testcase 220:
CREATE FOREIGN TABLE tmp_ftbl (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
--Testcase 221:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 222:
SELECT count(*) FROM ft1; -- It should return: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 223:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 224:
SELECT count(*) FROM ft1; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

-- Clean up datasources
--Testcase 225:
DROP DATASOURCE TABLE tmp_ftbl;
--Testcase 226:
DROP FOREIGN TABLE tmp_ftbl;
--Testcase 227:
DROP DATASOURCE TABLE ft1;
--Testcase 228:
DROP FOREIGN TABLE ft1;
-- ===================================================================
-- MIGRATE TO, single server without any SERVER OPTION
-- Can not MIGRATE data to mysql_fdw and parquet_s3_fdw without any OPTIONS.
--		- mysql_fdw requires 'dbname' option
--		- parquet_s3_fdw requires 'dirname' option
-- ===================================================================
-- pre-condition: create multitenant and foreign table for source table
--Testcase 229:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text,
	__spd_url text
) SERVER pgspider_core_srv;
--Testcase 230:
CREATE FOREIGN TABLE ft1__source_svr__0 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 231:
CREATE DATASOURCE TABLE ft1__source_svr__0;
-- Init data for source datasource
--Testcase 232:
INSERT INTO ft1__source_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 233:
\det+
                                                 List of foreign tables
 Schema |       Table        |      Server       |                      FDW options                       | Description 
--------+--------------------+-------------------+--------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                        | 
 public | ft1__source_svr__0 | source_svr        | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(2 rows)

-- MIGRATE datasource
-- Failed if dest_svr is server of mysql_fdw or parquet_s3_fdw.
-- Failed if dest_svr is objstorage_fdw in cloud, objstorage_fdw cannot create bucket or write permssion
--Testcase 234:
MIGRATE TABLE ft1 TO ft2 SERVER dest_svr;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1340: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
-- foreign table of source server is kept
-- foreign table of destination server is created
--Testcase 235:
\det+
                                                 List of foreign tables
 Schema |       Table        |      Server       |                      FDW options                       | Description 
--------+--------------------+-------------------+--------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                        | 
 public | ft1__source_svr__0 | source_svr        | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(2 rows)

-- Validate new datasource
-- When dest_svr is the server of mysql_fdw or parquet_s3_fdw, this validation will not work correctly due to failed MIGRATE.
--Testcase 236:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  |  __spd_url   
----+----+-------+----+------------------------+--------------------+----+-----+--------------
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo | /source_svr/
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo | /source_svr/
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo | /source_svr/
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo | /source_svr/
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo | /source_svr/
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo | /source_svr/
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo | /source_svr/
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo | /source_svr/
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo | /source_svr/
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo | /source_svr/
(10 rows)

--Testcase 237:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 238:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1354: ERROR:  relation "ft2" does not exist
LINE 1: SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
                      ^
--Testcase 239:
SELECT count(*) FROM ft2; -- It should return same as ft1: 1000 rows
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1356: ERROR:  relation "ft2" does not exist
LINE 1: SELECT count(*) FROM ft2;
                             ^
-- Insert more data to new datasource
--Testcase 240:
INSERT INTO ft2
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1369: ERROR:  relation "ft2" does not exist
LINE 1: INSERT INTO ft2
                    ^
--Testcase 241:
SELECT count(*) FROM ft2; -- It should return 1010 rows
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1372: ERROR:  relation "ft2" does not exist
LINE 1: SELECT count(*) FROM ft2;
                             ^
--Testcase 242:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 243:
DROP DATASOURCE TABLE ft1__source_svr__0;
--Testcase 244:
DROP FOREIGN TABLE ft1__source_svr__0;
--Testcase 245:
DROP FOREIGN TABLE ft1;
--Testcase 246:
DROP DATASOURCE TABLE ft2;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1384: ERROR:  relation "ft2" does not exist
--Testcase 247:
DROP FOREIGN TABLE ft2;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1386: ERROR:  foreign table "ft2" does not exist
-- ===================================================================
-- MIGRATE TO, single server with SERVER OPTION
-- ===================================================================
-- pre-condition: create multitenant and foreign table for source table
--Testcase 248:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text,
	__spd_url text
) SERVER pgspider_core_srv;
--Testcase 249:
CREATE FOREIGN TABLE ft1__source_svr__0 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 250:
CREATE DATASOURCE TABLE ft1__source_svr__0;
-- Init data for source datasource
--Testcase 251:
INSERT INTO ft1__source_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 252:
\det+
                                                 List of foreign tables
 Schema |       Table        |      Server       |                      FDW options                       | Description 
--------+--------------------+-------------------+--------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                        | 
 public | ft1__source_svr__0 | source_svr        | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(2 rows)

-- MIGRATE datasource
--Testcase 253:
MIGRATE TABLE ft1 TO ft2 SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- foreign table of source server is kept
-- foreign table of destination server is created
--Testcase 254:
\det+
                                                 List of foreign tables
 Schema |       Table        |      Server       |                      FDW options                       | Description 
--------+--------------------+-------------------+--------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                        | 
 public | ft1__source_svr__0 | source_svr        | (filename 'data/avro/migrate_src.avro', format 'avro') | 
 public | ft2                | dest_svr          | (filename 'data/avro/migrate_des.avro', format 'avro') | 
(3 rows)

-- Validate new datasource
--Testcase 255:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  |  __spd_url   
----+----+-------+----+------------------------+--------------------+----+-----+--------------
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo | /source_svr/
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo | /source_svr/
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo | /source_svr/
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo | /source_svr/
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo | /source_svr/
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo | /source_svr/
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo | /source_svr/
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo | /source_svr/
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo | /source_svr/
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo | /source_svr/
(10 rows)

--Testcase 256:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 257:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 258:
SELECT count(*) FROM ft2; -- It should return same as ft1: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 259:
INSERT INTO ft2
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 260:
SELECT count(*) FROM ft2; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 261:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 262:
DROP DATASOURCE TABLE ft1__source_svr__0;
--Testcase 263:
DROP FOREIGN TABLE ft1__source_svr__0;
--Testcase 264:
DROP FOREIGN TABLE ft1;
--Testcase 265:
DROP DATASOURCE TABLE ft2;
--Testcase 266:
DROP FOREIGN TABLE ft2;
-- ===================================================================
-- MIGRATE TO has USE_MULTITENANT_SERVER option, single server without any SERVER OPTION
-- Can not MIGRATE data to mysql_fdw and parquet_s3_fdw without any OPTIONS.
--		- mysql_fdw requires 'dbname' option
--		- parquet_s3_fdw requires 'dirname' option
-- ===================================================================
-- pre-condition: create multitenant and foreign table for source table
--Testcase 267:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text,
	__spd_url text
) SERVER pgspider_core_srv;
--Testcase 268:
CREATE FOREIGN TABLE ft1__source_svr__0 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 269:
CREATE DATASOURCE TABLE ft1__source_svr__0;
-- Init data for source datasource
--Testcase 270:
INSERT INTO ft1__source_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 271:
\det+
                                                 List of foreign tables
 Schema |       Table        |      Server       |                      FDW options                       | Description 
--------+--------------------+-------------------+--------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                        | 
 public | ft1__source_svr__0 | source_svr        | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(2 rows)

-- MIGRATE datasource
-- Failed if dest_svr is server of mysql_fdw or parquet_s3_fdw.
-- Failed if dest_svr is objstorage_fdw in cloud, objstorage_fdw cannot create bucket or write permssion
--Testcase 272:
MIGRATE TABLE ft1 TO ft2 OPTIONS (USE_MULTITENANT_SERVER 'new_pgspider_core_svr') SERVER dest_svr;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1544: ERROR:  objstorage_fdw: MakeObjStorageHandle - The specified bucket does not exist
-- New 'new_pgspider_core_svr' is created
--Testcase 273:
\des+
                                                                                     List of foreign servers
       Name        |       Owner        | Foreign-data wrapper | Access privileges | Type | Version |                                 FDW options                                  | Description 
-------------------+--------------------+----------------------+-------------------+------+---------+------------------------------------------------------------------------------+-------------
 dest_svr          | objstorage_fdw_ddl | objstorage_fdw       |                   |      |         | (storage_type 's3', endpoint 'http://127.0.0.1:9010', suppress_retry 'true') | 
 pgspider_core_srv | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 pgspider_core_svr | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 source_svr        | objstorage_fdw_ddl | objstorage_fdw       |                   |      |         | (storage_type 's3', endpoint 'http://127.0.0.1:9000', suppress_retry 'true') | 
(4 rows)

-- foreign table of source server is kept
-- multi-tenant table of pgspider core server is created,
-- name of server is set by USE_MULTITENANT_SERVER option
-- Create new ft2 multitenant
-- Child node is created with name: ft2__dest_svr__0
--Testcase 274:
\det+
                                                 List of foreign tables
 Schema |       Table        |      Server       |                      FDW options                       | Description 
--------+--------------------+-------------------+--------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                        | 
 public | ft1__source_svr__0 | source_svr        | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(2 rows)

-- Validate new datasource
-- When dest_svr is the server of mysql_fdw or parquet_s3_fdw, this validation will not work correctly due to failed MIGRATE.
--Testcase 275:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1561: ERROR:  relation "ft2" does not exist
LINE 1: SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
                      ^
--Testcase 276:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 277:
SELECT count(*) FROM ft2; -- It should return 1000 rows
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1567: ERROR:  relation "ft2" does not exist
LINE 1: SELECT count(*) FROM ft2;
                             ^
--Testcase 278:
SELECT count(*) FROM ft2__dest_svr__0; -- It should return same as ft1: 1000 rows
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1570: ERROR:  relation "ft2__dest_svr__0" does not exist
LINE 1: SELECT count(*) FROM ft2__dest_svr__0;
                             ^
-- Insert more data to new datasource
--Testcase 279:
INSERT INTO ft2__dest_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1583: ERROR:  relation "ft2__dest_svr__0" does not exist
LINE 1: INSERT INTO ft2__dest_svr__0
                    ^
--Testcase 280:
SELECT count(*) FROM ft2__dest_svr__0; -- It should return 1010 rows
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1586: ERROR:  relation "ft2__dest_svr__0" does not exist
LINE 1: SELECT count(*) FROM ft2__dest_svr__0;
                             ^
--Testcase 281:
SELECT count(*) FROM ft2; -- It should return 1010 rows
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1588: ERROR:  relation "ft2" does not exist
LINE 1: SELECT count(*) FROM ft2;
                             ^
--Testcase 282:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 283:
DROP DATASOURCE TABLE ft1__source_svr__0;
--Testcase 284:
DROP FOREIGN TABLE ft1__source_svr__0;
--Testcase 285:
DROP FOREIGN TABLE ft1;
--Testcase 286:
DROP DATASOURCE TABLE ft2__dest_svr__0;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1600: ERROR:  relation "ft2__dest_svr__0" does not exist
--Testcase 287:
DROP FOREIGN TABLE ft2__dest_svr__0;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1602: ERROR:  foreign table "ft2__dest_svr__0" does not exist
--Testcase 288:
DROP FOREIGN TABLE ft2;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1604: ERROR:  foreign table "ft2" does not exist
--Testcase 289:
DROP SERVER new_pgspider_core_svr CASCADE;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1606: ERROR:  server "new_pgspider_core_svr" does not exist
-- ===================================================================
-- MIGRATE TO has USE_MULTITENANT_SERVER option, single server with SERVER OPTION
-- ===================================================================
-- pre-condition: create multitenant and foreign table for source table
--Testcase 290:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text,
	__spd_url text
) SERVER pgspider_core_srv;
--Testcase 291:
CREATE FOREIGN TABLE ft1__source_svr__0 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 292:
CREATE DATASOURCE TABLE ft1__source_svr__0;
-- Init data for source datasource
--Testcase 293:
INSERT INTO ft1__source_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- Foreign table is created for source server.
--Testcase 294:
\det+
                                                 List of foreign tables
 Schema |       Table        |      Server       |                      FDW options                       | Description 
--------+--------------------+-------------------+--------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv |                                                        | 
 public | ft1__source_svr__0 | source_svr        | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(2 rows)

-- MIGRATE datasource
--Testcase 295:
MIGRATE TABLE ft1 TO ft2 OPTIONS (USE_MULTITENANT_SERVER 'new_pgspider_core_svr') SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
-- New 'new_pgspider_core_svr' is created
--Testcase 296:
\des+
                                                                                       List of foreign servers
         Name          |       Owner        | Foreign-data wrapper | Access privileges | Type | Version |                                 FDW options                                  | Description 
-----------------------+--------------------+----------------------+-------------------+------+---------+------------------------------------------------------------------------------+-------------
 dest_svr              | objstorage_fdw_ddl | objstorage_fdw       |                   |      |         | (storage_type 's3', endpoint 'http://127.0.0.1:9010', suppress_retry 'true') | 
 new_pgspider_core_svr | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 pgspider_core_srv     | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 pgspider_core_svr     | objstorage_fdw_ddl | pgspider_core_fdw    |                   |      |         |                                                                              | 
 source_svr            | objstorage_fdw_ddl | objstorage_fdw       |                   |      |         | (storage_type 's3', endpoint 'http://127.0.0.1:9000', suppress_retry 'true') | 
(5 rows)

-- foreign table of source server is kept
-- multi-tenant table of pgspider core server is created,
-- name of server is set by USE_MULTITENANT_SERVER option
-- Create new ft2 multitenant
-- Child node is created with name: ft2__dest_svr__0
--Testcase 297:
\det+
                                                   List of foreign tables
 Schema |       Table        |        Server         |                      FDW options                       | Description 
--------+--------------------+-----------------------+--------------------------------------------------------+-------------
 public | ft1                | pgspider_core_srv     |                                                        | 
 public | ft1__source_svr__0 | source_svr            | (filename 'data/avro/migrate_src.avro', format 'avro') | 
 public | ft2                | new_pgspider_core_svr |                                                        | 
 public | ft2__dest_svr__0   | dest_svr              | (filename 'data/avro/migrate_des.avro', format 'avro') | 
(4 rows)

-- Validate new datasource
--Testcase 298:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  | __spd_url  
----+----+-------+----+------------------------+--------------------+----+-----+------------
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo | /dest_svr/
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo | /dest_svr/
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo | /dest_svr/
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo | /dest_svr/
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo | /dest_svr/
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo | /dest_svr/
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo | /dest_svr/
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo | /dest_svr/
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo | /dest_svr/
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo | /dest_svr/
(10 rows)

--Testcase 299:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 300:
SELECT count(*) FROM ft2; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

--Testcase 301:
SELECT count(*) FROM ft2__dest_svr__0; -- It should return same as ft1: 1000 rows
 count 
-------
  1000
(1 row)

-- Insert more data to new datasource
--Testcase 302:
INSERT INTO ft2__dest_svr__0
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       'f',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1000, 1009) id;
--Testcase 303:
SELECT count(*) FROM ft2__dest_svr__0; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 304:
SELECT count(*) FROM ft2; -- It should return 1010 rows
 count 
-------
  1010
(1 row)

--Testcase 305:
SELECT count(*) FROM ft1; -- It should return 1000 rows
 count 
-------
  1000
(1 row)

-- Clean up datasources
--Testcase 306:
DROP DATASOURCE TABLE ft2__dest_svr__0;
--Testcase 307:
DROP FOREIGN TABLE ft2__dest_svr__0;
--Testcase 308:
DROP FOREIGN TABLE ft2;
--Testcase 309:
DROP DATASOURCE TABLE ft1__source_svr__0;
--Testcase 310:
DROP FOREIGN TABLE ft1__source_svr__0;
--Testcase 311:
DROP FOREIGN TABLE ft1;
--Testcase 312:
DROP SERVER new_pgspider_core_svr CASCADE;
-- ===================================================================
-- MIGRATE to an existed table in destination: same name but different schema with source table
-- ===================================================================
-- pre-condition: create foreign table for source table
--Testcase 313:
CREATE FOREIGN TABLE ft1 (
	c1 int NOT NULL,
	c2 int NOT NULL,
	c3 text,
	c4 bool,
	c5 timestamptz,
	c6 double precision,
	c7 text,
	c8 text
) SERVER source_svr OPTIONS (:src_foreigntable_opt);
-- Create source datasource
--Testcase 314:
CREATE DATASOURCE TABLE ft1;
-- Init data for source datasource
--Testcase 315:
INSERT INTO ft1
	SELECT id,
	       id % 10,
	       to_char(id, 'FM00000'),
	       't',
	       '1980-01-01'::timestamptz + ((id % 1000) || ' minute')::interval,
	       (id::double precision) / 3,
	       id % 10,
	       'foo'
	FROM generate_series(1, 1000) id;
-- pre-condition: create an existed table in destination: same name but different schema with source table
--Testcase 316:
CREATE FOREIGN TABLE existed_ft1 (
	c1 int NOT NULL,
	c2 bool,
	c3 double precision,
	c4 text
) SERVER dest_svr OPTIONS (:dest_foreigntable_opt);
--Testcase 317:
CREATE DATASOURCE TABLE existed_ft1;
--Testcase 318:
INSERT INTO existed_ft1
	SELECT id,
	       't',
	       (id::double precision) / 3,
	       id % 10
	FROM generate_series(1, 5) id;
--Testcase 319:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 320:
SELECT * FROM existed_ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |         c3         | c4 
----+----+--------------------+----
  1 | t  | 0.3333333333333333 | 1
  2 | t  | 0.6666666666666666 | 2
  3 | t  |                  1 | 3
  4 | t  | 1.3333333333333333 | 4
  5 | t  | 1.6666666666666667 | 5
(5 rows)

-- list all foreign tables
--Testcase 321:
\det+
                                          List of foreign tables
 Schema |    Table    |   Server   |                      FDW options                       | Description 
--------+-------------+------------+--------------------------------------------------------+-------------
 public | existed_ft1 | dest_svr   | (filename 'data/avro/migrate_des.avro', format 'avro') | 
 public | ft1         | source_svr | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(2 rows)

-- MIGRATE datasource
--Testcase 322:
MIGRATE TABLE ft1 TO ft2 SERVER dest_svr OPTIONS (:dest_foreigntable_opt); -- failed
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1787: ERROR:  objstorage_fdw: file 'data/avro/migrate_des.avro' already exist.
--Testcase 323:
SELECT * FROM ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |  c3   | c4 |           c5           |         c6         | c7 | c8  
----+----+-------+----+------------------------+--------------------+----+-----
  1 |  1 | 00001 | t  | 1980-01-01 00:01:00+00 | 0.3333333333333333 | 1  | foo
  2 |  2 | 00002 | t  | 1980-01-01 00:02:00+00 | 0.6666666666666666 | 2  | foo
  3 |  3 | 00003 | t  | 1980-01-01 00:03:00+00 |                  1 | 3  | foo
  4 |  4 | 00004 | t  | 1980-01-01 00:04:00+00 | 1.3333333333333333 | 4  | foo
  5 |  5 | 00005 | t  | 1980-01-01 00:05:00+00 | 1.6666666666666667 | 5  | foo
  6 |  6 | 00006 | t  | 1980-01-01 00:06:00+00 |                  2 | 6  | foo
  7 |  7 | 00007 | t  | 1980-01-01 00:07:00+00 | 2.3333333333333335 | 7  | foo
  8 |  8 | 00008 | t  | 1980-01-01 00:08:00+00 | 2.6666666666666665 | 8  | foo
  9 |  9 | 00009 | t  | 1980-01-01 00:09:00+00 |                  3 | 9  | foo
 10 |  0 | 00010 | t  | 1980-01-01 00:10:00+00 | 3.3333333333333335 | 0  | foo
(10 rows)

--Testcase 324:
SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1791: ERROR:  relation "ft2" does not exist
LINE 1: SELECT * FROM ft2 ORDER BY c1 LIMIT 10;
                      ^
--Testcase 325:
SELECT * FROM existed_ft1 ORDER BY c1 LIMIT 10;
 c1 | c2 |         c3         | c4 
----+----+--------------------+----
  1 | t  | 0.3333333333333333 | 1
  2 | t  | 0.6666666666666666 | 2
  3 | t  |                  1 | 3
  4 | t  | 1.3333333333333333 | 4
  5 | t  | 1.6666666666666667 | 5
(5 rows)

-- list all foreign tables
--Testcase 326:
\det+
                                          List of foreign tables
 Schema |    Table    |   Server   |                      FDW options                       | Description 
--------+-------------+------------+--------------------------------------------------------+-------------
 public | existed_ft1 | dest_svr   | (filename 'data/avro/migrate_des.avro', format 'avro') | 
 public | ft1         | source_svr | (filename 'data/avro/migrate_src.avro', format 'avro') | 
(2 rows)

-- Clean up datasources
--Testcase 327:
DROP DATASOURCE TABLE ft2;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1800: ERROR:  relation "ft2" does not exist
--Testcase 328:
DROP FOREIGN TABLE ft2;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1802: ERROR:  foreign table "ft2" does not exist
--Testcase 329:
DROP DATASOURCE TABLE existed_ft1;
--Testcase 330:
DROP FOREIGN TABLE existed_ft1;
--Testcase 331:
DROP DATASOURCE TABLE ft1;
--Testcase 332:
DROP FOREIGN TABLE ft1;
--------------------------- End tests -----------------------------------------
DROP FUNCTION selector(int, text);
--Testcase 333:
DROP EXTENSION pgspider_core_fdw CASCADE;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1816: NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to server pgspider_core_svr
drop cascades to server pgspider_core_srv
drop cascades to user mapping for public on server pgspider_core_srv
--Testcase 334:
DROP EXTENSION objstorage_fdw CASCADE;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1818: NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to server source_svr
drop cascades to user mapping for objstorage_fdw_ddl on server source_svr
drop cascades to server dest_svr
drop cascades to user mapping for objstorage_fdw_ddl on server dest_svr
--Testcase 335:
DROP EXTENSION IF EXISTS objstorage_fdw CASCADE;
psql:sql/migrate/objstorage/objstorage_fdw_migrate.sql:1820: NOTICE:  extension "objstorage_fdw" does not exist, skipping
RESET ROLE;
DROP ROLE objstorage_fdw_ddl;
