--Testcase 1:
DELETE FROM pg_spd_node_info;
--SELECT pg_sleep(15);
--Testcase 183:
CREATE EXTENSION pgspider_core_fdw;
--Testcase 184:
CREATE SERVER pgspider_svr FOREIGN DATA WRAPPER pgspider_core_fdw OPTIONS (host '127.0.0.1',port '50849');
--Testcase 185:
CREATE USER mapping for public server pgspider_svr OPTIONS(user 'postgres',password 'postgres');
--Testcase 186:
CREATE FOREIGN TABLE test1 (i int,__spd_url text) SERVER pgspider_svr;
--Testcase 187:
CREATE EXTENSION postgres_fdw;
--Testcase 188:
CREATE EXTENSION file_fdw;
--Testcase 189:
CREATE EXTENSION sqlite_fdw;
--Testcase 190:
CREATE EXTENSION tinybrace_fdw;
--Testcase 191:
CREATE EXTENSION mysql_fdw;
--Testcase 192:
CREATE SERVER file_svr FOREIGN DATA WRAPPER file_fdw;
--Testcase 193:
CREATE FOREIGN TABLE filetbl__file_svr__0 (i int) SERVER file_svr options(filename '/tmp/pgtest.csv');
--Testcase 194:
CREATE FOREIGN TABLE filetbl (i int,__spd_url text) SERVER pgspider_svr;
--Testcase 2:
SELECT * FROM filetbl;
 i | __spd_url  
---+------------
 1 | /file_svr/
 2 | /file_svr/
 3 | /file_svr/
 4 | /file_svr/
(4 rows)

--get version
--Testcase 295:
\df pgspider_core*
                                  List of functions
 Schema |            Name             | Result data type | Argument data types | Type 
--------+-----------------------------+------------------+---------------------+------
 public | pgspider_core_fdw_handler   | fdw_handler      |                     | func
 public | pgspider_core_fdw_validator | void             | text[], oid         | func
 public | pgspider_core_fdw_version   | integer          |                     | func
(3 rows)

--Testcase 296:
SELECT * FROM public.pgspider_core_fdw_version();
 pgspider_core_fdw_version 
---------------------------
                     20200
(1 row)

--Testcase 297:
SELECT pgspider_core_fdw_version();
 pgspider_core_fdw_version 
---------------------------
                     20200
(1 row)

--Testcase 196:
CREATE FOREIGN TABLE test1__file_svr__0 (i int) SERVER file_svr options(filename '/tmp/pgtest.csv');
--Testcase 3:
SELECT * FROM test1;
 i | __spd_url  
---+------------
 1 | /file_svr/
 2 | /file_svr/
 3 | /file_svr/
 4 | /file_svr/
(4 rows)

--Testcase 197:
CREATE FOREIGN TABLE test1__file_svr__1 (i int) SERVER file_svr options(filename '/tmp/pgtest.csv');
--Testcase 4:
SELECT * FROM test1 order by i,__spd_url;
 i | __spd_url  
---+------------
 1 | /file_svr/
 1 | /file_svr/
 2 | /file_svr/
 2 | /file_svr/
 3 | /file_svr/
 3 | /file_svr/
 4 | /file_svr/
 4 | /file_svr/
(8 rows)

--Testcase 5:
SELECT * FROM test1 IN ('/file_svr/') ORDER BY i,__spd_url;
 i | __spd_url  
---+------------
 1 | /file_svr/
 1 | /file_svr/
 2 | /file_svr/
 2 | /file_svr/
 3 | /file_svr/
 3 | /file_svr/
 4 | /file_svr/
 4 | /file_svr/
(8 rows)

--Testcase 6:
SELECT * FROM test1 IN ('/file_svr/') where i = 1;
 i | __spd_url  
---+------------
 1 | /file_svr/
 1 | /file_svr/
(2 rows)

--Testcase 198:
CREATE SERVER tiny_svr FOREIGN DATA WRAPPER tinybrace_fdw OPTIONS (host '127.0.0.1',port '5100', dbname 'test.db');
--Testcase 199:
CREATE USER mapping for public server tiny_svr OPTIONS(username 'user',password 'testuser');
--Testcase 200:
CREATE FOREIGN TABLE test1__tiny_svr__0 (i int) SERVER tiny_svr OPTIONS(table_name 'test1');
--Testcase 7:
SELECT * FROM test1__tiny_svr__0 ORDER BY i;
 i 
---
 1
(1 row)

--Testcase 8:
SELECT * FROM test1 ORDER BY i,__spd_url;
 i | __spd_url  
---+------------
 1 | /file_svr/
 1 | /file_svr/
 1 | /tiny_svr/
 2 | /file_svr/
 2 | /file_svr/
 3 | /file_svr/
 3 | /file_svr/
 4 | /file_svr/
 4 | /file_svr/
(9 rows)

--Testcase 9:
SELECT * FROM test1 IN ('/tiny_svr/');
 i | __spd_url  
---+------------
 1 | /tiny_svr/
(1 row)

--Testcase 10:
SELECT * FROM test1 IN ('/tiny_svr/') where i = 1;
 i | __spd_url  
---+------------
 1 | /tiny_svr/
(1 row)

--Testcase 201:
CREATE SERVER post_svr FOREIGN DATA WRAPPER postgres_fdw OPTIONS (host '127.0.0.1',port '15432');
--Testcase 202:
CREATE USER mapping for public server post_svr OPTIONS(user 'postgres',password 'postgres');
--Testcase 203:
CREATE FOREIGN TABLE test1__post_svr__0 (i int) SERVER post_svr OPTIONS(table_name 'test1');
--Testcase 11:
SELECT * FROM test1__post_svr__0 ORDER BY i;
  i   
------
 1111
(1 row)

--Testcase 12:
SELECT * FROM test1 ORDER BY i,__spd_url;
  i   | __spd_url  
------+------------
    1 | /file_svr/
    1 | /file_svr/
    1 | /tiny_svr/
    2 | /file_svr/
    2 | /file_svr/
    3 | /file_svr/
    3 | /file_svr/
    4 | /file_svr/
    4 | /file_svr/
 1111 | /post_svr/
(10 rows)

--Testcase 13:
SELECT * FROM test1 IN ('/post_svr/') ORDER BY i,__spd_url;
  i   | __spd_url  
------+------------
 1111 | /post_svr/
(1 row)

--Testcase 14:
SELECT * FROM test1 IN ('/post_svr/') where i = 1 ORDER BY i,__spd_url;
 i | __spd_url 
---+-----------
(0 rows)

--Testcase 204:
CREATE SERVER sqlite_svr FOREIGN DATA WRAPPER sqlite_fdw OPTIONS (database '/tmp/pgtest.db');
--Testcase 205:
CREATE FOREIGN TABLE test1__sqlite_svr__0 (i int) SERVER sqlite_svr OPTIONS(table 'test1');
--Testcase 15:
SELECT * FROM test1 ORDER BY i,__spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /file_svr/
     1 | /file_svr/
     1 | /sqlite_svr/
     1 | /tiny_svr/
     2 | /file_svr/
     2 | /file_svr/
     3 | /file_svr/
     3 | /file_svr/
     4 | /file_svr/
     4 | /file_svr/
  1111 | /post_svr/
 22222 | /sqlite_svr/
(12 rows)

--Testcase 16:
SELECT * FROM test1 IN ('/sqlite_svr/') ORDER BY i,__spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /sqlite_svr/
 22222 | /sqlite_svr/
(2 rows)

--Testcase 17:
SELECT * FROM test1 IN ('/sqlite_svr/') where i = 4 ORDER BY i,__spd_url;
 i | __spd_url 
---+-----------
(0 rows)

--Testcase 206:
CREATE SERVER mysql_svr FOREIGN DATA WRAPPER mysql_fdw OPTIONS (host '127.0.0.1',port '3306');
--Testcase 207:
CREATE USER mapping for public server mysql_svr OPTIONS(username 'root',password 'Mysql_1234');
--Testcase 208:
CREATE FOREIGN TABLE test1__mysql_svr__0 (i int) SERVER mysql_svr OPTIONS(dbname 'test',table_name 'test1');
--Testcase 18:
SELECT * FROM test1 ORDER BY i,__spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /file_svr/
     1 | /file_svr/
     1 | /mysql_svr/
     1 | /sqlite_svr/
     1 | /tiny_svr/
     2 | /file_svr/
     2 | /file_svr/
     3 | /file_svr/
     3 | /file_svr/
     4 | /file_svr/
     4 | /file_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
  1111 | /post_svr/
 22222 | /sqlite_svr/
(17 rows)

--Testcase 19:
SELECT * FROM test1 IN ('/mysql_svr/') ORDER BY i,__spd_url;
  i  |  __spd_url  
-----+-------------
   1 | /mysql_svr/
 777 | /mysql_svr/
 777 | /mysql_svr/
 777 | /mysql_svr/
 777 | /mysql_svr/
(5 rows)

--Testcase 20:
SELECT * FROM test1 where i = 1 ORDER BY i,__spd_url;
 i |  __spd_url   
---+--------------
 1 | /file_svr/
 1 | /file_svr/
 1 | /mysql_svr/
 1 | /sqlite_svr/
 1 | /tiny_svr/
(5 rows)

--Testcase 21:
SELECT * FROM test1 IN ('/mysql_svr/') where i = 5 ORDER BY i,__spd_url;
 i | __spd_url 
---+-----------
(0 rows)

--Testcase 22:
SELECT * FROM test1 ORDER BY i,__spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /file_svr/
     1 | /file_svr/
     1 | /mysql_svr/
     1 | /sqlite_svr/
     1 | /tiny_svr/
     2 | /file_svr/
     2 | /file_svr/
     3 | /file_svr/
     3 | /file_svr/
     4 | /file_svr/
     4 | /file_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
  1111 | /post_svr/
 22222 | /sqlite_svr/
(17 rows)

--Testcase 23:
SELECT * FROM test1 IN ('/test2/') ORDER BY i,__spd_url;
 i | __spd_url 
---+-----------
(0 rows)

--Testcase 24:
SELECT * FROM test1 order by i,__spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /file_svr/
     1 | /file_svr/
     1 | /mysql_svr/
     1 | /sqlite_svr/
     1 | /tiny_svr/
     2 | /file_svr/
     2 | /file_svr/
     3 | /file_svr/
     3 | /file_svr/
     4 | /file_svr/
     4 | /file_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
  1111 | /post_svr/
 22222 | /sqlite_svr/
(17 rows)

--Testcase 25:
SELECT * FROM test1 IN ('/file_svr/') ORDER BY i,__spd_url;
 i | __spd_url  
---+------------
 1 | /file_svr/
 1 | /file_svr/
 2 | /file_svr/
 2 | /file_svr/
 3 | /file_svr/
 3 | /file_svr/
 4 | /file_svr/
 4 | /file_svr/
(8 rows)

--Testcase 26:
SELECT * FROM test1 IN ('/file_svr/') where i = 1 ORDER BY i,__spd_url;
 i | __spd_url  
---+------------
 1 | /file_svr/
 1 | /file_svr/
(2 rows)

--Testcase 27:
SELECT * FROM test1__tiny_svr__0 order by i;
 i 
---
 1
(1 row)

--Testcase 28:
SELECT * FROM test1 ORDER BY i,__spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /file_svr/
     1 | /file_svr/
     1 | /mysql_svr/
     1 | /sqlite_svr/
     1 | /tiny_svr/
     2 | /file_svr/
     2 | /file_svr/
     3 | /file_svr/
     3 | /file_svr/
     4 | /file_svr/
     4 | /file_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
  1111 | /post_svr/
 22222 | /sqlite_svr/
(17 rows)

--Testcase 29:
SELECT * FROM test1 IN ('/tiny_svr/');
 i | __spd_url  
---+------------
 1 | /tiny_svr/
(1 row)

--Testcase 30:
SELECT * FROM test1 IN ('/tiny_svr/') where i = 1;
 i | __spd_url  
---+------------
 1 | /tiny_svr/
(1 row)

--Testcase 31:
SELECT * FROM test1__post_svr__0 order by i;
  i   
------
 1111
(1 row)

--Testcase 32:
SELECT * FROM test1 ORDER BY i,__spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /file_svr/
     1 | /file_svr/
     1 | /mysql_svr/
     1 | /sqlite_svr/
     1 | /tiny_svr/
     2 | /file_svr/
     2 | /file_svr/
     3 | /file_svr/
     3 | /file_svr/
     4 | /file_svr/
     4 | /file_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
  1111 | /post_svr/
 22222 | /sqlite_svr/
(17 rows)

--Testcase 33:
SELECT * FROM test1 IN ('/post_svr/') ORDER BY i,__spd_url;
  i   | __spd_url  
------+------------
 1111 | /post_svr/
(1 row)

--Testcase 34:
SELECT * FROM test1 IN ('/post_svr/') where i = 1 ORDER BY i,__spd_url;
 i | __spd_url 
---+-----------
(0 rows)

--Testcase 35:
SELECT * FROM test1 ORDER BY i,__spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /file_svr/
     1 | /file_svr/
     1 | /mysql_svr/
     1 | /sqlite_svr/
     1 | /tiny_svr/
     2 | /file_svr/
     2 | /file_svr/
     3 | /file_svr/
     3 | /file_svr/
     4 | /file_svr/
     4 | /file_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
  1111 | /post_svr/
 22222 | /sqlite_svr/
(17 rows)

--Testcase 36:
SELECT * FROM test1 IN ('/sqlite_svr/') ORDER BY i,__spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /sqlite_svr/
 22222 | /sqlite_svr/
(2 rows)

--Testcase 37:
SELECT * FROM test1 IN ('/sqlite_svr/') where i = 4 ORDER BY i,__spd_url;
 i | __spd_url 
---+-----------
(0 rows)

--Testcase 38:
SELECT * FROM test1 ORDER BY i,__spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /file_svr/
     1 | /file_svr/
     1 | /mysql_svr/
     1 | /sqlite_svr/
     1 | /tiny_svr/
     2 | /file_svr/
     2 | /file_svr/
     3 | /file_svr/
     3 | /file_svr/
     4 | /file_svr/
     4 | /file_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
  1111 | /post_svr/
 22222 | /sqlite_svr/
(17 rows)

--Testcase 39:
SELECT * FROM test1 IN ('/mysql_svr/') ORDER BY i,__spd_url;
  i  |  __spd_url  
-----+-------------
   1 | /mysql_svr/
 777 | /mysql_svr/
 777 | /mysql_svr/
 777 | /mysql_svr/
 777 | /mysql_svr/
(5 rows)

--Testcase 40:
SELECT * FROM test1 where i = 1 ORDER BY i,__spd_url;
 i |  __spd_url   
---+--------------
 1 | /file_svr/
 1 | /file_svr/
 1 | /mysql_svr/
 1 | /sqlite_svr/
 1 | /tiny_svr/
(5 rows)

--Testcase 41:
SELECT * FROM test1 IN ('/mysql_svr/') where i = 5 ORDER BY i,__spd_url;
 i | __spd_url 
---+-----------
(0 rows)

--Testcase 42:
SELECT * FROM test1 IN ('/mysql_svr/', '/sqlite_svr/') ORDER BY  i,__spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /mysql_svr/
     1 | /sqlite_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
 22222 | /sqlite_svr/
(7 rows)

--Testcase 43:
SELECT * FROM test1 UNION ALL SELECT * FROM test1 ORDER BY i,__spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /file_svr/
     1 | /file_svr/
     1 | /file_svr/
     1 | /file_svr/
     1 | /mysql_svr/
     1 | /mysql_svr/
     1 | /sqlite_svr/
     1 | /sqlite_svr/
     1 | /tiny_svr/
     1 | /tiny_svr/
     2 | /file_svr/
     2 | /file_svr/
     2 | /file_svr/
     2 | /file_svr/
     3 | /file_svr/
     3 | /file_svr/
     3 | /file_svr/
     3 | /file_svr/
     4 | /file_svr/
     4 | /file_svr/
     4 | /file_svr/
     4 | /file_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
  1111 | /post_svr/
  1111 | /post_svr/
 22222 | /sqlite_svr/
 22222 | /sqlite_svr/
(34 rows)

--Testcase 44:
SELECT * FROM test1 IN ('/mysql_svr/') UNION ALL SELECT * FROM test1 IN ('/mysql_svr/') ORDER BY i,__spd_url;
  i  |  __spd_url  
-----+-------------
   1 | /mysql_svr/
   1 | /mysql_svr/
 777 | /mysql_svr/
 777 | /mysql_svr/
 777 | /mysql_svr/
 777 | /mysql_svr/
 777 | /mysql_svr/
 777 | /mysql_svr/
 777 | /mysql_svr/
 777 | /mysql_svr/
(10 rows)

--Testcase 45:
SELECT * FROM test1 IN ('/mysql_svr/') UNION ALL SELECT * FROM test1 IN ('/sqlite_svr/') ORDER BY i,__spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /mysql_svr/
     1 | /sqlite_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
 22222 | /sqlite_svr/
(7 rows)

--Testcase 46:
SELECT * FROM test1 IN ('/mysql_svr/', '/sqlite_svr/') UNION ALL SELECT * FROM test1 IN ('/mysql_svr/', '/sqlite_svr/') ORDER BY i,__spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /mysql_svr/
     1 | /mysql_svr/
     1 | /sqlite_svr/
     1 | /sqlite_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
 22222 | /sqlite_svr/
 22222 | /sqlite_svr/
(14 rows)

--Testcase 209:
CREATE FOREIGN TABLE test1_1 (i int,__spd_url text) SERVER pgspider_svr;
--Testcase 210:
CREATE FOREIGN TABLE test1_1__tiny_svr__0 (i int) SERVER tiny_svr OPTIONS(table_name 'test1');
--Testcase 211:
CREATE FOREIGN TABLE test1_1__post_svr__0 (i int) SERVER post_svr OPTIONS(table_name 'test1');
--Testcase 212:
CREATE FOREIGN TABLE test1_1__sqlite_svr__0 (i int) SERVER sqlite_svr OPTIONS(table 'test1');
--Testcase 213:
CREATE FOREIGN TABLE test1_1__mysql_svr__0 (i int) SERVER mysql_svr OPTIONS(dbname 'test',table_name 'test1');
--Testcase 47:
SELECT * FROM test1 IN ('/mysql_svr/'), test1_1 IN ('/sqlite_svr/') ORDER BY test1.i,test1.__spd_url,test1_1.i,test1_1.__spd_url;
  i  |  __spd_url  |   i   |  __spd_url   
-----+-------------+-------+--------------
   1 | /mysql_svr/ |     1 | /sqlite_svr/
   1 | /mysql_svr/ | 22222 | /sqlite_svr/
 777 | /mysql_svr/ |     1 | /sqlite_svr/
 777 | /mysql_svr/ |     1 | /sqlite_svr/
 777 | /mysql_svr/ |     1 | /sqlite_svr/
 777 | /mysql_svr/ |     1 | /sqlite_svr/
 777 | /mysql_svr/ | 22222 | /sqlite_svr/
 777 | /mysql_svr/ | 22222 | /sqlite_svr/
 777 | /mysql_svr/ | 22222 | /sqlite_svr/
 777 | /mysql_svr/ | 22222 | /sqlite_svr/
(10 rows)

--Testcase 48:
SELECT * FROM test1 IN ('/sqlite_svr/','/mysql_svr/'), test1_1 IN ('/mysql_svr/','/sqlite_svr/') ORDER BY test1.i,test1.__spd_url,test1_1.i,test1_1.__spd_url;
   i   |  __spd_url   |   i   |  __spd_url   
-------+--------------+-------+--------------
     1 | /mysql_svr/  |     1 | /mysql_svr/
     1 | /mysql_svr/  |     1 | /sqlite_svr/
     1 | /mysql_svr/  |   777 | /mysql_svr/
     1 | /mysql_svr/  |   777 | /mysql_svr/
     1 | /mysql_svr/  |   777 | /mysql_svr/
     1 | /mysql_svr/  |   777 | /mysql_svr/
     1 | /mysql_svr/  | 22222 | /sqlite_svr/
     1 | /sqlite_svr/ |     1 | /mysql_svr/
     1 | /sqlite_svr/ |     1 | /sqlite_svr/
     1 | /sqlite_svr/ |   777 | /mysql_svr/
     1 | /sqlite_svr/ |   777 | /mysql_svr/
     1 | /sqlite_svr/ |   777 | /mysql_svr/
     1 | /sqlite_svr/ |   777 | /mysql_svr/
     1 | /sqlite_svr/ | 22222 | /sqlite_svr/
   777 | /mysql_svr/  |     1 | /mysql_svr/
   777 | /mysql_svr/  |     1 | /mysql_svr/
   777 | /mysql_svr/  |     1 | /mysql_svr/
   777 | /mysql_svr/  |     1 | /mysql_svr/
   777 | /mysql_svr/  |     1 | /sqlite_svr/
   777 | /mysql_svr/  |     1 | /sqlite_svr/
   777 | /mysql_svr/  |     1 | /sqlite_svr/
   777 | /mysql_svr/  |     1 | /sqlite_svr/
   777 | /mysql_svr/  |   777 | /mysql_svr/
   777 | /mysql_svr/  |   777 | /mysql_svr/
   777 | /mysql_svr/  |   777 | /mysql_svr/
   777 | /mysql_svr/  |   777 | /mysql_svr/
   777 | /mysql_svr/  |   777 | /mysql_svr/
   777 | /mysql_svr/  |   777 | /mysql_svr/
   777 | /mysql_svr/  |   777 | /mysql_svr/
   777 | /mysql_svr/  |   777 | /mysql_svr/
   777 | /mysql_svr/  |   777 | /mysql_svr/
   777 | /mysql_svr/  |   777 | /mysql_svr/
   777 | /mysql_svr/  |   777 | /mysql_svr/
   777 | /mysql_svr/  |   777 | /mysql_svr/
   777 | /mysql_svr/  |   777 | /mysql_svr/
   777 | /mysql_svr/  |   777 | /mysql_svr/
   777 | /mysql_svr/  |   777 | /mysql_svr/
   777 | /mysql_svr/  |   777 | /mysql_svr/
   777 | /mysql_svr/  | 22222 | /sqlite_svr/
   777 | /mysql_svr/  | 22222 | /sqlite_svr/
   777 | /mysql_svr/  | 22222 | /sqlite_svr/
   777 | /mysql_svr/  | 22222 | /sqlite_svr/
 22222 | /sqlite_svr/ |     1 | /mysql_svr/
 22222 | /sqlite_svr/ |     1 | /sqlite_svr/
 22222 | /sqlite_svr/ |   777 | /mysql_svr/
 22222 | /sqlite_svr/ |   777 | /mysql_svr/
 22222 | /sqlite_svr/ |   777 | /mysql_svr/
 22222 | /sqlite_svr/ |   777 | /mysql_svr/
 22222 | /sqlite_svr/ | 22222 | /sqlite_svr/
(49 rows)

-- nothing case
--Testcase 49:
SELECT * FROM test1 IN ('/sqlite_svr/','/mysql_svrrrrrr/');
   i   |  __spd_url   
-------+--------------
     1 | /sqlite_svr/
 22222 | /sqlite_svr/
(2 rows)

--Testcase 50:
SELECT * FROM test1 IN ('/mysql_svr/'), test1_1 IN ('/mysql_svr2/') ORDER BY test1.i,test1.__spd_url,test1_1.i,test1_1.__spd_url;
 i | __spd_url | i | __spd_url 
---+-----------+---+-----------
(0 rows)

--Testcase 51:
SELECT * FROM test1 IN ('/mysql_svr2/'), test1_1 IN ('/mysql_svr/') ORDER BY test1.i,test1.__spd_url,test1_1.i,test1_1.__spd_url;
 i | __spd_url | i | __spd_url 
---+-----------+---+-----------
(0 rows)

--Testcase 52:
SELECT * FROM test1 IN ('/mysql_svr2/'), test1_1 IN ('/mysql_svr2/') ORDER BY test1.i,test1.__spd_url,test1_1.i,test1_1.__spd_url;
 i | __spd_url | i | __spd_url 
---+-----------+---+-----------
(0 rows)

--Testcase 53:
SELECT * FROM test1 IN ('/sqlite_svr/','/mysql_svr2/'), test1_1 IN ('/sqlite_svr2/','/mysql_svr/') ORDER BY test1.i,test1.__spd_url,test1_1.i,test1_1.__spd_url;
   i   |  __spd_url   |  i  |  __spd_url  
-------+--------------+-----+-------------
     1 | /sqlite_svr/ |   1 | /mysql_svr/
     1 | /sqlite_svr/ | 777 | /mysql_svr/
     1 | /sqlite_svr/ | 777 | /mysql_svr/
     1 | /sqlite_svr/ | 777 | /mysql_svr/
     1 | /sqlite_svr/ | 777 | /mysql_svr/
 22222 | /sqlite_svr/ |   1 | /mysql_svr/
 22222 | /sqlite_svr/ | 777 | /mysql_svr/
 22222 | /sqlite_svr/ | 777 | /mysql_svr/
 22222 | /sqlite_svr/ | 777 | /mysql_svr/
 22222 | /sqlite_svr/ | 777 | /mysql_svr/
(10 rows)

--Testcase 54:
EXPLAIN (VERBOSE, COSTS OFF) SELECT * FROM test1;
                      QUERY PLAN                      
------------------------------------------------------
 Foreign Scan on public.test1
   Output: i, __spd_url
   Node: file_svr / Status: Alive
     Foreign File: /tmp/pgtest.csv
   Node: file_svr / Status: Alive
     Foreign File: /tmp/pgtest.csv
   Node: mysql_svr / Status: Alive
     Remote query: SELECT `i` FROM `test`.`test1`
   Node: post_svr / Status: Alive
     Remote SQL: SELECT i FROM public.test1
   Node: sqlite_svr / Status: Alive
     SQLite query: SELECT `i` FROM main."test1"
   Node: tiny_svr / Status: Alive
     TinyBrace query: SELECT `i` FROM "test1"
     TinyBrace plan: SCAN TABLE test1 (~1000000 rows)
(15 rows)

-- some fdw push down and some fdw not 
--Testcase 55:
EXPLAIN (VERBOSE, COSTS OFF) SELECT sum(i), avg(i) FROM test1;
                            QUERY PLAN                             
-------------------------------------------------------------------
 Foreign Scan
   Output: (sum(i)), (avg(i))
   Node: file_svr / Status: Alive
     Agg push-down: no
     Foreign File: /tmp/pgtest.csv
   Node: file_svr / Status: Alive
     Agg push-down: no
     Foreign File: /tmp/pgtest.csv
   Node: mysql_svr / Status: Alive
     Agg push-down: yes
     Relations: Aggregate on (test.test1__mysql_svr__0)
     Remote query: SELECT sum(`i`), count(`i`) FROM `test`.`test1`
   Node: post_svr / Status: Alive
     Agg push-down: yes
     Relations: Aggregate on (public.test1)
     Remote SQL: SELECT sum(i), count(i) FROM public.test1
   Node: sqlite_svr / Status: Alive
     Agg push-down: yes
     SQLite query: SELECT sum(`i`), count(`i`) FROM main."test1"
   Node: tiny_svr / Status: Alive
     Agg push-down: yes
     TinyBrace query: SELECT sum(`i`), count(`i`) FROM "test1"
     TinyBrace plan: SCAN TABLE test1 (~1000000 rows)
(23 rows)

-- only post_svr is alive
--Testcase 56:
EXPLAIN (VERBOSE, COSTS OFF) SELECT * FROM test1 IN ('/post_svr/');
                    QUERY PLAN                    
--------------------------------------------------
 Foreign Scan on public.test1
   Output: i, __spd_url
   Node: file_svr / Status: Not specified by IN
   Node: file_svr / Status: Not specified by IN
   Node: mysql_svr / Status: Not specified by IN
   Node: post_svr / Status: Alive
     Remote SQL: SELECT i FROM public.test1
   Node: sqlite_svr / Status: Not specified by IN
   Node: tiny_svr / Status: Not specified by IN
(9 rows)

-- only __spd_url target list is OK
--Testcase 57:
SELECT __spd_url FROM test1 ORDER BY __spd_url;
  __spd_url   
--------------
 /file_svr/
 /file_svr/
 /file_svr/
 /file_svr/
 /file_svr/
 /file_svr/
 /file_svr/
 /file_svr/
 /mysql_svr/
 /mysql_svr/
 /mysql_svr/
 /mysql_svr/
 /mysql_svr/
 /post_svr/
 /sqlite_svr/
 /sqlite_svr/
 /tiny_svr/
(17 rows)

--Testcase 214:
EXPLAIN VERBOSE
SELECT i, __spd_url FROM test1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
                            QUERY PLAN                             
-------------------------------------------------------------------
 Sort  (cost=175.74..175.74 rows=0 width=36)
   Output: i, __spd_url
   Sort Key: test1.i, test1.__spd_url
   ->  Foreign Scan  (cost=120.53..175.66 rows=0 width=36)
         Output: i, __spd_url
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: mysql_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (test.test1__mysql_svr__0)
           Local server startup cost: 10
           Remote query: SELECT `i` FROM `test`.`test1` GROUP BY 1
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.test1)
           Remote SQL: SELECT i FROM public.test1 GROUP BY 1
         Node: sqlite_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           SQLite query: SELECT `i` FROM main."test1" GROUP BY 1
         Node: tiny_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           TinyBrace query: SELECT `i` FROM "test1" GROUP BY 1
           TinyBrace plan: SCAN TABLE test1 (~1000000 rows)
(35 rows)

--Testcase 215:
SELECT i, __spd_url FROM test1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /file_svr/
     1 | /mysql_svr/
     1 | /sqlite_svr/
     1 | /tiny_svr/
     2 | /file_svr/
     3 | /file_svr/
     4 | /file_svr/
   777 | /mysql_svr/
  1111 | /post_svr/
 22222 | /sqlite_svr/
(10 rows)

--Testcase 216:
EXPLAIN VERBOSE
SELECT i, __spd_url FROM test1 GROUP BY i, __spd_url ORDER BY i,__spd_url;
                            QUERY PLAN                             
-------------------------------------------------------------------
 Sort  (cost=175.74..175.74 rows=0 width=36)
   Output: i, __spd_url
   Sort Key: test1.i, test1.__spd_url
   ->  Foreign Scan  (cost=120.53..175.66 rows=0 width=36)
         Output: i, __spd_url
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: mysql_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (test.test1__mysql_svr__0)
           Local server startup cost: 10
           Remote query: SELECT `i` FROM `test`.`test1` GROUP BY 1
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.test1)
           Remote SQL: SELECT i FROM public.test1 GROUP BY 1
         Node: sqlite_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           SQLite query: SELECT `i` FROM main."test1" GROUP BY 1
         Node: tiny_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           TinyBrace query: SELECT `i` FROM "test1" GROUP BY 1
           TinyBrace plan: SCAN TABLE test1 (~1000000 rows)
(35 rows)

--Testcase 58:
SELECT i, __spd_url FROM test1 GROUP BY i, __spd_url ORDER BY i,__spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /file_svr/
     1 | /mysql_svr/
     1 | /sqlite_svr/
     1 | /tiny_svr/
     2 | /file_svr/
     3 | /file_svr/
     4 | /file_svr/
   777 | /mysql_svr/
  1111 | /post_svr/
 22222 | /sqlite_svr/
(10 rows)

--Testcase 217:
EXPLAIN VERBOSE
SELECT __spd_url, i FROM test1 GROUP BY i, __spd_url ORDER BY i,__spd_url;
                            QUERY PLAN                             
-------------------------------------------------------------------
 Sort  (cost=175.74..175.74 rows=0 width=36)
   Output: __spd_url, i
   Sort Key: test1.i, test1.__spd_url
   ->  Foreign Scan  (cost=120.53..175.66 rows=0 width=36)
         Output: __spd_url, i
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: mysql_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (test.test1__mysql_svr__0)
           Local server startup cost: 10
           Remote query: SELECT `i` FROM `test`.`test1` GROUP BY 1
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.test1)
           Remote SQL: SELECT i FROM public.test1 GROUP BY 1
         Node: sqlite_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           SQLite query: SELECT `i` FROM main."test1" GROUP BY 1
         Node: tiny_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           TinyBrace query: SELECT `i` FROM "test1" GROUP BY 1
           TinyBrace plan: SCAN TABLE test1 (~1000000 rows)
(35 rows)

--Testcase 59:
SELECT __spd_url, i FROM test1 GROUP BY i, __spd_url ORDER BY i,__spd_url;
  __spd_url   |   i   
--------------+-------
 /file_svr/   |     1
 /mysql_svr/  |     1
 /sqlite_svr/ |     1
 /tiny_svr/   |     1
 /file_svr/   |     2
 /file_svr/   |     3
 /file_svr/   |     4
 /mysql_svr/  |   777
 /post_svr/   |  1111
 /sqlite_svr/ | 22222
(10 rows)

--Testcase 218:
EXPLAIN VERBOSE
SELECT avg(i), __spd_url FROM test1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
                                       QUERY PLAN                                        
-----------------------------------------------------------------------------------------
 Sort  (cost=175.74..175.74 rows=1 width=68)
   Output: (avg(i)), __spd_url, i
   Sort Key: test1.i, test1.__spd_url
   ->  Foreign Scan  (cost=120.53..175.66 rows=1 width=68)
         Output: (avg(i)), __spd_url, i
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: mysql_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (test.test1__mysql_svr__0)
           Local server startup cost: 10
           Remote query: SELECT count(`i`), sum(`i`), `i` FROM `test`.`test1` GROUP BY 3
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.test1)
           Remote SQL: SELECT count(i), sum(i), i FROM public.test1 GROUP BY 3
         Node: sqlite_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           SQLite query: SELECT count(`i`), sum(`i`), `i` FROM main."test1" GROUP BY 3
         Node: tiny_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           TinyBrace query: SELECT count(`i`), sum(`i`), `i` FROM "test1" GROUP BY 3
           TinyBrace plan: SCAN TABLE test1 (~1000000 rows)
(35 rows)

--Testcase 219:
SELECT avg(i), __spd_url FROM test1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
  avg  |  __spd_url   
-------+--------------
     1 | /file_svr/
     1 | /mysql_svr/
     1 | /sqlite_svr/
     1 | /tiny_svr/
     2 | /file_svr/
     3 | /file_svr/
     4 | /file_svr/
   777 | /mysql_svr/
  1111 | /post_svr/
 22222 | /sqlite_svr/
(10 rows)

--Testcase 220:
EXPLAIN VERBOSE
SELECT avg(i), __spd_url FROM test1 GROUP BY i, __spd_url ORDER BY i,__spd_url;
                                       QUERY PLAN                                        
-----------------------------------------------------------------------------------------
 Sort  (cost=175.74..175.74 rows=1 width=68)
   Output: (avg(i)), __spd_url, i
   Sort Key: test1.i, test1.__spd_url
   ->  Foreign Scan  (cost=120.53..175.66 rows=1 width=68)
         Output: (avg(i)), __spd_url, i
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: mysql_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (test.test1__mysql_svr__0)
           Local server startup cost: 10
           Remote query: SELECT count(`i`), sum(`i`), `i` FROM `test`.`test1` GROUP BY 3
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.test1)
           Remote SQL: SELECT count(i), sum(i), i FROM public.test1 GROUP BY 3
         Node: sqlite_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           SQLite query: SELECT count(`i`), sum(`i`), `i` FROM main."test1" GROUP BY 3
         Node: tiny_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           TinyBrace query: SELECT count(`i`), sum(`i`), `i` FROM "test1" GROUP BY 3
           TinyBrace plan: SCAN TABLE test1 (~1000000 rows)
(35 rows)

--Testcase 60:
SELECT avg(i), __spd_url FROM test1 GROUP BY i, __spd_url ORDER BY i,__spd_url;
  avg  |  __spd_url   
-------+--------------
     1 | /file_svr/
     1 | /mysql_svr/
     1 | /sqlite_svr/
     1 | /tiny_svr/
     2 | /file_svr/
     3 | /file_svr/
     4 | /file_svr/
   777 | /mysql_svr/
  1111 | /post_svr/
 22222 | /sqlite_svr/
(10 rows)

--Testcase 221:
EXPLAIN VERBOSE
SELECT __spd_url, avg(i) FROM test1 GROUP BY i, __spd_url ORDER BY i,__spd_url;
                                       QUERY PLAN                                        
-----------------------------------------------------------------------------------------
 Sort  (cost=175.74..175.74 rows=1 width=68)
   Output: __spd_url, (avg(i)), i
   Sort Key: test1.i, test1.__spd_url
   ->  Foreign Scan  (cost=120.53..175.66 rows=1 width=68)
         Output: __spd_url, (avg(i)), i
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: mysql_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (test.test1__mysql_svr__0)
           Local server startup cost: 10
           Remote query: SELECT count(`i`), sum(`i`), `i` FROM `test`.`test1` GROUP BY 3
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.test1)
           Remote SQL: SELECT count(i), sum(i), i FROM public.test1 GROUP BY 3
         Node: sqlite_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           SQLite query: SELECT count(`i`), sum(`i`), `i` FROM main."test1" GROUP BY 3
         Node: tiny_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           TinyBrace query: SELECT count(`i`), sum(`i`), `i` FROM "test1" GROUP BY 3
           TinyBrace plan: SCAN TABLE test1 (~1000000 rows)
(35 rows)

--Testcase 61:
SELECT __spd_url, avg(i) FROM test1 GROUP BY i, __spd_url ORDER BY i,__spd_url;
  __spd_url   |  avg  
--------------+-------
 /file_svr/   |     1
 /mysql_svr/  |     1
 /sqlite_svr/ |     1
 /tiny_svr/   |     1
 /file_svr/   |     2
 /file_svr/   |     3
 /file_svr/   |     4
 /mysql_svr/  |   777
 /post_svr/   |  1111
 /sqlite_svr/ | 22222
(10 rows)

--Testcase 222:
EXPLAIN VERBOSE
SELECT __spd_url, sum(i) FROM test1 GROUP BY i, __spd_url ORDER BY i,__spd_url;
                                 QUERY PLAN                                  
-----------------------------------------------------------------------------
 Sort  (cost=175.74..175.74 rows=1 width=44)
   Output: __spd_url, (sum(i)), i
   Sort Key: test1.i, test1.__spd_url
   ->  Foreign Scan  (cost=120.53..175.66 rows=1 width=44)
         Output: __spd_url, (sum(i)), i
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: mysql_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (test.test1__mysql_svr__0)
           Local server startup cost: 10
           Remote query: SELECT sum(`i`), `i` FROM `test`.`test1` GROUP BY 2
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.test1)
           Remote SQL: SELECT sum(i), i FROM public.test1 GROUP BY 2
         Node: sqlite_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           SQLite query: SELECT sum(`i`), `i` FROM main."test1" GROUP BY 2
         Node: tiny_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           TinyBrace query: SELECT sum(`i`), `i` FROM "test1" GROUP BY 2
           TinyBrace plan: SCAN TABLE test1 (~1000000 rows)
(35 rows)

--Testcase 62:
SELECT __spd_url, sum(i) FROM test1 GROUP BY i, __spd_url ORDER BY i,__spd_url;
  __spd_url   |  sum  
--------------+-------
 /file_svr/   |     2
 /mysql_svr/  |     1
 /sqlite_svr/ |     1
 /tiny_svr/   |     1
 /file_svr/   |     4
 /file_svr/   |     6
 /file_svr/   |     8
 /mysql_svr/  |  3108
 /post_svr/   |  1111
 /sqlite_svr/ | 22222
(10 rows)

--Testcase 223:
EXPLAIN VERBOSE
SELECT __spd_url, avg(i), __spd_url FROM test1 GROUP BY i, __spd_url ORDER BY i,__spd_url;
                                       QUERY PLAN                                        
-----------------------------------------------------------------------------------------
 Sort  (cost=175.74..175.74 rows=1 width=100)
   Output: __spd_url, (avg(i)), __spd_url, i
   Sort Key: test1.i, test1.__spd_url
   ->  Foreign Scan  (cost=120.53..175.66 rows=1 width=100)
         Output: __spd_url, (avg(i)), __spd_url, i
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: mysql_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (test.test1__mysql_svr__0)
           Local server startup cost: 10
           Remote query: SELECT count(`i`), sum(`i`), `i` FROM `test`.`test1` GROUP BY 3
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.test1)
           Remote SQL: SELECT count(i), sum(i), i FROM public.test1 GROUP BY 3
         Node: sqlite_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           SQLite query: SELECT count(`i`), sum(`i`), `i` FROM main."test1" GROUP BY 3
         Node: tiny_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           TinyBrace query: SELECT count(`i`), sum(`i`), `i` FROM "test1" GROUP BY 3
           TinyBrace plan: SCAN TABLE test1 (~1000000 rows)
(35 rows)

--Testcase 63:
SELECT __spd_url, avg(i), __spd_url FROM test1 GROUP BY i, __spd_url ORDER BY i,__spd_url;
  __spd_url   |  avg  |  __spd_url   
--------------+-------+--------------
 /file_svr/   |     1 | /file_svr/
 /mysql_svr/  |     1 | /mysql_svr/
 /sqlite_svr/ |     1 | /sqlite_svr/
 /tiny_svr/   |     1 | /tiny_svr/
 /file_svr/   |     2 | /file_svr/
 /file_svr/   |     3 | /file_svr/
 /file_svr/   |     4 | /file_svr/
 /mysql_svr/  |   777 | /mysql_svr/
 /post_svr/   |  1111 | /post_svr/
 /sqlite_svr/ | 22222 | /sqlite_svr/
(10 rows)

--Aggregate and function with __spd_url
--Testcase 276:
EXPLAIN VERBOSE
SELECT max(__spd_url), min(__spd_url) from test1;
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Aggregate  (cost=7331.25..7331.26 rows=1 width=64)
   Output: max(__spd_url), min(__spd_url)
   ->  Foreign Scan on public.test1  (cost=220.00..7262.98 rows=13654 width=32)
         Output: __spd_url
         Node: file_svr / Status: Alive
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: file_svr / Status: Alive
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: mysql_svr / Status: Alive
           Local server startup cost: 10
           Remote query: SELECT NULL FROM `test`.`test1`
         Node: post_svr / Status: Alive
           Remote SQL: SELECT NULL FROM public.test1
         Node: sqlite_svr / Status: Alive
           SQLite query: SELECT NULL FROM main."test1"
         Node: tiny_svr / Status: Alive
           TinyBrace query: SELECT NULL FROM "test1"
           TinyBrace plan: SCAN TABLE test1 (~1000000 rows)
(20 rows)

--Testcase 277:
SELECT max(__spd_url), min(__spd_url) from test1;
    max     |    min     
------------+------------
 /tiny_svr/ | /file_svr/
(1 row)

--Testcase 278:
EXPLAIN VERBOSE
SELECT lower(__spd_url), upper(__spd_url) from test1 ORDER BY 1, 2;
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Sort  (cost=9058.53..9092.66 rows=13654 width=64)
   Output: (lower(__spd_url)), (upper(__spd_url))
   Sort Key: (lower(test1.__spd_url)), (upper(test1.__spd_url))
   ->  Foreign Scan on public.test1  (cost=220.00..7331.25 rows=13654 width=64)
         Output: lower(__spd_url), upper(__spd_url)
         Node: file_svr / Status: Alive
           Sort push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: file_svr / Status: Alive
           Sort push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: mysql_svr / Status: Alive
           Sort push-down: no
           Local server startup cost: 10
           Remote query: SELECT NULL FROM `test`.`test1`
         Node: post_svr / Status: Alive
           Sort push-down: no
           Remote SQL: SELECT NULL FROM public.test1
         Node: sqlite_svr / Status: Alive
           Sort push-down: no
           SQLite query: SELECT NULL FROM main."test1"
         Node: tiny_svr / Status: Alive
           Sort push-down: no
           TinyBrace query: SELECT NULL FROM "test1"
           TinyBrace plan: SCAN TABLE test1 (~1000000 rows)
(27 rows)

--Testcase 279:
SELECT lower(__spd_url), upper(__spd_url) from test1  ORDER BY 1, 2;
    lower     |    upper     
--------------+--------------
 /file_svr/   | /FILE_SVR/
 /file_svr/   | /FILE_SVR/
 /file_svr/   | /FILE_SVR/
 /file_svr/   | /FILE_SVR/
 /file_svr/   | /FILE_SVR/
 /file_svr/   | /FILE_SVR/
 /file_svr/   | /FILE_SVR/
 /file_svr/   | /FILE_SVR/
 /mysql_svr/  | /MYSQL_SVR/
 /mysql_svr/  | /MYSQL_SVR/
 /mysql_svr/  | /MYSQL_SVR/
 /mysql_svr/  | /MYSQL_SVR/
 /mysql_svr/  | /MYSQL_SVR/
 /post_svr/   | /POST_SVR/
 /sqlite_svr/ | /SQLITE_SVR/
 /sqlite_svr/ | /SQLITE_SVR/
 /tiny_svr/   | /TINY_SVR/
(17 rows)

--Testcase 280:
EXPLAIN VERBOSE
SELECT pg_typeof(max(i)), pg_typeof(count(*)), pg_typeof(max(__spd_url)) FROM test1;
                                   QUERY PLAN                                   
--------------------------------------------------------------------------------
 Aggregate  (cost=7365.38..7365.40 rows=1 width=12)
   Output: pg_typeof(max(i)), pg_typeof(count(*)), pg_typeof(max(__spd_url))
   ->  Foreign Scan on public.test1  (cost=220.00..7262.98 rows=13654 width=36)
         Output: i, __spd_url
         Node: file_svr / Status: Alive
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: file_svr / Status: Alive
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: mysql_svr / Status: Alive
           Local server startup cost: 10
           Remote query: SELECT `i` FROM `test`.`test1`
         Node: post_svr / Status: Alive
           Remote SQL: SELECT i FROM public.test1
         Node: sqlite_svr / Status: Alive
           SQLite query: SELECT `i` FROM main."test1"
         Node: tiny_svr / Status: Alive
           TinyBrace query: SELECT `i` FROM "test1"
           TinyBrace plan: SCAN TABLE test1 (~1000000 rows)
(20 rows)

--Testcase 281:
SELECT pg_typeof(max(i)), pg_typeof(count(*)), pg_typeof(max(__spd_url)) FROM test1;
 pg_typeof | pg_typeof | pg_typeof 
-----------+-----------+-----------
 integer   | bigint    | text
(1 row)

--Testcase 64:
SELECT sum(i) FROM test1;
  sum  
-------
 26464
(1 row)

--Testcase 65:
SELECT avg(i) FROM test1;
       avg        
------------------
 1556.70588235294
(1 row)

--Testcase 66:
SELECT avg(i),i FROM test1 group by i order by i;
  avg  |   i   
-------+-------
     1 |     1
     2 |     2
     3 |     3
     4 |     4
   777 |   777
  1111 |  1111
 22222 | 22222
(7 rows)

--Testcase 67:
SELECT sum(i),count(i),i FROM test1 group by i order by i;
  sum  | count |   i   
-------+-------+-------
     5 |     5 |     1
     4 |     2 |     2
     6 |     2 |     3
     8 |     2 |     4
  3108 |     4 |   777
  1111 |     1 |  1111
 22222 |     1 | 22222
(7 rows)

--Testcase 68:
SELECT avg(i), count(i) FROM test1 group by i;
  avg  | count 
-------+-------
 22222 |     1
     3 |     2
     4 |     2
     2 |     2
   777 |     4
     1 |     5
  1111 |     1
(7 rows)

--Testcase 69:
SELECT SUM(i) as aa, avg(i) FROM test1 GROUP BY i;
  aa   |  avg  
-------+-------
 22222 | 22222
     6 |     3
     8 |     4
     4 |     2
  3108 |   777
     5 |     1
  1111 |  1111
(7 rows)

--Testcase 70:
SELECT SUM(i) as aa, avg(i), i/2, SUM(i)/2 FROM test1 GROUP BY i;
  aa   |  avg  | ?column? | ?column? 
-------+-------+----------+----------
 22222 | 22222 |    11111 |    11111
     6 |     3 |        1 |        3
     8 |     4 |        2 |        4
     4 |     2 |        1 |        2
  3108 |   777 |      388 |     1554
     5 |     1 |        0 |        2
  1111 |  1111 |      555 |      555
(7 rows)

--Testcase 71:
SELECT SUM(i) as aa, avg(i) FROM test1 GROUP BY i ORDER BY aa;
  aa   |  avg  
-------+-------
     4 |     2
     5 |     1
     6 |     3
     8 |     4
  1111 |  1111
  3108 |   777
 22222 | 22222
(7 rows)

--Testcase 72:
SELECT sum(i), avg(i) FROM test1 GROUP BY i ORDER BY 1;
  sum  |  avg  
-------+-------
     4 |     2
     5 |     1
     6 |     3
     8 |     4
  1111 |  1111
  3108 |   777
 22222 | 22222
(7 rows)

--Testcase 73:
SELECT i, avg(i) FROM test1 GROUP BY i ORDER BY 1;
   i   |  avg  
-------+-------
     1 |     1
     2 |     2
     3 |     3
     4 |     4
   777 |   777
  1111 |  1111
 22222 | 22222
(7 rows)

--Test extract expression when target contains Var which exists in GROUP BY
--Testcase 270:
EXPLAIN VERBOSE
SELECT i/2, i/4 FROM test1 GROUP BY i ORDER BY 1;
                            QUERY PLAN                             
-------------------------------------------------------------------
 Sort  (cost=176.72..176.73 rows=0 width=12)
   Output: ((i / 2)), ((i / 4)), i
   Sort Key: ((test1.i / 2))
   ->  Foreign Scan  (cost=120.53..176.66 rows=0 width=12)
         Output: ((i / 2)), ((i / 4)), i
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: mysql_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (test.test1__mysql_svr__0)
           Local server startup cost: 10
           Remote query: SELECT `i` FROM `test`.`test1` GROUP BY 1
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.test1)
           Remote SQL: SELECT i FROM public.test1 GROUP BY 1
         Node: sqlite_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           SQLite query: SELECT `i` FROM main."test1" GROUP BY 1
         Node: tiny_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           TinyBrace query: SELECT `i` FROM "test1" GROUP BY 1
           TinyBrace plan: SCAN TABLE test1 (~1000000 rows)
(35 rows)

--Testcase 271:
SELECT i/2, i/4 FROM test1 GROUP BY i ORDER BY 1;
 ?column? | ?column? 
----------+----------
        0 |        0
        1 |        0
        1 |        0
        2 |        1
      388 |      194
      555 |      277
    11111 |     5555
(7 rows)

--Testcase 272:
EXPLAIN VERBOSE
SELECT i/4, avg(i) FROM test1 GROUP BY i ORDER BY 1;
                                       QUERY PLAN                                        
-----------------------------------------------------------------------------------------
 Sort  (cost=176.22..176.23 rows=1 width=40)
   Output: ((i / 4)), (avg(i)), i
   Sort Key: ((test1.i / 4))
   ->  Foreign Scan  (cost=120.53..176.16 rows=1 width=40)
         Output: ((i / 4)), (avg(i)), i
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: mysql_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (test.test1__mysql_svr__0)
           Local server startup cost: 10
           Remote query: SELECT `i`, count(`i`), sum(`i`) FROM `test`.`test1` GROUP BY 1
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.test1)
           Remote SQL: SELECT i, count(i), sum(i) FROM public.test1 GROUP BY 1
         Node: sqlite_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           SQLite query: SELECT `i`, count(`i`), sum(`i`) FROM main."test1" GROUP BY 1
         Node: tiny_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           TinyBrace query: SELECT `i`, count(`i`), sum(`i`) FROM "test1" GROUP BY 1
           TinyBrace plan: SCAN TABLE test1 (~1000000 rows)
(35 rows)

--Testcase 273:
SELECT i/4, avg(i) FROM test1 GROUP BY i ORDER BY 1;
 ?column? |  avg  
----------+-------
        0 |     2
        0 |     3
        0 |     1
        1 |     4
      194 |   777
      277 |  1111
     5555 | 22222
(7 rows)

--Testcase 274:
EXPLAIN VERBOSE
SELECT i, i*i FROM test1 GROUP BY i ORDER BY 1;
                            QUERY PLAN                             
-------------------------------------------------------------------
 Sort  (cost=176.22..176.23 rows=0 width=8)
   Output: i, ((i * i))
   Sort Key: test1.i
   ->  Foreign Scan  (cost=120.53..176.16 rows=0 width=8)
         Output: i, ((i * i))
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: file_svr / Status: Alive
           Sort push-down: no
           Agg push-down: no
           Foreign File: /tmp/pgtest.csv
           Foreign File Size: 7 b
         Node: mysql_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (test.test1__mysql_svr__0)
           Local server startup cost: 10
           Remote query: SELECT `i` FROM `test`.`test1` GROUP BY 1
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.test1)
           Remote SQL: SELECT i FROM public.test1 GROUP BY 1
         Node: sqlite_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           SQLite query: SELECT `i` FROM main."test1" GROUP BY 1
         Node: tiny_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           TinyBrace query: SELECT `i` FROM "test1" GROUP BY 1
           TinyBrace plan: SCAN TABLE test1 (~1000000 rows)
(35 rows)

--Testcase 275:
SELECT i, i*i FROM test1 GROUP BY i ORDER BY 1;
   i   | ?column?  
-------+-----------
     1 |         1
     2 |         4
     3 |         9
     4 |        16
   777 |    603729
  1111 |   1234321
 22222 | 493817284
(7 rows)

-- allocate statement
--Testcase 74:
PREPARE stmt AS SELECT sum(i),count(i),i FROM test1 group by i order by i;
-- execute first time
--Testcase 75:
EXECUTE stmt;
  sum  | count |   i   
-------+-------+-------
     5 |     5 |     1
     4 |     2 |     2
     6 |     2 |     3
     8 |     2 |     4
  3108 |     4 |   777
  1111 |     1 |  1111
 22222 |     1 | 22222
(7 rows)

-- performance test prepared statement
DO $$
BEGIN
   FOR counter IN 1..50 LOOP
--Testcase 224:
   EXECUTE 'EXECUTE stmt;';
   END LOOP;
END; $$;
-- deallocate statement
DEALLOCATE stmt;
--Testcase 225:
CREATE FOREIGN TABLE t1 (i int, t text,__spd_url text) SERVER pgspider_svr;
--Testcase 226:
CREATE FOREIGN TABLE t1__post_svr__0 (i int, t text) SERVER post_svr OPTIONS(table_name 't1');
--Testcase 76:
SELECT * FROM t1;
 i | t | __spd_url  
---+---+------------
 1 | a | /post_svr/
 2 | b | /post_svr/
 3 | b | /post_svr/
 4 | c | /post_svr/
(4 rows)

--Testcase 77:
SELECT * FROM t1 WHERE __spd_url='/post_svr/' and i = 1 and t = 'a';
 i | t | __spd_url  
---+---+------------
 1 | a | /post_svr/
(1 row)

--Testcase 78:
SELECT sum(i),t FROM t1 group by t;
 sum | t 
-----+---
   1 | a
   5 | b
   4 | c
(3 rows)

--Testcase 79:
SELECT sum(i),t,count(i) FROM t1 group by t;
 sum | t | count 
-----+---+-------
   1 | a |     1
   5 | b |     2
   4 | c |     1
(3 rows)

--Testcase 80:
SELECT * FROM t1 WHERE i = 1;
 i | t | __spd_url  
---+---+------------
 1 | a | /post_svr/
(1 row)

--Testcase 81:
SELECT sum(i),t FROM t1 group by t;
 sum | t 
-----+---
   1 | a
   5 | b
   4 | c
(3 rows)

--Testcase 82:
SELECT avg(i) FROM t1;
        avg         
--------------------
 2.5000000000000000
(1 row)

--Testcase 83:
SELECT stddev(i) FROM t1;
       stddev       
--------------------
 1.2909944487358056
(1 row)

--Testcase 84:
SELECT sum(i),t FROM t1 WHERE i = 1 group by t;
 sum | t 
-----+---
   1 | a
(1 row)

--Testcase 85:
SELECT avg(i),sum(i) FROM t1;
        avg         | sum 
--------------------+-----
 2.5000000000000000 |  10
(1 row)

--Testcase 86:
SELECT sum(i),sum(i) FROM t1;
 sum | sum 
-----+-----
  10 |  10
(1 row)

--Testcase 87:
SELECT avg(i),t FROM t1 group by t;
          avg           | t 
------------------------+---
 1.00000000000000000000 | a
     2.5000000000000000 | b
     4.0000000000000000 | c
(3 rows)

--Testcase 88:
SELECT avg(i) FROM t1 group by i;
          avg           
------------------------
     3.0000000000000000
     4.0000000000000000
     2.0000000000000000
 1.00000000000000000000
(4 rows)

--Testcase 89:
SELECT avg(i), count(i) FROM t1 GROUP BY i ORDER BY i;
          avg           | count 
------------------------+-------
 1.00000000000000000000 |     1
     2.0000000000000000 |     1
     3.0000000000000000 |     1
     4.0000000000000000 |     1
(4 rows)

--Testcase 90:
SELECT t, avg(i), t FROM t1 GROUP BY i, t ORDER BY i;
 t |          avg           | t 
---+------------------------+---
 a | 1.00000000000000000000 | a
 b |     2.0000000000000000 | b
 b |     3.0000000000000000 | b
 c |     4.0000000000000000 | c
(4 rows)

--Testcase 227:
EXPLAIN VERBOSE
SELECT t, __spd_url FROM t1 GROUP BY __spd_url, t ORDER BY t,__spd_url;
                        QUERY PLAN                         
-----------------------------------------------------------
 Sort  (cost=158.74..158.75 rows=0 width=64)
   Output: t, __spd_url
   Sort Key: t1.t, t1.__spd_url
   ->  Foreign Scan  (cost=108.53..158.66 rows=0 width=64)
         Output: t, __spd_url
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.t1)
           Remote SQL: SELECT t FROM public.t1 GROUP BY 1
(10 rows)

--Testcase 91:
SELECT t, __spd_url FROM t1 GROUP BY __spd_url, t ORDER BY t,__spd_url;
 t | __spd_url  
---+------------
 a | /post_svr/
 b | /post_svr/
 c | /post_svr/
(3 rows)

--Testcase 228:
EXPLAIN VERBOSE
SELECT i, __spd_url FROM t1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
                        QUERY PLAN                         
-----------------------------------------------------------
 Sort  (cost=158.74..158.74 rows=0 width=36)
   Output: i, __spd_url
   Sort Key: t1.i, t1.__spd_url
   ->  Foreign Scan  (cost=108.53..158.66 rows=0 width=36)
         Output: i, __spd_url
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.t1)
           Remote SQL: SELECT i FROM public.t1 GROUP BY 1
(10 rows)

--Testcase 92:
SELECT i, __spd_url FROM t1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
 i | __spd_url  
---+------------
 1 | /post_svr/
 2 | /post_svr/
 3 | /post_svr/
 4 | /post_svr/
(4 rows)

--Testcase 229:
EXPLAIN VERBOSE
SELECT __spd_url, i FROM t1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
                        QUERY PLAN                         
-----------------------------------------------------------
 Sort  (cost=158.74..158.74 rows=0 width=36)
   Output: __spd_url, i
   Sort Key: t1.i, t1.__spd_url
   ->  Foreign Scan  (cost=108.53..158.66 rows=0 width=36)
         Output: __spd_url, i
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.t1)
           Remote SQL: SELECT i FROM public.t1 GROUP BY 1
(10 rows)

--Testcase 93:
SELECT __spd_url, i FROM t1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
 __spd_url  | i 
------------+---
 /post_svr/ | 1
 /post_svr/ | 2
 /post_svr/ | 3
 /post_svr/ | 4
(4 rows)

--Testcase 230:
EXPLAIN VERBOSE
SELECT avg(i), __spd_url FROM t1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort  (cost=158.74..158.74 rows=1 width=68)
   Output: (avg(i)), __spd_url, i
   Sort Key: t1.i, t1.__spd_url
   ->  Foreign Scan  (cost=108.53..158.66 rows=1 width=68)
         Output: (avg(i)), __spd_url, i
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.t1)
           Remote SQL: SELECT avg(i), i FROM public.t1 GROUP BY 2
(10 rows)

--Testcase 94:
SELECT avg(i), __spd_url FROM t1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
          avg           | __spd_url  
------------------------+------------
 1.00000000000000000000 | /post_svr/
     2.0000000000000000 | /post_svr/
     3.0000000000000000 | /post_svr/
     4.0000000000000000 | /post_svr/
(4 rows)

--Testcase 231:
EXPLAIN VERBOSE
SELECT __spd_url, avg(i) FROM t1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort  (cost=158.74..158.74 rows=1 width=68)
   Output: __spd_url, (avg(i)), i
   Sort Key: t1.i, t1.__spd_url
   ->  Foreign Scan  (cost=108.53..158.66 rows=1 width=68)
         Output: __spd_url, (avg(i)), i
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.t1)
           Remote SQL: SELECT avg(i), i FROM public.t1 GROUP BY 2
(10 rows)

--Testcase 95:
SELECT __spd_url, avg(i) FROM t1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
 __spd_url  |          avg           
------------+------------------------
 /post_svr/ | 1.00000000000000000000
 /post_svr/ |     2.0000000000000000
 /post_svr/ |     3.0000000000000000
 /post_svr/ |     4.0000000000000000
(4 rows)

--Testcase 232:
EXPLAIN VERBOSE
SELECT __spd_url, avg(i), __spd_url FROM t1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort  (cost=158.74..158.74 rows=1 width=100)
   Output: __spd_url, (avg(i)), __spd_url, i
   Sort Key: t1.i, t1.__spd_url
   ->  Foreign Scan  (cost=108.53..158.66 rows=1 width=100)
         Output: __spd_url, (avg(i)), __spd_url, i
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.t1)
           Remote SQL: SELECT avg(i), i FROM public.t1 GROUP BY 2
(10 rows)

--Testcase 96:
SELECT __spd_url, avg(i), __spd_url FROM t1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
 __spd_url  |          avg           | __spd_url  
------------+------------------------+------------
 /post_svr/ | 1.00000000000000000000 | /post_svr/
 /post_svr/ |     2.0000000000000000 | /post_svr/
 /post_svr/ |     3.0000000000000000 | /post_svr/
 /post_svr/ |     4.0000000000000000 | /post_svr/
(4 rows)

--Testcase 233:
EXPLAIN VERBOSE
SELECT __spd_url, sum(i) FROM t1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort  (cost=158.74..158.74 rows=1 width=44)
   Output: __spd_url, (sum(i)), i
   Sort Key: t1.i, t1.__spd_url
   ->  Foreign Scan  (cost=108.53..158.66 rows=1 width=44)
         Output: __spd_url, (sum(i)), i
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.t1)
           Remote SQL: SELECT sum(i), i FROM public.t1 GROUP BY 2
(10 rows)

--Testcase 97:
SELECT __spd_url, sum(i) FROM t1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
 __spd_url  | sum 
------------+-----
 /post_svr/ |   1
 /post_svr/ |   2
 /post_svr/ |   3
 /post_svr/ |   4
(4 rows)

--Testcase 234:
EXPLAIN VERBOSE
SELECT __spd_url, avg(i), __spd_url FROM t1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
                            QUERY PLAN                            
------------------------------------------------------------------
 Sort  (cost=158.74..158.74 rows=1 width=100)
   Output: __spd_url, (avg(i)), __spd_url, i
   Sort Key: t1.i, t1.__spd_url
   ->  Foreign Scan  (cost=108.53..158.66 rows=1 width=100)
         Output: __spd_url, (avg(i)), __spd_url, i
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.t1)
           Remote SQL: SELECT avg(i), i FROM public.t1 GROUP BY 2
(10 rows)

--Testcase 98:
SELECT __spd_url, avg(i), __spd_url FROM t1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
 __spd_url  |          avg           | __spd_url  
------------+------------------------+------------
 /post_svr/ | 1.00000000000000000000 | /post_svr/
 /post_svr/ |     2.0000000000000000 | /post_svr/
 /post_svr/ |     3.0000000000000000 | /post_svr/
 /post_svr/ |     4.0000000000000000 | /post_svr/
(4 rows)

--Testcase 235:
EXPLAIN VERBOSE
SELECT __spd_url, avg(i), sum(i), __spd_url FROM t1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
                                QUERY PLAN                                
--------------------------------------------------------------------------
 Sort  (cost=158.74..158.74 rows=1 width=108)
   Output: __spd_url, (avg(i)), (sum(i)), __spd_url, i
   Sort Key: t1.i, t1.__spd_url
   ->  Foreign Scan  (cost=108.53..158.66 rows=1 width=108)
         Output: __spd_url, (avg(i)), (sum(i)), __spd_url, i
         Node: post_svr / Status: Alive
           Sort push-down: no
           Agg push-down: yes
           Relations: Aggregate on (public.t1)
           Remote SQL: SELECT avg(i), sum(i), i FROM public.t1 GROUP BY 3
(10 rows)

--Testcase 99:
SELECT __spd_url, avg(i), sum(i), __spd_url FROM t1 GROUP BY __spd_url, i ORDER BY i,__spd_url;
 __spd_url  |          avg           | sum | __spd_url  
------------+------------------------+-----+------------
 /post_svr/ | 1.00000000000000000000 |   1 | /post_svr/
 /post_svr/ |     2.0000000000000000 |   2 | /post_svr/
 /post_svr/ |     3.0000000000000000 |   3 | /post_svr/
 /post_svr/ |     4.0000000000000000 |   4 | /post_svr/
(4 rows)

--Testcase 100:
SELECT * FROM (SELECT sum(i) FROM t1) A,(SELECT count(i) FROM t1) B;
 sum | count 
-----+-------
  10 |     4
(1 row)

--Testcase 101:
SELECT SUM(i) as aa, avg(i) FROM t1 GROUP BY i;
 aa |          avg           
----+------------------------
  3 |     3.0000000000000000
  4 |     4.0000000000000000
  2 |     2.0000000000000000
  1 | 1.00000000000000000000
(4 rows)

--Testcase 102:
SELECT SUM(i) as aa, avg(i) FROM t1 GROUP BY t;
 aa |          avg           
----+------------------------
  1 | 1.00000000000000000000
  5 |     2.5000000000000000
  4 |     4.0000000000000000
(3 rows)

--Testcase 103:
SELECT SUM(i) as aa, avg(i), i/2, SUM(i)/2 FROM t1 GROUP BY i, t;
 aa |          avg           | ?column? | ?column? 
----+------------------------+----------+----------
  1 | 1.00000000000000000000 |        0 |        0
  4 |     4.0000000000000000 |        2 |        2
  3 |     3.0000000000000000 |        1 |        1
  2 |     2.0000000000000000 |        1 |        1
(4 rows)

--Testcase 104:
SELECT SUM(i) as aa, avg(i) FROM t1 GROUP BY i ORDER BY aa;
 aa |          avg           
----+------------------------
  1 | 1.00000000000000000000
  2 |     2.0000000000000000
  3 |     3.0000000000000000
  4 |     4.0000000000000000
(4 rows)

-- query contains all constant
--Testcase 236:
SELECT 1, 2, 'asd$@' FROM t1 group by 1, 3, 2;
 ?column? | ?column? | ?column? 
----------+----------+----------
        1 |        2 | asd$@
(1 row)

-- allocate statement
--Testcase 105:
PREPARE stmt AS SELECT * FROM t1;
-- execute first time
--Testcase 106:
EXECUTE stmt;
 i | t | __spd_url  
---+---+------------
 1 | a | /post_svr/
 2 | b | /post_svr/
 3 | b | /post_svr/
 4 | c | /post_svr/
(4 rows)

-- performance test prepared statement
DO $$
BEGIN
   FOR counter IN 1..50 LOOP
--Testcase 237:
   EXECUTE 'EXECUTE stmt;';
   END LOOP;
END; $$;
-- deallocate statement
DEALLOCATE stmt;
--Testcase 107:
EXPLAIN (VERBOSE, COSTS OFF) SELECT STDDEV(i) FROM t1;
                   QUERY PLAN                    
-------------------------------------------------
 Foreign Scan
   Output: (stddev(i))
   Node: post_svr / Status: Alive
     Agg push-down: yes
     Relations: Aggregate on (public.t1)
     Remote SQL: SELECT stddev(i) FROM public.t1
(6 rows)

--Testcase 238:
CREATE FOREIGN TABLE t3 (t text, t2 text, i int,__spd_url text) SERVER pgspider_svr;
--Testcase 239:
CREATE FOREIGN TABLE t3__mysql_svr__0 (t text,t2 text,i int) SERVER mysql_svr OPTIONS(dbname 'test',table_name 'test3');
--Testcase 108:
SELECT count(t) FROM t3;
 count 
-------
     4
(1 row)

--Testcase 109:
SELECT count(t2) FROM t3;
 count 
-------
     3
(1 row)

--Testcase 110:
SELECT count(i) FROM t3;
 count 
-------
     4
(1 row)

--Testcase 111:
SELECT * FROM t3;
  t  | t2  | i |  __spd_url  
-----+-----+---+-------------
 aaa | bbb | 1 | /mysql_svr/
 aaa | bbb | 1 | /mysql_svr/
 aaa |     | 1 | /mysql_svr/
 aaa | bbb | 1 | /mysql_svr/
(4 rows)

-- test target list push down for mysql fdw
-- push down abs(-i*2) and i+1
--Testcase 112:
EXPLAIN (VERBOSE, COSTS OFF)
SELECT abs(-i*2), i+1, i, i FROM t3;
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Foreign Scan on public.t3
   Output: (abs(((- i) * 2))), ((i + 1)), i, i
   Node: mysql_svr / Status: Alive
     Remote query: SELECT abs(((- `i`) * 2)), (`i` + 1), `i` FROM `test`.`test3`
(4 rows)

--Testcase 113:
SELECT abs(-i*2), i+1, i, i FROM t3;
 abs | ?column? | i | i 
-----+----------+---+---
   2 |        2 | 1 | 1
   2 |        2 | 1 | 1
   2 |        2 | 1 | 1
   2 |        2 | 1 | 1
(4 rows)

-- can't push down abs(A.i) in join case
--Testcase 114:
EXPLAIN (VERBOSE, COSTS OFF)
SELECT abs(A.i) FROM t3 A, t3 B LIMIT 3;
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Foreign Scan
   Output: abs(a.i)
   Node: mysql_svr / Status: Alive
     Limit push-down: yes
     Relations: (test.t3__mysql_svr__0) INNER JOIN (test.t3__mysql_svr__0)
     Remote query: SELECT r1.`i` FROM (`test`.`test3` r1 INNER JOIN `test`.`test3` r2 ON (TRUE)) LIMIT 3
(6 rows)

--Testcase 115:
SELECT abs(A.i) FROM t3 A, t3 B LIMIT 3;
 abs 
-----
   1
   1
   1
(3 rows)

--Testcase 116:
EXPLAIN (VERBOSE, COSTS OFF)
SELECT abs(i) c1 FROM t3 UNION SELECT abs(i+1) FROM t3 ORDER BY c1;
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Sort
   Output: (abs(t3.i))
   Sort Key: (abs(t3.i))
   ->  HashAggregate
         Output: (abs(t3.i))
         Group Key: (abs(t3.i))
         ->  Append
               ->  Foreign Scan on public.t3
                     Output: (abs(t3.i))
                     Node: mysql_svr / Status: Alive
                       Remote query: SELECT abs(`i`) FROM `test`.`test3`
               ->  Foreign Scan on public.t3 t3_1
                     Output: (abs((t3_1.i + 1)))
                     Node: mysql_svr / Status: Alive
                       Remote query: SELECT abs((`i` + 1)) FROM `test`.`test3`
(15 rows)

--Testcase 117:
SELECT abs(i) c1 FROM t3 UNION SELECT abs(i+1) FROM t3 ORDER BY c1;
 c1 
----
  1
  2
(2 rows)

--Testcase 118:
SELECT i+1, __spd_url FROM t3;
 ?column? |  __spd_url  
----------+-------------
        2 | /mysql_svr/
        2 | /mysql_svr/
        2 | /mysql_svr/
        2 | /mysql_svr/
(4 rows)

--Testcase 119:
SELECT i, __spd_url FROM t3 ORDER BY i, __spd_url;
 i |  __spd_url  
---+-------------
 1 | /mysql_svr/
 1 | /mysql_svr/
 1 | /mysql_svr/
 1 | /mysql_svr/
(4 rows)

--Testcase 120:
SELECT i FROM t3 ORDER BY __spd_url;
 i 
---
 1
 1
 1
 1
(4 rows)

-- can't push down i+1 because test1 includes fdws other than mysql fdw
--Testcase 121:
EXPLAIN (VERBOSE, COSTS OFF) 
SELECT i+1,__spd_url FROM test1 ORDER BY __spd_url, i;
                         QUERY PLAN                         
------------------------------------------------------------
 Sort
   Output: ((i + 1)), __spd_url, i
   Sort Key: test1.__spd_url, test1.i
   ->  Foreign Scan on public.test1
         Output: (i + 1), __spd_url, i
         Node: file_svr / Status: Alive
           Sort push-down: no
           Foreign File: /tmp/pgtest.csv
         Node: file_svr / Status: Alive
           Sort push-down: no
           Foreign File: /tmp/pgtest.csv
         Node: mysql_svr / Status: Alive
           Sort push-down: no
           Remote query: SELECT `i` FROM `test`.`test1`
         Node: post_svr / Status: Alive
           Sort push-down: no
           Remote SQL: SELECT i FROM public.test1
         Node: sqlite_svr / Status: Alive
           Sort push-down: no
           SQLite query: SELECT `i` FROM main."test1"
         Node: tiny_svr / Status: Alive
           Sort push-down: no
           TinyBrace query: SELECT `i` FROM "test1"
           TinyBrace plan: SCAN TABLE test1 (~1000000 rows)
(24 rows)

--Testcase 122:
SELECT i+1,__spd_url FROM test1  ORDER BY __spd_url, i;
 ?column? |  __spd_url   
----------+--------------
        2 | /file_svr/
        2 | /file_svr/
        3 | /file_svr/
        3 | /file_svr/
        4 | /file_svr/
        4 | /file_svr/
        5 | /file_svr/
        5 | /file_svr/
        2 | /mysql_svr/
      778 | /mysql_svr/
      778 | /mysql_svr/
      778 | /mysql_svr/
      778 | /mysql_svr/
     1112 | /post_svr/
        2 | /sqlite_svr/
    22223 | /sqlite_svr/
        2 | /tiny_svr/
(17 rows)

--Testcase 123:
SELECT __spd_url,i FROM test1 ORDER BY __spd_url, i;
  __spd_url   |   i   
--------------+-------
 /file_svr/   |     1
 /file_svr/   |     1
 /file_svr/   |     2
 /file_svr/   |     2
 /file_svr/   |     3
 /file_svr/   |     3
 /file_svr/   |     4
 /file_svr/   |     4
 /mysql_svr/  |     1
 /mysql_svr/  |   777
 /mysql_svr/  |   777
 /mysql_svr/  |   777
 /mysql_svr/  |   777
 /post_svr/   |  1111
 /sqlite_svr/ |     1
 /sqlite_svr/ | 22222
 /tiny_svr/   |     1
(17 rows)

-- t is not included in target list, but is pushed down, it is OK
--Testcase 124:
select t from t3 where i  = 1;
  t  
-----
 aaa
 aaa
 aaa
 aaa
(4 rows)

-- t is not included and cannot be pushed down, so it is error
-- select i from t3 where t COLLATE "ja_JP.utf8" = 'aa';
-- error stack test
Set pgspider_core_fdw.throw_error_ifdead to false;
--Testcase 240:
CREATE SERVER mysql_svr2 FOREIGN DATA WRAPPER mysql_fdw OPTIONS (host '127.0.0.1',port '3306');
--Testcase 241:
CREATE USER mapping for public server mysql_svr2 OPTIONS(username 'root',password 'wrongpass');
--Testcase 242:
CREATE FOREIGN TABLE t3__mysql_svr2__0 (t text,t2 text,i int) SERVER mysql_svr2 OPTIONS(dbname 'test',table_name 'test3');
--Testcase 125:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 126:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 127:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 128:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 129:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 130:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 131:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 132:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 133:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 134:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 135:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 136:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 137:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 138:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 139:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 140:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 141:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 142:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 143:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 144:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 145:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 146:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 147:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 148:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 149:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 150:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 151:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 152:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 153:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 154:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 155:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

--Testcase 156:
SELECT count(t) FROM t3;
WARNING:  GetForeignRelSize of child[0] failed.
 count 
-------
     4
(1 row)

-- Expect two warning messages of one mysql child node because of JOIN query.
-- The other mysql child returns result.
--Testcase 298:
SELECT * FROM t3 x1 JOIN t3 x2 ON x1.t = x2.t;
WARNING:  GetForeignRelSize of child[0] failed.
WARNING:  GetForeignRelSize of child[0] failed.
  t  | t2  | i |  __spd_url  |  t  | t2  | i |  __spd_url  
-----+-----+---+-------------+-----+-----+---+-------------
 aaa | bbb | 1 | /mysql_svr/ | aaa | bbb | 1 | /mysql_svr/
 aaa | bbb | 1 | /mysql_svr/ | aaa | bbb | 1 | /mysql_svr/
 aaa | bbb | 1 | /mysql_svr/ | aaa |     | 1 | /mysql_svr/
 aaa | bbb | 1 | /mysql_svr/ | aaa | bbb | 1 | /mysql_svr/
 aaa | bbb | 1 | /mysql_svr/ | aaa | bbb | 1 | /mysql_svr/
 aaa | bbb | 1 | /mysql_svr/ | aaa | bbb | 1 | /mysql_svr/
 aaa | bbb | 1 | /mysql_svr/ | aaa |     | 1 | /mysql_svr/
 aaa | bbb | 1 | /mysql_svr/ | aaa | bbb | 1 | /mysql_svr/
 aaa |     | 1 | /mysql_svr/ | aaa | bbb | 1 | /mysql_svr/
 aaa |     | 1 | /mysql_svr/ | aaa | bbb | 1 | /mysql_svr/
 aaa |     | 1 | /mysql_svr/ | aaa |     | 1 | /mysql_svr/
 aaa |     | 1 | /mysql_svr/ | aaa | bbb | 1 | /mysql_svr/
 aaa | bbb | 1 | /mysql_svr/ | aaa | bbb | 1 | /mysql_svr/
 aaa | bbb | 1 | /mysql_svr/ | aaa | bbb | 1 | /mysql_svr/
 aaa | bbb | 1 | /mysql_svr/ | aaa |     | 1 | /mysql_svr/
 aaa | bbb | 1 | /mysql_svr/ | aaa | bbb | 1 | /mysql_svr/
(16 rows)

Set pgspider_core_fdw.throw_error_ifdead to true;
--Testcase 243:
DROP FOREIGN TABLE t3;
--Testcase 244:
DROP FOREIGN TABLE t3__mysql_svr__0;
--Testcase 245:
DROP FOREIGN TABLE t3__mysql_svr2__0;
-- wrong result:
-- SELECT sum(i),t  FROM t1 group by t having sum(i) > 2;
--  sum | t 
-- -----+---
--    1 | a
--    5 | b
--    4 | c
-- (3 rows)
-- stress test for finding multithread error
DO $$
BEGIN
   FOR counter IN 1..50 LOOP
   PERFORM sum(i) FROM test1;
   END LOOP;
END; $$;
--Testcase 246:
CREATE FOREIGN TABLE mysqlt (t text, t2 text, i int,__spd_url text) SERVER pgspider_svr;
--Testcase 247:
CREATE FOREIGN TABLE mysqlt__mysql_svr__0 (t text,t2 text,i int) SERVER mysql_svr OPTIONS(dbname 'test',table_name 'test3');
--Testcase 248:
CREATE FOREIGN TABLE mysqlt__mysql_svr__1 (t text,t2 text,i int) SERVER mysql_svr OPTIONS(dbname 'test',table_name 'test3');
--Testcase 249:
CREATE FOREIGN TABLE mysqlt__mysql_svqr__2 (t text,t2 text,i int) SERVER mysql_svr OPTIONS(dbname 'test',table_name 'test3');
DO $$
BEGIN
   FOR counter IN 1..50 LOOP
   PERFORM sum(i) FROM mysqlt;
   END LOOP;
END; $$;
--Testcase 250:
CREATE FOREIGN TABLE post_large (i int, t text,__spd_url text) SERVER pgspider_svr;
--Testcase 251:
CREATE FOREIGN TABLE post_large__post_svr__1 (i int, t text) SERVER post_svr OPTIONS(table_name 'large_t');
--Testcase 252:
CREATE FOREIGN TABLE post_large__post_svr__2 (i int, t text) SERVER post_svr OPTIONS(table_name 'large_t');
--Testcase 253:
CREATE FOREIGN TABLE post_large__post_svr__3 (i int, t text) SERVER post_svr OPTIONS(table_name 'large_t');
--Testcase 157:
SELECT i,t FROM post_large WHERE i < 3 ORDER BY i,t;
 i |  t  
---+-----
 1 | aa1
 1 | aa1
 1 | aa1
 2 | aa2
 2 | aa2
 2 | aa2
(6 rows)

DO $$
BEGIN
   FOR counter IN 1..10 LOOP
   PERFORM i,t FROM post_large WHERE i < 3 ORDER BY i,t;
   END LOOP;
END; $$;
--Testcase 158:
SELECT count(*) FROM post_large;
 count 
-------
 30000
(1 row)

DO $$
BEGIN
   FOR counter IN 1..10 LOOP
   PERFORM sum(i) FROM post_large;
   END LOOP;
END; $$;
--Testcase 254:
CREATE FOREIGN TABLE t2 (i int, t text, a text,__spd_url text) SERVER pgspider_svr;
--Testcase 255:
CREATE FOREIGN TABLE t2__post_svr__0 (i int, t text,a text) SERVER post_svr OPTIONS(table_name 't2');
--Testcase 159:
SELECT i,t,a FROM t2 ORDER BY i,__spd_url;
 i | t | a 
---+---+---
 1 | a | 
 2 |   | a
   | a | a
   |   | 
(4 rows)

--Testcase 256:
CREATE FOREIGN TABLE t2__post_svr__1 (i int, t text,a text) SERVER post_svr OPTIONS(table_name 't2');
--Testcase 257:
CREATE FOREIGN TABLE t2__post_svr__2 (i int, t text,a text) SERVER post_svr OPTIONS(table_name 't2');
--Testcase 258:
CREATE FOREIGN TABLE t2__post_svr__3 (i int, t text,a text) SERVER post_svr OPTIONS(table_name 't2');
-- random cannot be pushed down and i=2 is pushed down
--Testcase 160:
EXPLAIN (VERBOSE, COSTS OFF)
SELECT * FROM t2 WHERE i=2 AND random() < 2.0;
                          QUERY PLAN                           
---------------------------------------------------------------
 Foreign Scan on public.t2
   Output: i, t, a, __spd_url
   Filter: (random() < '2'::double precision)
   Node: post_svr / Status: Alive
     Remote SQL: SELECT i, t, a FROM public.t2 WHERE ((i = 2))
   Node: post_svr / Status: Alive
     Remote SQL: SELECT i, t, a FROM public.t2 WHERE ((i = 2))
   Node: post_svr / Status: Alive
     Remote SQL: SELECT i, t, a FROM public.t2 WHERE ((i = 2))
   Node: post_svr / Status: Alive
     Remote SQL: SELECT i, t, a FROM public.t2 WHERE ((i = 2))
(11 rows)

--Testcase 161:
SELECT * FROM t2 WHERE i=2 AND random() < 2.0;
 i | t | a | __spd_url  
---+---+---+------------
 2 |   | a | /post_svr/
 2 |   | a | /post_svr/
 2 |   | a | /post_svr/
 2 |   | a | /post_svr/
(4 rows)

--Testcase 162:
SELECT i,t,a FROM t2 ORDER BY i,t,a,__spd_url;
 i | t | a 
---+---+---
 1 | a | 
 1 | a | 
 1 | a | 
 1 | a | 
 2 |   | a
 2 |   | a
 2 |   | a
 2 |   | a
   | a | a
   | a | a
   | a | a
   | a | a
   |   | 
   |   | 
   |   | 
   |   | 
(16 rows)

--Testcase 163:
SELECT a,i, __spd_url, t FROM t2 ORDER BY i,t,a,__spd_url;
 a | i | __spd_url  | t 
---+---+------------+---
   | 1 | /post_svr/ | a
   | 1 | /post_svr/ | a
   | 1 | /post_svr/ | a
   | 1 | /post_svr/ | a
 a | 2 | /post_svr/ | 
 a | 2 | /post_svr/ | 
 a | 2 | /post_svr/ | 
 a | 2 | /post_svr/ | 
 a |   | /post_svr/ | a
 a |   | /post_svr/ | a
 a |   | /post_svr/ | a
 a |   | /post_svr/ | a
   |   | /post_svr/ | 
   |   | /post_svr/ | 
   |   | /post_svr/ | 
   |   | /post_svr/ | 
(16 rows)

--Testcase 164:
SELECT __spd_url,i FROM t2 WHERE __spd_url='/post_svr/' ORDER BY i LIMIT 1;
 __spd_url  | i 
------------+---
 /post_svr/ | 1
(1 row)

-- Keep alive test
--Testcase 259:
CREATE SERVER post_svr2 FOREIGN DATA WRAPPER postgres_fdw OPTIONS (host '127.0.0.1',port '49503');
--Testcase 260:
CREATE USER mapping for public server post_svr2 OPTIONS(user 'postgres',password 'postgres');
--Testcase 261:
CREATE FOREIGN TABLE t2__post_svr2__0 (i int, t text,a text) SERVER post_svr2 OPTIONS(table_name 't2');
--Testcase 165:
INSERT INTO pg_spd_node_info VALUES(0,'post_svr','postgres_fdw','127.0.0.1');
--Testcase 166:
INSERT INTO pg_spd_node_info VALUES(0,'post_svr2','postgres_fdw','127.0.0.1');
--Testcase 167:
SELECT pg_sleep(2);
 pg_sleep 
----------
 
(1 row)

Set pgspider_core_fdw.throw_error_ifdead to false;
--Testcase 168:
SELECT i,t,a FROM t2 ORDER BY i,t,a,__spd_url;;
 i | t | a 
---+---+---
 1 | a | 
 1 | a | 
 1 | a | 
 1 | a | 
 2 |   | a
 2 |   | a
 2 |   | a
 2 |   | a
   | a | a
   | a | a
   | a | a
   | a | a
   |   | 
   |   | 
   |   | 
   |   | 
(16 rows)

SET pgspider_core_fdw.throw_error_ifdead to true;
--Testcase 169:
SELECT i,t,a FROM t2 ORDER BY i,t,a,__spd_url;;
ERROR:  PGSpider fail to iterate tuple from child thread
 DETAIL:could not connect to server "post_svr2"
SET pgspider_core_fdw.throw_error_ifdead to false;
--Testcase 170:
SELECT i,t,a FROM t2 ORDER BY i,t,a,__spd_url;;
 i | t | a 
---+---+---
 1 | a | 
 1 | a | 
 1 | a | 
 1 | a | 
 2 |   | a
 2 |   | a
 2 |   | a
 2 |   | a
   | a | a
   | a | a
   | a | a
   | a | a
   |   | 
   |   | 
   |   | 
   |   | 
(16 rows)

SET pgspider_core_fdw.print_error_nodes to true;
--Testcase 171:
SELECT i,t,a FROM t2 ORDER BY i,t,a,__spd_url;;
WARNING:  Can not get data from post_svr2
 i | t | a 
---+---+---
 1 | a | 
 1 | a | 
 1 | a | 
 1 | a | 
 2 |   | a
 2 |   | a
 2 |   | a
 2 |   | a
   | a | a
   | a | a
   | a | a
   | a | a
   |   | 
   |   | 
   |   | 
   |   | 
(16 rows)

SET pgspider_core_fdw.print_error_nodes to false;
--Testcase 172:
SELECT i,t,a FROM t2 ORDER BY i,t,a,__spd_url;;
 i | t | a 
---+---+---
 1 | a | 
 1 | a | 
 1 | a | 
 1 | a | 
 2 |   | a
 2 |   | a
 2 |   | a
 2 |   | a
   | a | a
   | a | a
   | a | a
   | a | a
   |   | 
   |   | 
   |   | 
   |   | 
(16 rows)

--Testcase 262:
CREATE SERVER post_svr3 FOREIGN DATA WRAPPER postgres_fdw OPTIONS (host '192.168.11.12',port '15432');
--Testcase 263:
CREATE USER mapping for public server post_svr3 OPTIONS(user 'postgres',password 'postgres');
--Testcase 264:
CREATE FOREIGN TABLE t2__post_svr3__0 (i int, t text,a text) SERVER post_svr3 OPTIONS(table_name 't2');
--Testcase 173:
INSERT INTO pg_spd_node_info VALUES(0,'post_svr3','postgres_fdw','192.168.11.12');
--Testcase 174:
SELECT pg_sleep(2);
 pg_sleep 
----------
 
(1 row)

/*
--Testcase 175:
SELECT i,t,a FROM t2 ORDER BY i,t,a,__spd_url;
SET pgspider_core_fdw.throw_error_ifdead to true;
--Testcase 176:
SELECT i,t,a FROM t2 ORDER BY i,t,a,__spd_url;
SET pgspider_core_fdw.throw_error_ifdead to false;
--Testcase 177:
SELECT i,t,a FROM t2 ORDER BY i,t,a,__spd_url;
SET pgspider_core_fdw.print_error_nodes to true;
--Testcase 178:
SELECT i,t,a FROM t2 ORDER BY i,t,a,__spd_url;
SET pgspider_core_fdw.print_error_nodes to false;
--Testcase 179:
SELECT i,t,a FROM t2 ORDER BY i,t,a,__spd_url;
DROP FOREIGN TABLE t2__post_svr3__0;
--Testcase 180:
DELETE FROM pg_spd_node_info WHERE servername = 't2__post_svr3__0';
--Testcase 181:
SELECT pg_sleep(2);
--Testcase 182:
SELECT i,t,a FROM t2 ORDER BY i,t,a,__spd_url;
*/
-- Test CoerceViaIO type
--Testcase 282:
CREATE FOREIGN TABLE tbl01 (c1 timestamp without time zone, c2 timestamp with time zone) SERVER pgspider_svr;
--Testcase 283:
CREATE FOREIGN TABLE tbl01__sqlite_svr__0 (c1 timestamp without time zone, c2 timestamp with time zone) SERVER sqlite_svr OPTIONS(table 'tbl01');
--Testcase 284:
SELECT * FROM tbl01;
            c1            |               c2                
--------------------------+---------------------------------
 Sat Jan 01 00:00:00 2000 | Fri Dec 31 14:00:00 1999 PST
 Mon Jan 01 00:00:00 0001 | Sun Dec 31 11:00:00 0001 PST BC
 Mon Oct 19 10:23:54 2015 | Sun Oct 18 20:23:54 2015 PDT
 Sat Jan 01 04:30:00 2000 | Fri Dec 31 10:30:00 1999 PST
 Sun May 13 00:00:00 2001 | Sun May 13 00:00:00 2001 PDT
 Tue Oct 19 10:23:54 2004 | Mon Oct 18 22:23:54 2004 PDT
 Sat Oct 19 15:20:54 2019 | Sat Oct 19 10:20:54 2019 PDT
 Fri Oct 29 10:25:56 2004 | Fri Oct 29 00:25:56 2004 PDT
 Mon Jan 01 00:00:00 2001 | Mon Jan 01 00:00:00 2001 PST
(9 rows)

--Testcase 285:
SELECT c1 || 'time1', c2 || 'time2' FROM tbl01 GROUP BY c1, c2;
           ?column?            |               ?column?               
-------------------------------+--------------------------------------
 Mon Jan 01 00:00:00 0001time1 | Sun Dec 31 11:00:00 0001 PST BCtime2
 Sat Jan 01 00:00:00 2000time1 | Fri Dec 31 14:00:00 1999 PSTtime2
 Sat Jan 01 04:30:00 2000time1 | Fri Dec 31 10:30:00 1999 PSTtime2
 Mon Jan 01 00:00:00 2001time1 | Mon Jan 01 00:00:00 2001 PSTtime2
 Sun May 13 00:00:00 2001time1 | Sun May 13 00:00:00 2001 PDTtime2
 Tue Oct 19 10:23:54 2004time1 | Mon Oct 18 22:23:54 2004 PDTtime2
 Fri Oct 29 10:25:56 2004time1 | Fri Oct 29 00:25:56 2004 PDTtime2
 Mon Oct 19 10:23:54 2015time1 | Sun Oct 18 20:23:54 2015 PDTtime2
 Sat Oct 19 15:20:54 2019time1 | Sat Oct 19 10:20:54 2019 PDTtime2
(9 rows)

--Testcase 286:
DROP FOREIGN TABLE tbl01__sqlite_svr__0;
--Testcase 287:
DROP FOREIGN TABLE tbl01;
-- Test select operator expressions which contain different data type, with WHERE clause contains __spd_url
--Testcase 288:
CREATE FOREIGN TABLE tbl02 (c1 double precision, c2 integer, c3 real, c4 smallint, c5 bigint, c6 numeric,__spd_url text) SERVER pgspider_svr;
--Testcase 289:
CREATE FOREIGN TABLE tbl02__sqlite_svr__0 (c1 double precision, c2 integer, c3 real, c4 smallint, c5 bigint, c6 numeric) SERVER sqlite_svr OPTIONS(table 'tbl02');
--Testcase 290:
SELECT * FROM tbl02;
  c1   | c2  | c3  | c4 | c5  |   c6   |  __spd_url   
-------+-----+-----+----+-----+--------+--------------
  1.55 | 100 | 2.3 |  1 | 243 |      6 | /sqlite_svr/
  2.77 | 123 | 1.2 |  2 | 246 |   7.12 | /sqlite_svr/
 -2.16 |  54 | 3.6 |  3 | 123 | 8.2201 | /sqlite_svr/
(3 rows)

--Testcase 291:
EXPLAIN VERBOSE
SELECT c1-c2, c2-c3, c3-c4, c3-c5, c5-c6 FROM tbl02 WHERE __spd_url != '$';
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Foreign Scan on public.tbl02  (cost=10.00..3498.32 rows=3413 width=64)
   Output: ((c1 - (c2)::double precision)), (((c2)::double precision - c3)), ((c3 - (c4)::double precision)), ((c3 - (c5)::double precision)), (((c5)::numeric - c6))
   Filter: (tbl02.__spd_url <> '$'::text)
   Node: sqlite_svr / Status: Alive
     SQLite query: SELECT (`c1` - `c2`), (`c2` - `c3`), (`c3` - `c4`), (`c3` - `c5`), (`c5` - `c6`) FROM main."tbl02"
(5 rows)

--Testcase 292:
SELECT c1-c2, c2-c3, c3-c4, c3-c5, c5-c6 FROM tbl02 WHERE __spd_url != '$';
 ?column? | ?column? |      ?column?      | ?column? | ?column? 
----------+----------+--------------------+----------+----------
   -98.45 |     97.7 | 1.2999999999999998 |   -240.7 |      237
  -120.23 |    121.8 |               -0.8 |   -244.8 |   238.88
   -56.16 |     50.4 | 0.6000000000000001 |   -119.4 | 114.7799
(3 rows)

-- Test for drop/add __spd_url column
--Testcase 298:
SELECT * FROM test1 ORDER BY i, __spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /file_svr/
     1 | /file_svr/
     1 | /mysql_svr/
     1 | /sqlite_svr/
     1 | /tiny_svr/
     2 | /file_svr/
     2 | /file_svr/
     3 | /file_svr/
     3 | /file_svr/
     4 | /file_svr/
     4 | /file_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
  1111 | /post_svr/
 22222 | /sqlite_svr/
(17 rows)

--Testcase 299:
ALTER FOREIGN TABLE test1 DROP COLUMN __spd_url;
--Testcase 300:
SELECT * FROM test1 ORDER BY i;
   i   
-------
     1
     1
     1
     1
     1
     2
     2
     3
     3
     4
     4
   777
   777
   777
   777
  1111
 22222
(17 rows)

--Testcase 301:
ALTER FOREIGN TABLE test1 ADD COLUMN __spd_url text;
--Testcase 302:
SELECT * FROM test1 ORDER BY i, __spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /file_svr/
     1 | /file_svr/
     1 | /mysql_svr/
     1 | /sqlite_svr/
     1 | /tiny_svr/
     2 | /file_svr/
     2 | /file_svr/
     3 | /file_svr/
     3 | /file_svr/
     4 | /file_svr/
     4 | /file_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
  1111 | /post_svr/
 22222 | /sqlite_svr/
(17 rows)

--Testcase 293:
DROP FOREIGN TABLE tbl02__sqlite_svr__0;
--Testcase 294:
DROP FOREIGN TABLE tbl02;
--Testcase 265:
DROP FOREIGN TABLE test1;
--Testcase 266:
DROP FOREIGN TABLE t1;
--Testcase 267:
DROP FOREIGN TABLE t2;
--Testcase 268:
DROP SERVER pgspider_svr CASCADE;
NOTICE:  drop cascades to 5 other objects
DETAIL:  drop cascades to user mapping for public on server pgspider_svr
drop cascades to foreign table filetbl
drop cascades to foreign table test1_1
drop cascades to foreign table mysqlt
drop cascades to foreign table post_large
--Testcase 269:
DROP EXTENSION pgspider_core_fdw CASCADE;
--Clean
--Testcase 270:
DROP EXTENSION postgres_fdw CASCADE;
NOTICE:  drop cascades to 18 other objects
DETAIL:  drop cascades to server post_svr
drop cascades to user mapping for public on server post_svr
drop cascades to foreign table test1__post_svr__0
drop cascades to foreign table test1_1__post_svr__0
drop cascades to foreign table t1__post_svr__0
drop cascades to foreign table post_large__post_svr__1
drop cascades to foreign table post_large__post_svr__2
drop cascades to foreign table post_large__post_svr__3
drop cascades to foreign table t2__post_svr__0
drop cascades to foreign table t2__post_svr__1
drop cascades to foreign table t2__post_svr__2
drop cascades to foreign table t2__post_svr__3
drop cascades to server post_svr2
drop cascades to user mapping for public on server post_svr2
drop cascades to foreign table t2__post_svr2__0
drop cascades to server post_svr3
drop cascades to user mapping for public on server post_svr3
drop cascades to foreign table t2__post_svr3__0
--Testcase 271:
DROP EXTENSION file_fdw CASCADE;
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to server file_svr
drop cascades to foreign table filetbl__file_svr__0
drop cascades to foreign table test1__file_svr__0
drop cascades to foreign table test1__file_svr__1
--Testcase 272:
DROP EXTENSION sqlite_fdw CASCADE;
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to server sqlite_svr
drop cascades to foreign table test1__sqlite_svr__0
drop cascades to foreign table test1_1__sqlite_svr__0
--Testcase 273:
DROP EXTENSION tinybrace_fdw CASCADE;
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to server tiny_svr
drop cascades to user mapping for public on server tiny_svr
drop cascades to foreign table test1__tiny_svr__0
drop cascades to foreign table test1_1__tiny_svr__0
--Testcase 274:
DROP EXTENSION mysql_fdw CASCADE;
NOTICE:  drop cascades to 9 other objects
DETAIL:  drop cascades to server mysql_svr
drop cascades to user mapping for public on server mysql_svr
drop cascades to foreign table test1__mysql_svr__0
drop cascades to foreign table test1_1__mysql_svr__0
drop cascades to foreign table mysqlt__mysql_svr__0
drop cascades to foreign table mysqlt__mysql_svr__1
drop cascades to foreign table mysqlt__mysql_svqr__2
drop cascades to server mysql_svr2
drop cascades to user mapping for public on server mysql_svr2
