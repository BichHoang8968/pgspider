\set ECHO none
--Testcase 1:
SET datestyle = ISO;
--Testcase 2:
SET timezone = 'UTC';
--Testcase 3:
DELETE FROM pg_spd_node_info;
--Testcase 4:
CREATE EXTENSION pgspider_core_fdw;
--Testcase 5:
CREATE SERVER pgspider_svr FOREIGN DATA WRAPPER pgspider_core_fdw OPTIONS (host :PGSPIDER_SERVER1);
--Testcase 6:
CREATE USER MAPPING FOR CURRENT_USER SERVER pgspider_svr;
--Testcase 7:
CREATE EXTENSION jdbc_fdw;
--Testcase 8:
CREATE SERVER jdbc_mysql_svr FOREIGN DATA WRAPPER jdbc_fdw OPTIONS(
drivername :JDBC_MYSQL_DRIVERNAME,
url :JDBC_MYSQL_URL,
querytimeout '15',
jarfile :JDBC_MYSQL_DRIVERPATH,
maxheapsize '600'
);
--Testcase 32:
CREATE USER MAPPING FOR public SERVER jdbc_mysql_svr OPTIONS(username :JDBC_MYSQL_USER, password :JDBC_MYSQL_PASS);
--Testcase 33:
CREATE SERVER jdbc_post_svr FOREIGN DATA WRAPPER jdbc_fdw OPTIONS(
drivername :JDBC_POSTGRES_DRIVERNAME,
url :JDBC_POSTGRES_URL,
querytimeout '15',
jarfile :JDBC_POSTGRES_DRIVERPATH,
maxheapsize '600'
);
--Testcase 9:
CREATE USER MAPPING FOR public SERVER jdbc_post_svr OPTIONS(username :JDBC_POSTGRES_USER, password :JDBC_POSTGRES_PASS);
-- Create multi tenant tables
-- tntbl2, 3
--Testcase 10:
CREATE FOREIGN TABLE tntbl2 (_id text, c1 int, c2 text, c3 boolean, c4 double precision, c5 bigint, __spd_url text) SERVER pgspider_svr;
CREATE FOREIGN TABLE tntbl3 (_id text, c1 int, c2 real, c3 double precision, c4 bigint, __spd_url text) SERVER pgspider_svr;
-- Foreign tables
--Testcase 11:
CREATE FOREIGN TABLE tntbl2__jdbc_mysql_svr__0 (_id text OPTIONS (key 'true'), c1 int, c2 text, c3 boolean, c4 double precision, c5 bigint) SERVER jdbc_mysql_svr OPTIONS (table_name 'tntbl2');
CREATE FOREIGN TABLE tntbl3__jdbc_post_svr__0 (_id text OPTIONS (key 'true'), c1 int, c2 real, c3 double precision, c4 bigint) SERVER jdbc_post_svr OPTIONS (table_name 'tntbl3');
-- Reset data of remote table before test
DELETE FROM tntbl2__jdbc_mysql_svr__0;
-- SELECT FROM table if there is any record
--Testcase 12:
SELECT * FROM tntbl2 ORDER BY 1, 2, 3;
 _id | c1 | c2 | c3 | c4 | c5 | __spd_url 
-----+----+----+----+----+----+-----------
(0 rows)

-----------------------------------------------------------------------------------
-- *** Start test for tntbl2 *** --
--
-- INSERT
-- insert with DEFAULT in the target_list
--
--Testcase 140:
INSERT INTO tntbl2 (_id, c1, c2, c3, c4, c5) VALUES (' ', DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT);
--Testcase 141:
INSERT INTO tntbl2 (_id, c2, c3) VALUES ('3', DEFAULT, DEFAULT);
--Testcase 142:
INSERT INTO tntbl2 (_id, c1, c2, c3) VALUES ('4', DEFAULT, '3q', DEFAULT);
--Testcase 143:
INSERT INTO tntbl2 VALUES ('DEFAULT', DEFAULT, 'test', true, 4654.0, 4000);
--Testcase 144:
INSERT INTO tntbl2 VALUES ('test', DEFAULT, 'test', false);
--Testcase 145:
SELECT * FROM tntbl2;
   _id   | c1 |  c2  | c3 |  c4  |  c5  |    __spd_url     
---------+----+------+----+------+------+------------------
         |    |      |    |      |      | /jdbc_mysql_svr/
 3       |    |      |    |      |      | /jdbc_mysql_svr/
 4       |    | 3q   |    |      |      | /jdbc_mysql_svr/
 DEFAULT |    | test | t  | 4654 | 4000 | /jdbc_mysql_svr/
 test    |    | test | f  |      |      | /jdbc_mysql_svr/
(5 rows)

--
-- insert with similar expression / target_list VALUES (all fail)
--
--Testcase 146:
INSERT INTO tntbl2 (_id, c1, c2, c3) VALUES ('121', DEFAULT, DEFAULT);
ERROR:  INSERT has more target columns than expressions
LINE 1: INSERT INTO tntbl2 (_id, c1, c2, c3) VALUES ('121', DEFAULT,...
                                         ^
--Testcase 147:
INSERT INTO tntbl2 (_id, c1, c2, c3) VALUES ('122', 1, '2');
ERROR:  INSERT has more target columns than expressions
LINE 1: INSERT INTO tntbl2 (_id, c1, c2, c3) VALUES ('122', 1, '2');
                                         ^
--Testcase 148:
INSERT INTO tntbl2 (_id, c1) VALUES ('a', 1, '3');
ERROR:  INSERT has more expressions than target columns
LINE 1: INSERT INTO tntbl2 (_id, c1) VALUES ('a', 1, '3');
                                                     ^
--Testcase 149:
INSERT INTO tntbl2 (_id, c1) VALUES ('b', DEFAULT, DEFAULT);
ERROR:  INSERT has more expressions than target columns
LINE 1: INSERT INTO tntbl2 (_id, c1) VALUES ('b', DEFAULT, DEFAULT);
                                                           ^
--Testcase 150:
SELECT * FROM tntbl2;
   _id   | c1 |  c2  | c3 |  c4  |  c5  |    __spd_url     
---------+----+------+----+------+------+------------------
         |    |      |    |      |      | /jdbc_mysql_svr/
 3       |    |      |    |      |      | /jdbc_mysql_svr/
 4       |    | 3q   |    |      |      | /jdbc_mysql_svr/
 DEFAULT |    | test | t  | 4654 | 4000 | /jdbc_mysql_svr/
 test    |    | test | f  |      |      | /jdbc_mysql_svr/
(5 rows)

--
-- VALUES test
--
--Testcase 151:
INSERT INTO tntbl2 VALUES('value1', 10, 'foo', false, 40.0, 5000), ('value2', -1, 'foo1', true, 2.0, DEFAULT),
    ((SELECT 'abc'), (SELECT 2), 'VALUES are fun!', true, (SELECT i FROM (VALUES(3.0)) as foo (i)), 1000);
--Testcase 152:
SELECT * FROM tntbl2;
   _id   | c1 |       c2        | c3 |  c4  |  c5  |    __spd_url     
---------+----+-----------------+----+------+------+------------------
         |    |                 |    |      |      | /jdbc_mysql_svr/
 3       |    |                 |    |      |      | /jdbc_mysql_svr/
 4       |    | 3q              |    |      |      | /jdbc_mysql_svr/
 abc     |  2 | VALUES are fun! | t  |    3 | 1000 | /jdbc_mysql_svr/
 DEFAULT |    | test            | t  | 4654 | 4000 | /jdbc_mysql_svr/
 test    |    | test            | f  |      |      | /jdbc_mysql_svr/
 value1  | 10 | foo             | f  |   40 | 5000 | /jdbc_mysql_svr/
 value2  | -1 | foo1            | t  |    2 |      | /jdbc_mysql_svr/
(8 rows)

--
-- TOASTed value test
--
--Testcase 153:
INSERT INTO tntbl2 VALUES(repeat('a', 25), 30, repeat('x', 25), true, 512.0, 2000);
--Testcase 154:
SELECT c1, c3, char_length(_id), char_length(c2) FROM tntbl2;
 c1 | c3 | char_length | char_length 
----+----+-------------+-------------
    |    |           1 |            
    |    |           1 |            
    |    |           1 |           2
 30 | t  |          25 |          25
  2 | t  |           3 |          15
    | t  |           7 |           4
    | f  |           4 |           4
 10 | f  |           6 |           3
 -1 | t  |           6 |           4
(9 rows)

--
-- INSERT with IN feature
--
--Testcase 155:
INSERT INTO tntbl2 IN ('/griddb_svr/') VALUES ('in1', 10, 'tst_in_feature', false, 5.0, 5000);
ERROR:  There is no candidate for INSERT.
--Testcase 156:
INSERT INTO tntbl2 IN ('/dynamodb_svr/', '/mongo_svr/') VALUES ('in2', 20, 'tst_in_feature', true, 6.0, 6000);
ERROR:  There is no candidate for INSERT.
--
-- UPDATE
--
--Testcase 157:
SELECT char_length(_id), c1, char_length(c2), c3, c4, c5 FROM tntbl2;
 char_length | c1 | char_length | c3 |  c4  |  c5  
-------------+----+-------------+----+------+------
           1 |    |             |    |      |     
           1 |    |             |    |      |     
           1 |    |           2 |    |      |     
          25 | 30 |          25 | t  |  512 | 2000
           3 |  2 |          15 | t  |    3 | 1000
           7 |    |           4 | t  | 4654 | 4000
           4 |    |           4 | f  |      |     
           6 | 10 |           3 | f  |   40 | 5000
           6 | -1 |           4 | t  |    2 |     
(9 rows)

--Testcase 158:
UPDATE tntbl2 SET c4 = DEFAULT;
--Testcase 159:
SELECT char_length(_id), c1, char_length(c2), c3, c4, c5 FROM tntbl2;
 char_length | c1 | char_length | c3 | c4 |  c5  
-------------+----+-------------+----+----+------
           1 |    |             |    |    |     
           1 |    |             |    |    |     
           1 |    |           2 |    |    |     
          25 | 30 |          25 | t  |    | 2000
           3 |  2 |          15 | t  |    | 1000
           7 |    |           4 | t  |    | 4000
           4 |    |           4 | f  |    |     
           6 | 10 |           3 | f  |    | 5000
           6 | -1 |           4 | t  |    |     
(9 rows)

-- aliases for the UPDATE target table
--Testcase 160:
UPDATE tntbl2 AS t SET c1 = 10 WHERE t.c5 = 1000;
--Testcase 161:
SELECT char_length(_id), c1, char_length(c2), c3, c4, c5 FROM tntbl2;
 char_length | c1 | char_length | c3 | c4 |  c5  
-------------+----+-------------+----+----+------
           1 |    |             |    |    |     
           1 |    |             |    |    |     
           1 |    |           2 |    |    |     
          25 | 30 |          25 | t  |    | 2000
           3 | 10 |          15 | t  |    | 1000
           7 |    |           4 | t  |    | 4000
           4 |    |           4 | f  |    |     
           6 | 10 |           3 | f  |    | 5000
           6 | -1 |           4 | t  |    |     
(9 rows)

--Testcase 162:
UPDATE tntbl2 t SET c1 = t.c1 + 10 WHERE t.c5 = 1000;
--Testcase 163:
SELECT char_length(_id), c1, char_length(c2), c3, c4, c5 FROM tntbl2;
 char_length | c1 | char_length | c3 | c4 |  c5  
-------------+----+-------------+----+----+------
           1 |    |             |    |    |     
           1 |    |             |    |    |     
           1 |    |           2 |    |    |     
          25 | 30 |          25 | t  |    | 2000
           3 | 20 |          15 | t  |    | 1000
           7 |    |           4 | t  |    | 4000
           4 |    |           4 | f  |    |     
           6 | 10 |           3 | f  |    | 5000
           6 | -1 |           4 | t  |    |     
(9 rows)

--
-- Test VALUES in FROM
--
--Testcase 164:
UPDATE tntbl2 SET c1=v.i FROM (VALUES(10, 1000)) AS v(i, j)
  WHERE tntbl2.c5 = v.j;
--Testcase 165:
SELECT char_length(_id), c1, char_length(c2), c3, c4, c5 FROM tntbl2;
 char_length | c1 | char_length | c3 | c4 |  c5  
-------------+----+-------------+----+----+------
           1 |    |             |    |    |     
           1 |    |             |    |    |     
           1 |    |           2 |    |    |     
          25 | 30 |          25 | t  |    | 2000
           3 | 10 |          15 | t  |    | 1000
           7 |    |           4 | t  |    | 4000
           4 |    |           4 | f  |    |     
           6 | 10 |           3 | f  |    | 5000
           6 | -1 |           4 | t  |    |     
(9 rows)

-- fail, wrong data type:
--Testcase 166:
UPDATE tntbl2 SET c1 = v.* FROM (VALUES(1000, 10)) AS v(i, j)
  WHERE tntbl2.c5 = v.j;
ERROR:  column "c1" is of type integer but expression is of type record
LINE 1: UPDATE tntbl2 SET c1 = v.* FROM (VALUES(1000, 10)) AS v(i, j...
                               ^
HINT:  You will need to rewrite or cast the expression.
--
-- Test multiple-set-clause syntax
--
--Testcase 167:
INSERT INTO tntbl2 (SELECT _id || 's#', c1 + 1, c2 || '@@' FROM tntbl2 ORDER BY 1, 2, 3);
--Testcase 168:
SELECT char_length(_id), c1, char_length(c2), c3, c4, c5 FROM tntbl2;
 char_length | c1 | char_length | c3 | c4 |  c5  
-------------+----+-------------+----+----+------
           1 |    |             |    |    |     
           3 |    |             |    |    |     
           1 |    |             |    |    |     
           3 |    |             |    |    |     
           1 |    |           2 |    |    |     
           3 |    |           4 |    |    |     
          25 | 30 |          25 | t  |    | 2000
          27 | 31 |          27 |    |    |     
           3 | 10 |          15 | t  |    | 1000
           5 | 11 |          17 |    |    |     
           7 |    |           4 | t  |    | 4000
           9 |    |           6 |    |    |     
           4 |    |           4 | f  |    |     
           6 |    |           6 |    |    |     
           6 | 10 |           3 | f  |    | 5000
           8 | 11 |           5 |    |    |     
           6 | -1 |           4 | t  |    |     
           8 |  0 |           6 |    |    |     
(18 rows)

--Testcase 169:
UPDATE tntbl2 SET (c1, c2) = (c1+11, DEFAULT) WHERE c3 = true;
--Testcase 170:
SELECT char_length(_id), c1, char_length(c2), c3, c4, c5 FROM tntbl2;
 char_length | c1 | char_length | c3 | c4 |  c5  
-------------+----+-------------+----+----+------
           1 |    |             |    |    |     
           3 |    |             |    |    |     
           1 |    |             |    |    |     
           3 |    |             |    |    |     
           1 |    |           2 |    |    |     
           3 |    |           4 |    |    |     
          25 | 41 |             | t  |    | 2000
          27 | 31 |          27 |    |    |     
           3 | 21 |             | t  |    | 1000
           5 | 11 |          17 |    |    |     
           7 |    |             | t  |    | 4000
           9 |    |           6 |    |    |     
           4 |    |           4 | f  |    |     
           6 |    |           6 |    |    |     
           6 | 10 |           3 | f  |    | 5000
           8 | 11 |           5 |    |    |     
           6 | 10 |             | t  |    |     
           8 |  0 |           6 |    |    |     
(18 rows)

--Testcase 171:
UPDATE tntbl2 SET (c2, c1) = ('car', c1 + c5), c4 = c4 + 10.0 WHERE c1 = 10;
--Testcase 172:
SELECT char_length(_id), c1, char_length(c2), c3, c4, c5 FROM tntbl2;
 char_length |  c1  | char_length | c3 | c4 |  c5  
-------------+------+-------------+----+----+------
           1 |      |             |    |    |     
           3 |      |             |    |    |     
           1 |      |             |    |    |     
           3 |      |             |    |    |     
           1 |      |           2 |    |    |     
           3 |      |           4 |    |    |     
          25 |   41 |             | t  |    | 2000
          27 |   31 |          27 |    |    |     
           3 |   21 |             | t  |    | 1000
           5 |   11 |          17 |    |    |     
           7 |      |             | t  |    | 4000
           9 |      |           6 |    |    |     
           4 |      |           4 | f  |    |     
           6 |      |           6 |    |    |     
           6 | 5010 |           3 | f  |    | 5000
           8 |   11 |           5 |    |    |     
           6 |      |           3 | t  |    |     
           8 |    0 |           6 |    |    |     
(18 rows)

-- fail, multi assignment to same column:
--Testcase 173:
UPDATE tntbl2 SET (c2, c4) = ('car', c1 + c4), c4 = c1 + 1 WHERE c1 = 10;
ERROR:  multiple assignments to same column "c4"
-- uncorrelated sub-SELECT:
--Testcase 174:
UPDATE tntbl2
  SET (c1, c3) = (SELECT c1, c3 FROM tntbl2 where c1 = 1010 and c2 = 'car')
  WHERE c5 = 1000 AND c1 = 21;
--Testcase 175:
SELECT char_length(_id), c1, char_length(c2), c3, c4, c5 FROM tntbl2;
 char_length |  c1  | char_length | c3 | c4 |  c5  
-------------+------+-------------+----+----+------
           1 |      |             |    |    |     
           3 |      |             |    |    |     
           1 |      |             |    |    |     
           3 |      |             |    |    |     
           1 |      |           2 |    |    |     
           3 |      |           4 |    |    |     
          25 |   41 |             | t  |    | 2000
          27 |   31 |          27 |    |    |     
           3 |      |             |    |    | 1000
           5 |   11 |          17 |    |    |     
           7 |      |             | t  |    | 4000
           9 |      |           6 |    |    |     
           4 |      |           4 | f  |    |     
           6 |      |           6 |    |    |     
           6 | 5010 |           3 | f  |    | 5000
           8 |   11 |           5 |    |    |     
           6 |      |           3 | t  |    |     
           8 |    0 |           6 |    |    |     
(18 rows)

-- correlated sub-SELECT:
--Testcase 176:
UPDATE tntbl2 o
  SET (c5, c1) = (SELECT c1+1, c5 FROM tntbl2 i
               where i.c1=o.c1 and i.c5=o.c5 and i.c2 is not distinct FROM o.c2);
--Testcase 177:
SELECT char_length(_id), c1, char_length(c2), c3, c4, c5 FROM tntbl2;
 char_length |  c1  | char_length | c3 | c4 |  c5  
-------------+------+-------------+----+----+------
           1 |      |             |    |    |     
           3 |      |             |    |    |     
           1 |      |             |    |    |     
           3 |      |             |    |    |     
           1 |      |           2 |    |    |     
           3 |      |           4 |    |    |     
          25 | 2000 |             | t  |    |   42
          27 |      |          27 |    |    |     
           3 |      |             |    |    |     
           5 |      |          17 |    |    |     
           7 |      |             | t  |    |     
           9 |      |           6 |    |    |     
           4 |      |           4 | f  |    |     
           6 |      |           6 |    |    |     
           6 | 5000 |           3 | f  |    | 5011
           8 |      |           5 |    |    |     
           6 |      |           3 | t  |    |     
           8 |      |           6 |    |    |     
(18 rows)

-- fail, multiple rows supplied:
--Testcase 178:
UPDATE tntbl2 SET (c5, c1) = (SELECT c1+1, c5 FROM tntbl2);
ERROR:  more than one row returned by a subquery used as an expression
-- set to null if no rows supplied:
--Testcase 179:
UPDATE tntbl2 SET (c5 , c1) = (SELECT c1+1, c5 FROM tntbl2 where c4 = 10.0)
  WHERE c4 = 50.0;
--Testcase 180:
SELECT char_length(_id), c1, char_length(c2), c3, c4, c5 FROM tntbl2;
 char_length |  c1  | char_length | c3 | c4 |  c5  
-------------+------+-------------+----+----+------
           1 |      |             |    |    |     
           3 |      |             |    |    |     
           1 |      |             |    |    |     
           3 |      |             |    |    |     
           1 |      |           2 |    |    |     
           3 |      |           4 |    |    |     
          25 | 2000 |             | t  |    |   42
          27 |      |          27 |    |    |     
           3 |      |             |    |    |     
           5 |      |          17 |    |    |     
           7 |      |             | t  |    |     
           9 |      |           6 |    |    |     
           4 |      |           4 | f  |    |     
           6 |      |           6 |    |    |     
           6 | 5000 |           3 | f  |    | 5011
           8 |      |           5 |    |    |     
           6 |      |           3 | t  |    |     
           8 |      |           6 |    |    |     
(18 rows)

-- *-expansion should work in this context:
--Testcase 181:
UPDATE tntbl2 SET (c1, c5) = ROW(v.*) FROM (VALUES(20, 3)) AS v(i, j)
  WHERE tntbl2.c1 = v.j;
-- you might expect this to work, but syntactically it's not a RowExpr:
--Testcase 182:
UPDATE tntbl2 SET (c1, c5) = (v.*) FROM (VALUES(20, 3)) AS v(i, j)
  WHERE tntbl2.c1 = v.j;
ERROR:  source for a multiple-column UPDATE item must be a sub-SELECT or ROW() expression
LINE 1: UPDATE tntbl2 SET (c1, c5) = (v.*) FROM (VALUES(20, 3)) AS v...
                                      ^
-- if an alias for the target table is specified, don't allow references
-- to the original table name
--Testcase 183:
UPDATE tntbl2 AS t SET c4 = tntbl2.c4 + 10 WHERE t.c1 = 10;
ERROR:  invalid reference to FROM-clause entry for table "tntbl2"
LINE 1: UPDATE tntbl2 AS t SET c4 = tntbl2.c4 + 10 WHERE t.c1 = 10;
                                    ^
HINT:  Perhaps you meant to reference the table alias "t".
-- Make sure that we can update to a TOASTed value.
--Testcase 184:
UPDATE tntbl2 SET _id = repeat('x', 25) WHERE c2 = 'car' and c1 = 5000;
--Testcase 185:
SELECT c1, char_length(c2), char_length(_id) FROM tntbl2;
  c1  | char_length | char_length 
------+-------------+-------------
      |             |           1
      |             |           3
      |             |           1
      |             |           3
      |           2 |           1
      |           4 |           3
 2000 |             |          25
      |          27 |          27
      |             |           3
      |          17 |           5
      |             |           7
      |           6 |           9
      |           4 |           4
      |           6 |           6
      |           5 |           8
      |           3 |           6
      |           6 |           8
 5000 |           3 |          25
(18 rows)

-- Check multi-assignment with a Result node to handle a one-time filter.
--Testcase 186:
EXPLAIN (VERBOSE, COSTS OFF)
UPDATE tntbl2 t
  SET (c1, c5) = (SELECT c5, c1 FROM tntbl2 s WHERE s.c1 = t.c1)
  WHERE CURRENT_USER = SESSION_USER;
                                               QUERY PLAN                                                
---------------------------------------------------------------------------------------------------------
 Update on public.tntbl2 t
   Node: jdbc_mysql_svr / Status: Alive
     Remote SQL: UPDATE tntbl2 SET c1 = ?, c5 = ? WHERE _id=?
   ->  Result
         Output: (($1)::integer), (($2)::bigint), ((SubPlan 1 (returns $1,$2))), t._id, t.__spd_url, t.*
         One-Time Filter: (CURRENT_USER = SESSION_USER)
         ->  Foreign Scan on public.tntbl2 t
               Output: $1, $2, (SubPlan 1 (returns $1,$2)), t._id, t.__spd_url, t.*
               Filter: (CURRENT_USER = SESSION_USER)
               Node: jdbc_mysql_svr / Status: Alive
                 Remote SQL: SELECT _id, c1, c2, c3, c4, c5 FROM tntbl2
               SubPlan 1 (returns $1,$2)
                 ->  Foreign Scan on public.tntbl2 s
                       Output: s.c5, s.c1
                       Filter: (s.c1 = t.c1)
                       Node: jdbc_mysql_svr / Status: Alive
                         Remote SQL: SELECT c1, c5 FROM tntbl2
(17 rows)

--Testcase 187:
UPDATE tntbl2 t
  SET (c1, c5) = (SELECT c5, c1 FROM tntbl2 s WHERE s.c1 = t.c1)
  WHERE CURRENT_USER = SESSION_USER;
--Testcase 188:
SELECT c1, c5, char_length(c2) FROM tntbl2;
  c1  |  c5  | char_length 
------+------+-------------
      |      |            
      |      |            
      |      |            
      |      |            
      |      |           2
      |      |           4
   42 | 2000 |            
      |      |          27
      |      |            
      |      |          17
      |      |            
      |      |           6
      |      |           4
      |      |           6
      |      |           5
      |      |           3
      |      |           6
 5011 | 5000 |           3
(18 rows)

--
-- UPDATE with IN feature
--
--Testcase 189:
UPDATE tntbl2 IN ('/dynamodb_svr/') SET c4 = 56563.1212;
ERROR:  No child node support modification.
--Testcase 190:
UPDATE tntbl2 IN ('/odbc_post_svr/', '/jdbc_mysql_svr/') SET c4 = 22.2;
--
-- DELETE
--
-- allow an alias to be specified for DELETE's target table
--Testcase 191:
DELETE FROM tntbl2 AS dt WHERE dt.c1 > 75;
-- if an alias is specified, don't allow the original table name
-- to be referenced
--Testcase 192:
DELETE FROM tntbl2 dt WHERE tntbl2.c1 > 25;
ERROR:  invalid reference to FROM-clause entry for table "tntbl2"
LINE 1: DELETE FROM tntbl2 dt WHERE tntbl2.c1 > 25;
                                    ^
HINT:  Perhaps you meant to reference the table alias "dt".
--Testcase 193:
SELECT char_length(_id), c1, char_length(c2) FROM tntbl2;
 char_length | c1 | char_length 
-------------+----+-------------
           1 |    |            
           3 |    |            
           1 |    |            
           3 |    |            
           1 |    |           2
           3 |    |           4
          25 | 42 |            
          27 |    |          27
           3 |    |            
           5 |    |          17
           7 |    |            
           9 |    |           6
           4 |    |           4
           6 |    |           6
           8 |    |           5
           6 |    |           3
           8 |    |           6
(17 rows)

-- delete a row with a TOASTed value
--Testcase 194:
DELETE FROM tntbl2 WHERE c2 = 'car';
--Testcase 195:
SELECT c1, char_length(_id) FROM tntbl2;
 c1 | char_length 
----+-------------
    |           1
    |           3
    |           1
    |           3
    |           1
    |           3
 42 |          25
    |          27
    |           3
    |           5
    |           7
    |           9
    |           4
    |           6
    |           8
    |           8
(16 rows)

--
-- DELETE with IN feature
--
--Testcase 196:
DELETE FROM tntbl2 IN ('/mongo_svr/') WHERE c1 = 10;
ERROR:  No child node support modification.
--Testcase 197:
DELETE FROM tntbl2 IN ('/dynamodb_svr/', '/odbc_post_svr/', '/griddb_svr/') WHERE c5 = 4000;
ERROR:  No child node support modification.
--Testcase 338:
INSERT INTO tntbl2 (_id, c1, c2, c3, c4, c5) VALUES ('121', 29, 'DEFAULT', true, 4.0, 4000);
--Testcase 339:
INSERT INTO tntbl2 (_id, c1, c2, c3) VALUES ('122', 1, '2', true);
--Testcase 340:
INSERT INTO tntbl2 IN ('/griddb_svr/') VALUES ('xin3', 10, 'tst_in_feature', true, 5.0, 5000);
ERROR:  There is no candidate for INSERT.
--Testcase 341:
SELECT * FROM tntbl2;
             _id             | c1 |             c2              | c3 |  c4  |  c5  |    __spd_url     
-----------------------------+----+-----------------------------+----+------+------+------------------
                             |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
  s#                         |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
 121                         | 29 | DEFAULT                     | t  |    4 | 4000 | /jdbc_mysql_svr/
 122                         |  1 | 2                           | t  |      |      | /jdbc_mysql_svr/
 3                           |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
 3s#                         |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
 4                           |    | 3q                          |    | 22.2 |      | /jdbc_mysql_svr/
 4s#                         |    | 3q@@                        |    | 22.2 |      | /jdbc_mysql_svr/
 aaaaaaaaaaaaaaaaaaaaaaaaa   | 42 |                             | t  | 22.2 | 2000 | /jdbc_mysql_svr/
 aaaaaaaaaaaaaaaaaaaaaaaaas# |    | xxxxxxxxxxxxxxxxxxxxxxxxx@@ |    | 22.2 |      | /jdbc_mysql_svr/
 abc                         |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
 abcs#                       |    | VALUES are fun!@@           |    | 22.2 |      | /jdbc_mysql_svr/
 DEFAULT                     |    |                             | t  | 22.2 |      | /jdbc_mysql_svr/
 DEFAULTs#                   |    | test@@                      |    | 22.2 |      | /jdbc_mysql_svr/
 test                        |    | test                        | f  | 22.2 |      | /jdbc_mysql_svr/
 tests#                      |    | test@@                      |    | 22.2 |      | /jdbc_mysql_svr/
 value1s#                    |    | foo@@                       |    | 22.2 |      | /jdbc_mysql_svr/
 value2s#                    |    | foo1@@                      |    | 22.2 |      | /jdbc_mysql_svr/
(18 rows)

--Testcase 342:
UPDATE tntbl2 IN ('/dynamodb_svr/') SET c4 = 7000;
ERROR:  No child node support modification.
--Testcase 343:
SELECT * FROM tntbl2;
             _id             | c1 |             c2              | c3 |  c4  |  c5  |    __spd_url     
-----------------------------+----+-----------------------------+----+------+------+------------------
                             |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
  s#                         |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
 121                         | 29 | DEFAULT                     | t  |    4 | 4000 | /jdbc_mysql_svr/
 122                         |  1 | 2                           | t  |      |      | /jdbc_mysql_svr/
 3                           |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
 3s#                         |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
 4                           |    | 3q                          |    | 22.2 |      | /jdbc_mysql_svr/
 4s#                         |    | 3q@@                        |    | 22.2 |      | /jdbc_mysql_svr/
 aaaaaaaaaaaaaaaaaaaaaaaaa   | 42 |                             | t  | 22.2 | 2000 | /jdbc_mysql_svr/
 aaaaaaaaaaaaaaaaaaaaaaaaas# |    | xxxxxxxxxxxxxxxxxxxxxxxxx@@ |    | 22.2 |      | /jdbc_mysql_svr/
 abc                         |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
 abcs#                       |    | VALUES are fun!@@           |    | 22.2 |      | /jdbc_mysql_svr/
 DEFAULT                     |    |                             | t  | 22.2 |      | /jdbc_mysql_svr/
 DEFAULTs#                   |    | test@@                      |    | 22.2 |      | /jdbc_mysql_svr/
 test                        |    | test                        | f  | 22.2 |      | /jdbc_mysql_svr/
 tests#                      |    | test@@                      |    | 22.2 |      | /jdbc_mysql_svr/
 value1s#                    |    | foo@@                       |    | 22.2 |      | /jdbc_mysql_svr/
 value2s#                    |    | foo1@@                      |    | 22.2 |      | /jdbc_mysql_svr/
(18 rows)

--Testcase 344:
DELETE FROM tntbl2 WHERE c2 = '2';
--Testcase 345:
SELECT * FROM tntbl2;
             _id             | c1 |             c2              | c3 |  c4  |  c5  |    __spd_url     
-----------------------------+----+-----------------------------+----+------+------+------------------
                             |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
  s#                         |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
 121                         | 29 | DEFAULT                     | t  |    4 | 4000 | /jdbc_mysql_svr/
 3                           |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
 3s#                         |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
 4                           |    | 3q                          |    | 22.2 |      | /jdbc_mysql_svr/
 4s#                         |    | 3q@@                        |    | 22.2 |      | /jdbc_mysql_svr/
 aaaaaaaaaaaaaaaaaaaaaaaaa   | 42 |                             | t  | 22.2 | 2000 | /jdbc_mysql_svr/
 aaaaaaaaaaaaaaaaaaaaaaaaas# |    | xxxxxxxxxxxxxxxxxxxxxxxxx@@ |    | 22.2 |      | /jdbc_mysql_svr/
 abc                         |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
 abcs#                       |    | VALUES are fun!@@           |    | 22.2 |      | /jdbc_mysql_svr/
 DEFAULT                     |    |                             | t  | 22.2 |      | /jdbc_mysql_svr/
 DEFAULTs#                   |    | test@@                      |    | 22.2 |      | /jdbc_mysql_svr/
 test                        |    | test                        | f  | 22.2 |      | /jdbc_mysql_svr/
 tests#                      |    | test@@                      |    | 22.2 |      | /jdbc_mysql_svr/
 value1s#                    |    | foo@@                       |    | 22.2 |      | /jdbc_mysql_svr/
 value2s#                    |    | foo1@@                      |    | 22.2 |      | /jdbc_mysql_svr/
(17 rows)

--Testcase 346:
DELETE FROM tntbl2 IN ('/mongo_svr/') WHERE c1 = 10;
ERROR:  No child node support modification.
--Testcase 347:
SELECT * FROM tntbl2;
             _id             | c1 |             c2              | c3 |  c4  |  c5  |    __spd_url     
-----------------------------+----+-----------------------------+----+------+------+------------------
                             |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
  s#                         |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
 121                         | 29 | DEFAULT                     | t  |    4 | 4000 | /jdbc_mysql_svr/
 3                           |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
 3s#                         |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
 4                           |    | 3q                          |    | 22.2 |      | /jdbc_mysql_svr/
 4s#                         |    | 3q@@                        |    | 22.2 |      | /jdbc_mysql_svr/
 aaaaaaaaaaaaaaaaaaaaaaaaa   | 42 |                             | t  | 22.2 | 2000 | /jdbc_mysql_svr/
 aaaaaaaaaaaaaaaaaaaaaaaaas# |    | xxxxxxxxxxxxxxxxxxxxxxxxx@@ |    | 22.2 |      | /jdbc_mysql_svr/
 abc                         |    |                             |    | 22.2 |      | /jdbc_mysql_svr/
 abcs#                       |    | VALUES are fun!@@           |    | 22.2 |      | /jdbc_mysql_svr/
 DEFAULT                     |    |                             | t  | 22.2 |      | /jdbc_mysql_svr/
 DEFAULTs#                   |    | test@@                      |    | 22.2 |      | /jdbc_mysql_svr/
 test                        |    | test                        | f  | 22.2 |      | /jdbc_mysql_svr/
 tests#                      |    | test@@                      |    | 22.2 |      | /jdbc_mysql_svr/
 value1s#                    |    | foo@@                       |    | 22.2 |      | /jdbc_mysql_svr/
 value2s#                    |    | foo1@@                      |    | 22.2 |      | /jdbc_mysql_svr/
(17 rows)

--
-- Test with optional options: tntbl2
--
--
--
-- ON CONFLICT, this work only on postgres_fdw
--
--Testcase 398:
INSERT INTO tntbl2(_id, c1) VALUES('key', 12);  -- duplicate key
--Testcase 399:
INSERT INTO tntbl2(_id, c1) VALUES('key', 12) ON CONFLICT DO NOTHING; -- works
ERROR:  ON CONFLICT clause is not supported
--Testcase 400:
INSERT INTO tntbl2(_id, c1) VALUES('key', 12) ON CONFLICT (_id, c1) DO NOTHING; -- unsupported
ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
--Testcase 401:
INSERT INTO tntbl2(_id, c1) VALUES('key', 12) ON CONFLICT (_id, c1) DO UPDATE SET c2 = 'conficted!'; -- unsupported
ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
--
-- WITH CHECK, this work only on postgres_fdw
--
--Testcase 402:
CREATE VIEW rw_view AS SELECT * FROM tntbl2
  WHERE c1 < c5 WITH CHECK OPTION;
--Testcase 403:
\d+ rw_view
                                 View "public.rw_view"
  Column   |       Type       | Collation | Nullable | Default | Storage  | Description 
-----------+------------------+-----------+----------+---------+----------+-------------
 _id       | text             |           |          |         | extended | 
 c1        | integer          |           |          |         | plain    | 
 c2        | text             |           |          |         | extended | 
 c3        | boolean          |           |          |         | plain    | 
 c4        | double precision |           |          |         | plain    | 
 c5        | bigint           |           |          |         | plain    | 
 __spd_url | text             |           |          |         | extended | 
View definition:
 SELECT _id,
    c1,
    c2,
    c3,
    c4,
    c5,
    __spd_url
   FROM tntbl2
  WHERE c1 < c5;
Options: check_option=cascaded

--Testcase 404:
EXPLAIN (VERBOSE, COSTS OFF)
INSERT INTO rw_view(_id, c1, c5) VALUES ('id1', 5, 0);
ERROR:  WITH CHECK clause is not supported
--Testcase 405:
INSERT INTO rw_view(_id, c1, c5) VALUES ('id1', 5, 0); -- should fail
ERROR:  WITH CHECK clause is not supported
--Testcase 406:
EXPLAIN (VERBOSE, COSTS OFF)
INSERT INTO rw_view(_id, c1, c5) VALUES ('id2', 5, 3000);
ERROR:  WITH CHECK clause is not supported
--Testcase 407:
INSERT INTO rw_view(_id, c1, c5) VALUES ('id2', 5, 3000); -- ok
ERROR:  WITH CHECK clause is not supported
--Testcase 408:
SELECT char_length(_id), c1, char_length(c2), c3, c4, c5 FROM tntbl2;
 char_length | c1 | char_length | c3 |  c4  |  c5  
-------------+----+-------------+----+------+------
           1 |    |             |    | 22.2 |     
           3 |    |             |    | 22.2 |     
           3 | 29 |           7 | t  |    4 | 4000
           1 |    |             |    | 22.2 |     
           3 |    |             |    | 22.2 |     
           1 |    |           2 |    | 22.2 |     
           3 |    |           4 |    | 22.2 |     
          25 | 42 |             | t  | 22.2 | 2000
          27 |    |          27 |    | 22.2 |     
           3 |    |             |    | 22.2 |     
           5 |    |          17 |    | 22.2 |     
           7 |    |             | t  | 22.2 |     
           9 |    |           6 |    | 22.2 |     
           3 | 12 |             |    |      |     
           4 |    |           4 | f  | 22.2 |     
           6 |    |           6 |    | 22.2 |     
           8 |    |           5 |    | 22.2 |     
           8 |    |           6 |    | 22.2 |     
(18 rows)

--Testcase 409:
EXPLAIN (VERBOSE, COSTS OFF)
UPDATE rw_view SET c1 = c1 + 10000;
ERROR:  WITH CHECK clause is not supported
--Testcase 410:
UPDATE rw_view SET c1 = c1 + 10000; -- should fail
ERROR:  WITH CHECK clause is not supported
--Testcase 411:
EXPLAIN (VERBOSE, COSTS OFF)
UPDATE rw_view SET c1 = c1 + 15;
ERROR:  WITH CHECK clause is not supported
--Testcase 412:
UPDATE rw_view SET c1 = c1 + 15; -- ok
ERROR:  WITH CHECK clause is not supported
--Testcase 413:
SELECT char_length(_id), c1, char_length(c2), c3, c4, c5 FROM tntbl2;
 char_length | c1 | char_length | c3 |  c4  |  c5  
-------------+----+-------------+----+------+------
           1 |    |             |    | 22.2 |     
           3 |    |             |    | 22.2 |     
           3 | 29 |           7 | t  |    4 | 4000
           1 |    |             |    | 22.2 |     
           3 |    |             |    | 22.2 |     
           1 |    |           2 |    | 22.2 |     
           3 |    |           4 |    | 22.2 |     
          25 | 42 |             | t  | 22.2 | 2000
          27 |    |          27 |    | 22.2 |     
           3 |    |             |    | 22.2 |     
           5 |    |          17 |    | 22.2 |     
           7 |    |             | t  | 22.2 |     
           9 |    |           6 |    | 22.2 |     
           3 | 12 |             |    |      |     
           4 |    |           4 | f  | 22.2 |     
           6 |    |           6 |    | 22.2 |     
           8 |    |           5 |    | 22.2 |     
           8 |    |           6 |    | 22.2 |     
(18 rows)

--Testcase 414:
DROP VIEW rw_view;
--
-- RETURNING
--
--Testcase 415:
INSERT INTO tntbl2 VALUES ('00:05:00', 20, '2022-05-16', false, 50.0, 7000) RETURNING *;
ERROR:  RETURNING clause is not supported
--Testcase 416:
INSERT INTO tntbl2 (_id, c1, c2, c3, c4, c5) VALUES ('_key_', 30, 'test', true, 50.0, 8000) RETURNING c1, c4, c5;
ERROR:  RETURNING clause is not supported
--Testcase 417:
UPDATE tntbl2 SET c2 = '2100-01-01 10:00:00+01' WHERE c1 = 20 AND c3 = false RETURNING (tntbl2), *;
ERROR:  RETURNING clause is not supported
--Testcase 418:
DELETE FROM tntbl2 WHERE c4 = 50.0 RETURNING _id, c1, c2;
ERROR:  RETURNING clause is not supported
--Testcase 419:
DELETE FROM tntbl2 RETURNING *;
ERROR:  RETURNING clause is not supported
-- *** Finish test for tntbl2 *** --
-----------------------------------------------------------------------------------
-- Reset data of remote table before test
DELETE FROM tntbl3__jdbc_post_svr__0;
INSERT INTO tntbl3__jdbc_post_svr__0 VALUES ('jdbc', 10, 10.0, 1000.0, 10000);
-- SELECT FROM table if there is any record
SELECT * FROM tntbl3 ORDER BY 1, 2, 3;
 _id  | c1 | c2 |  c3  |  c4   |    __spd_url    
------+----+----+------+-------+-----------------
 jdbc | 10 | 10 | 1000 | 10000 | /jdbc_post_svr/
(1 row)

-- *** Start test for tntbl3 *** --
--
-- INSERT
-- insert with DEFAULT in the target_list
--
--Testcase 198:
Set pgspider_core_fdw.throw_error_ifdead to false;
INSERT INTO tntbl3 (_id, c1, c2, c3, c4) VALUES ('@', DEFAULT, DEFAULT, DEFAULT, DEFAULT);
--Testcase 199:
INSERT INTO tntbl3 (_id, c2, c3) VALUES ('_3', 3.0, DEFAULT);
--Testcase 200:
INSERT INTO tntbl3 (_id, c1, c2, c3) VALUES ('_4', DEFAULT, 5.0, DEFAULT);
--Testcase 201:
INSERT INTO tntbl3 VALUES ('test1', DEFAULT, 5.0, 600.0, 1000);
--Testcase 202:
INSERT INTO tntbl3 VALUES ('test2', DEFAULT, 7.0);
--Testcase 203:
SELECT * FROM tntbl3 ORDER BY 1, 2, 3;
  _id  | c1 | c2 |  c3  |  c4   |    __spd_url    
-------+----+----+------+-------+-----------------
 @     |    |    |      |       | /jdbc_post_svr/
 _3    |    |  3 |      |       | /jdbc_post_svr/
 _4    |    |  5 |      |       | /jdbc_post_svr/
 jdbc  | 10 | 10 | 1000 | 10000 | /jdbc_post_svr/
 test1 |    |  5 |  600 |  1000 | /jdbc_post_svr/
 test2 |    |  7 |      |       | /jdbc_post_svr/
(6 rows)

--
-- insert with similar expression / target_list VALUES (all fail)
--
--Testcase 204:
INSERT INTO tntbl3 (_id, c1, c2, c3) VALUES ('wrong1', DEFAULT, DEFAULT);
ERROR:  INSERT has more target columns than expressions
LINE 1: INSERT INTO tntbl3 (_id, c1, c2, c3) VALUES ('wrong1', DEFAU...
                                         ^
--Testcase 205:
INSERT INTO tntbl3 (_id, c1, c2, c3) VALUES ('wrong2', 1, 2.0);
ERROR:  INSERT has more target columns than expressions
LINE 1: INSERT INTO tntbl3 (_id, c1, c2, c3) VALUES ('wrong2', 1, 2....
                                         ^
--Testcase 206:
INSERT INTO tntbl3 (_id, c1) VALUES ('wrong3', 1, 2);
ERROR:  INSERT has more expressions than target columns
LINE 1: INSERT INTO tntbl3 (_id, c1) VALUES ('wrong3', 1, 2);
                                                          ^
--Testcase 207:
INSERT INTO tntbl3 (_id, c1) VALUES ('wrong4',DEFAULT, DEFAULT);
ERROR:  INSERT has more expressions than target columns
LINE 1: ...RT INTO tntbl3 (_id, c1) VALUES ('wrong4',DEFAULT, DEFAULT);
                                                              ^
--Testcase 208:
SELECT * FROM tntbl3 ORDER BY 1, 2, 3;
  _id  | c1 | c2 |  c3  |  c4   |    __spd_url    
-------+----+----+------+-------+-----------------
 @     |    |    |      |       | /jdbc_post_svr/
 _3    |    |  3 |      |       | /jdbc_post_svr/
 _4    |    |  5 |      |       | /jdbc_post_svr/
 jdbc  | 10 | 10 | 1000 | 10000 | /jdbc_post_svr/
 test1 |    |  5 |  600 |  1000 | /jdbc_post_svr/
 test2 |    |  7 |      |       | /jdbc_post_svr/
(6 rows)

--
-- VALUES test
--
--Testcase 209:
INSERT INTO tntbl3 VALUES('test111', 10, 2.0, 20.0, 2000), ('test222', -1, 2.0, DEFAULT, 3000),
    ((SELECT 'test3'), (SELECT 90), (SELECT i FROM (VALUES(3.0)) as foo (i)), 30.0, 4000);
--Testcase 210:
SELECT * FROM tntbl3 ORDER BY 1, 2, 3;
   _id   | c1 | c2 |  c3  |  c4   |    __spd_url    
---------+----+----+------+-------+-----------------
 @       |    |    |      |       | /jdbc_post_svr/
 _3      |    |  3 |      |       | /jdbc_post_svr/
 _4      |    |  5 |      |       | /jdbc_post_svr/
 jdbc    | 10 | 10 | 1000 | 10000 | /jdbc_post_svr/
 test1   |    |  5 |  600 |  1000 | /jdbc_post_svr/
 test111 | 10 |  2 |   20 |  2000 | /jdbc_post_svr/
 test2   |    |  7 |      |       | /jdbc_post_svr/
 test222 | -1 |  2 |      |  3000 | /jdbc_post_svr/
 test3   | 90 |  3 |   30 |  4000 | /jdbc_post_svr/
(9 rows)

--
-- TOASTed value test
--
--Testcase 211:
INSERT INTO tntbl3 VALUES(repeat('x', 25), 20, 4.0, 40.0, 5000);
--Testcase 212:
SELECT c1, c2, _id FROM tntbl3 ORDER BY 1, 2, 3;
 c1 | c2 |            _id            
----+----+---------------------------
 -1 |  2 | test222
 10 |  2 | test111
 10 | 10 | jdbc
 20 |  4 | xxxxxxxxxxxxxxxxxxxxxxxxx
 90 |  3 | test3
    |  3 | _3
    |  5 | _4
    |  5 | test1
    |  7 | test2
    |    | @
(10 rows)

--
-- INSERT with IN feature
--
--Testcase 213:
INSERT INTO tntbl3 IN ('/sqlite_svr/') VALUES ('_test', 10, 5.0, 50.0, 5000);
ERROR:  There is no candidate for INSERT.
--Testcase 214:
INSERT INTO tntbl3 IN ('/dynamodb_svr/', '/mongo_svr/', '/griddb_svr/', '/mysql_svr/', '/postgres_svr/', '/postgres_svr_1/') VALUES ('_infea', 20, 6.0, 60.0, 6000);
ERROR:  There is no candidate for INSERT.
--
-- UPDATE
--
--Testcase 215:
SELECT _id, c1, c2, c3, c4 FROM tntbl3 ORDER BY 1, 2, 3;
            _id            | c1 | c2 |  c3  |  c4   
---------------------------+----+----+------+-------
 @                         |    |    |      |      
 _3                        |    |  3 |      |      
 _4                        |    |  5 |      |      
 jdbc                      | 10 | 10 | 1000 | 10000
 test1                     |    |  5 |  600 |  1000
 test111                   | 10 |  2 |   20 |  2000
 test2                     |    |  7 |      |      
 test222                   | -1 |  2 |      |  3000
 test3                     | 90 |  3 |   30 |  4000
 xxxxxxxxxxxxxxxxxxxxxxxxx | 20 |  4 |   40 |  5000
(10 rows)

--Testcase 216:
UPDATE tntbl3 SET c3 = DEFAULT, c4 = DEFAULT;
--Testcase 217:
SELECT _id, c1, c2, c3, c4 FROM tntbl3 ORDER BY 1, 2, 3;
            _id            | c1 | c2 | c3 | c4 
---------------------------+----+----+----+----
 @                         |    |    |    |   
 _3                        |    |  3 |    |   
 _4                        |    |  5 |    |   
 jdbc                      | 10 | 10 |    |   
 test1                     |    |  5 |    |   
 test111                   | 10 |  2 |    |   
 test2                     |    |  7 |    |   
 test222                   | -1 |  2 |    |   
 test3                     | 90 |  3 |    |   
 xxxxxxxxxxxxxxxxxxxxxxxxx | 20 |  4 |    |   
(10 rows)

-- aliases for the UPDATE target table
--Testcase 218:
UPDATE tntbl3 AS t SET c1 = 10 WHERE t.c2 = 2.0;
--Testcase 219:
SELECT _id, c1, c2, c3, c4 FROM tntbl3 ORDER BY 1, 2, 3;
            _id            | c1 | c2 | c3 | c4 
---------------------------+----+----+----+----
 @                         |    |    |    |   
 _3                        |    |  3 |    |   
 _4                        |    |  5 |    |   
 jdbc                      | 10 | 10 |    |   
 test1                     |    |  5 |    |   
 test111                   | 10 |  2 |    |   
 test2                     |    |  7 |    |   
 test222                   | 10 |  2 |    |   
 test3                     | 90 |  3 |    |   
 xxxxxxxxxxxxxxxxxxxxxxxxx | 20 |  4 |    |   
(10 rows)

--Testcase 220:
UPDATE tntbl3 t SET c1 = t.c1 + 10 WHERE t.c2 = 4.0;
--Testcase 221:
SELECT _id, c1, c2, c3, c4 FROM tntbl3 ORDER BY 1, 2, 3;
            _id            | c1 | c2 | c3 | c4 
---------------------------+----+----+----+----
 @                         |    |    |    |   
 _3                        |    |  3 |    |   
 _4                        |    |  5 |    |   
 jdbc                      | 10 | 10 |    |   
 test1                     |    |  5 |    |   
 test111                   | 10 |  2 |    |   
 test2                     |    |  7 |    |   
 test222                   | 10 |  2 |    |   
 test3                     | 90 |  3 |    |   
 xxxxxxxxxxxxxxxxxxxxxxxxx | 30 |  4 |    |   
(10 rows)

--
-- Test VALUES in FROM
--
--Testcase 222:
UPDATE tntbl3 SET c1=v.i FROM (VALUES(100, 5)) AS v(i, j)
  WHERE tntbl3.c1 = v.j;
--Testcase 223:
SELECT _id, c1, c2, c3, c4 FROM tntbl3 ORDER BY 1, 2, 3;
            _id            | c1 | c2 | c3 | c4 
---------------------------+----+----+----+----
 @                         |    |    |    |   
 _3                        |    |  3 |    |   
 _4                        |    |  5 |    |   
 jdbc                      | 10 | 10 |    |   
 test1                     |    |  5 |    |   
 test111                   | 10 |  2 |    |   
 test2                     |    |  7 |    |   
 test222                   | 10 |  2 |    |   
 test3                     | 90 |  3 |    |   
 xxxxxxxxxxxxxxxxxxxxxxxxx | 30 |  4 |    |   
(10 rows)

-- fail, wrong data type:
--Testcase 224:
UPDATE tntbl3 SET c1 = v.* FROM (VALUES(100, 2000)) AS v(i, j)
  WHERE tntbl3.c4 = v.j;
ERROR:  column "c1" is of type integer but expression is of type record
LINE 1: UPDATE tntbl3 SET c1 = v.* FROM (VALUES(100, 2000)) AS v(i, ...
                               ^
HINT:  You will need to rewrite or cast the expression.
--
-- Test multiple-set-clause syntax
--
--Testcase 225:
-- Commmented, fail due to oracle_fdw. Not reported yet.
-- INSERT INTO tntbl3 SELECT _id || '1', c1 + 1, c2 + 1, c3 FROM tntbl3;
--Testcase 226:
SELECT _id, c1, c2, c3, c4 FROM tntbl3 ORDER BY 1, 2, 3;
            _id            | c1 | c2 | c3 | c4 
---------------------------+----+----+----+----
 @                         |    |    |    |   
 _3                        |    |  3 |    |   
 _4                        |    |  5 |    |   
 jdbc                      | 10 | 10 |    |   
 test1                     |    |  5 |    |   
 test111                   | 10 |  2 |    |   
 test2                     |    |  7 |    |   
 test222                   | 10 |  2 |    |   
 test3                     | 90 |  3 |    |   
 xxxxxxxxxxxxxxxxxxxxxxxxx | 30 |  4 |    |   
(10 rows)

--Testcase 227:
UPDATE tntbl3 SET (c1, c2) = (c1 + 11, DEFAULT) WHERE c2 = 2.0;
--Testcase 228:
SELECT _id, c1, c2, c3, c4 FROM tntbl3 ORDER BY 1, 2, 3;
            _id            | c1 | c2 | c3 | c4 
---------------------------+----+----+----+----
 @                         |    |    |    |   
 _3                        |    |  3 |    |   
 _4                        |    |  5 |    |   
 jdbc                      | 10 | 10 |    |   
 test1                     |    |  5 |    |   
 test111                   | 21 |    |    |   
 test2                     |    |  7 |    |   
 test222                   | 21 |    |    |   
 test3                     | 90 |  3 |    |   
 xxxxxxxxxxxxxxxxxxxxxxxxx | 30 |  4 |    |   
(10 rows)

--Testcase 229:
UPDATE tntbl3 SET (c2, c3) = (300, c2 + c3), c1 = c1 + 1 WHERE c1 = 10;
--Testcase 230:
SELECT _id, c1, c2, c3, c4 FROM tntbl3 ORDER BY 1, 2, 3;
            _id            | c1 | c2  | c3 | c4 
---------------------------+----+-----+----+----
 @                         |    |     |    |   
 _3                        |    |   3 |    |   
 _4                        |    |   5 |    |   
 jdbc                      | 11 | 300 |    |   
 test1                     |    |   5 |    |   
 test111                   | 21 |     |    |   
 test2                     |    |   7 |    |   
 test222                   | 21 |     |    |   
 test3                     | 90 |   3 |    |   
 xxxxxxxxxxxxxxxxxxxxxxxxx | 30 |   4 |    |   
(10 rows)

-- fail, multi assignment to same column:
--Testcase 231:
UPDATE tntbl3 SET (c2, c1) = (100, c2 + c3), c2 = c1 + 1 WHERE c4 = 3000;
ERROR:  multiple assignments to same column "c2"
-- uncorrelated sub-SELECT:
--Testcase 232:
UPDATE tntbl3
  SET (c2, c3) = (SELECT c3, c2 FROM tntbl3 where c1 = 11 and _id = 'car1')
  WHERE c2 = 2.0 AND c3 = 20.0;
--Testcase 233:
SELECT _id, c1, c2, c3, c4 FROM tntbl3 ORDER BY 1, 2, 3;
            _id            | c1 | c2  | c3 | c4 
---------------------------+----+-----+----+----
 @                         |    |     |    |   
 _3                        |    |   3 |    |   
 _4                        |    |   5 |    |   
 jdbc                      | 11 | 300 |    |   
 test1                     |    |   5 |    |   
 test111                   | 21 |     |    |   
 test2                     |    |   7 |    |   
 test222                   | 21 |     |    |   
 test3                     | 90 |   3 |    |   
 xxxxxxxxxxxxxxxxxxxxxxxxx | 30 |   4 |    |   
(10 rows)

-- correlated sub-SELECT:
--Testcase 234:
UPDATE tntbl3 o
  SET (c2, c3) = (SELECT c3+1, c2 FROM tntbl3 i
               where i.c3 = o.c3 and i.c2 = o.c2 and i.c1 is not distinct FROM o.c1);
--Testcase 235:
SELECT _id, c1, c2, c3, c4 FROM tntbl3 ORDER BY 1, 2, 3;
            _id            | c1 | c2 | c3 | c4 
---------------------------+----+----+----+----
 @                         |    |    |    |   
 _3                        |    |    |    |   
 _4                        |    |    |    |   
 jdbc                      | 11 |    |    |   
 test1                     |    |    |    |   
 test111                   | 21 |    |    |   
 test2                     |    |    |    |   
 test222                   | 21 |    |    |   
 test3                     | 90 |    |    |   
 xxxxxxxxxxxxxxxxxxxxxxxxx | 30 |    |    |   
(10 rows)

-- fail, multiple rows supplied:
--Testcase 236:
UPDATE tntbl3 SET (c3, c2) = (SELECT c2 + 1 , c3 FROM tntbl3);
ERROR:  more than one row returned by a subquery used as an expression
-- set to null if no rows supplied:
--Testcase 237:
UPDATE tntbl3 SET (c3, c2) = (SELECT c2 + 1, c3 FROM tntbl3 where c4 = 1000)
  WHERE c1 = 11;
--Testcase 238:
SELECT _id, c1, c2, c3, c4 FROM tntbl3 ORDER BY 1, 2, 3;
            _id            | c1 | c2 | c3 | c4 
---------------------------+----+----+----+----
 @                         |    |    |    |   
 _3                        |    |    |    |   
 _4                        |    |    |    |   
 jdbc                      | 11 |    |    |   
 test1                     |    |    |    |   
 test111                   | 21 |    |    |   
 test2                     |    |    |    |   
 test222                   | 21 |    |    |   
 test3                     | 90 |    |    |   
 xxxxxxxxxxxxxxxxxxxxxxxxx | 30 |    |    |   
(10 rows)

-- *-expansion should work in this context:
--Testcase 239:
UPDATE tntbl3 SET (c1, c3) = ROW(v.*) FROM (VALUES(11, 20)) AS v(i, j)
  WHERE tntbl3.c1 = v.i;
-- you might expect this to work, but syntactically it's not a RowExpr:
--Testcase 240:
UPDATE tntbl3 SET (c1, c3) = (v.*) FROM (VALUES(11, 20)) AS v(i, j)
  WHERE tntbl3.c1 = v.i;
ERROR:  source for a multiple-column UPDATE item must be a sub-SELECT or ROW() expression
LINE 1: UPDATE tntbl3 SET (c1, c3) = (v.*) FROM (VALUES(11, 20)) AS ...
                                      ^
-- if an alias for the target table is specified, don't allow references
-- to the original table name
--Testcase 241:
UPDATE tntbl3 AS t SET c1 = tntbl3.c1 + 10 WHERE t.c2 = 2.0;
ERROR:  invalid reference to FROM-clause entry for table "tntbl3"
LINE 1: UPDATE tntbl3 AS t SET c1 = tntbl3.c1 + 10 WHERE t.c2 = 2.0;
                                    ^
HINT:  Perhaps you meant to reference the table alias "t".
-- Make sure that we can update to a TOASTed value.
--Testcase 242:
UPDATE tntbl3 SET _id = repeat('a', 25) WHERE c1 = 11;
--Testcase 243:
SELECT c1, c2, _id FROM tntbl3 ORDER BY 1, 2, 3;
 c1 | c2 |            _id            
----+----+---------------------------
 11 |    | aaaaaaaaaaaaaaaaaaaaaaaaa
 21 |    | test111
 21 |    | test222
 30 |    | xxxxxxxxxxxxxxxxxxxxxxxxx
 90 |    | test3
    |    | @
    |    | _3
    |    | _4
    |    | test1
    |    | test2
(10 rows)

-- Check multi-assignment with a Result node to handle a one-time filter.
--Testcase 244:
EXPLAIN (VERBOSE, COSTS OFF)
UPDATE tntbl3 t
  SET (c2, c3) = (SELECT c3, c2 FROM tntbl3 s WHERE s.c2 = t.c2)
  WHERE CURRENT_USER = SESSION_USER;
                                                   QUERY PLAN                                                   
----------------------------------------------------------------------------------------------------------------
 Update on public.tntbl3 t
   Node: jdbc_post_svr / Status: Alive
     Remote SQL: UPDATE tntbl3 SET c2 = ?, c3 = ? WHERE _id=?
   ->  Result
         Output: (($1)::real), (($2)::double precision), ((SubPlan 1 (returns $1,$2))), t._id, t.__spd_url, t.*
         One-Time Filter: (CURRENT_USER = SESSION_USER)
         ->  Foreign Scan on public.tntbl3 t
               Output: $1, $2, (SubPlan 1 (returns $1,$2)), t._id, t.__spd_url, t.*
               Filter: (CURRENT_USER = SESSION_USER)
               Node: jdbc_post_svr / Status: Alive
                 Remote SQL: SELECT _id, c1, c2, c3, c4 FROM tntbl3
               SubPlan 1 (returns $1,$2)
                 ->  Foreign Scan on public.tntbl3 s
                       Output: s.c3, s.c2
                       Filter: (s.c2 = t.c2)
                       Node: jdbc_post_svr / Status: Alive
                         Remote SQL: SELECT c2, c3 FROM tntbl3
(17 rows)

--Testcase 245:
UPDATE tntbl3 t
  SET (c2, c3) = (SELECT c3, c2 FROM tntbl3 s WHERE s.c2 = t.c2)
  WHERE CURRENT_USER = SESSION_USER;
--Testcase 246:
SELECT _id, c1, c2, c3, c4 FROM tntbl3 ORDER BY 1, 2, 3;
            _id            | c1 | c2 | c3 | c4 
---------------------------+----+----+----+----
 @                         |    |    |    |   
 _3                        |    |    |    |   
 _4                        |    |    |    |   
 aaaaaaaaaaaaaaaaaaaaaaaaa | 11 |    |    |   
 test1                     |    |    |    |   
 test111                   | 21 |    |    |   
 test2                     |    |    |    |   
 test222                   | 21 |    |    |   
 test3                     | 90 |    |    |   
 xxxxxxxxxxxxxxxxxxxxxxxxx | 30 |    |    |   
(10 rows)

--
-- UPDATE with IN feature
--
--Testcase 247:
UPDATE tntbl3 IN ('/tiny_svr/') SET c3 = 56563.0;
ERROR:  No child node support modification.
--Testcase 248:
UPDATE tntbl3 IN ('/jdbc_post_svr/', '/odbc_mysql_svr/', '/oracle_svr/') SET c3 = 222.0;
--
-- DELETE
--
-- allow an alias to be specified for DELETE's target table
--Testcase 249:
DELETE FROM tntbl3 AS dt WHERE dt.c1 > 35;
-- if an alias is specified, don't allow the original table name
-- to be referenced
--Testcase 250:
DELETE FROM tntbl3 dt WHERE tntbl3.c1 > 25;
ERROR:  invalid reference to FROM-clause entry for table "tntbl3"
LINE 1: DELETE FROM tntbl3 dt WHERE tntbl3.c1 > 25;
                                    ^
HINT:  Perhaps you meant to reference the table alias "dt".
--Testcase 251:
SELECT c1, c3, _id FROM tntbl3 ORDER BY 1, 2, 3;
 c1 | c3  |            _id            
----+-----+---------------------------
 11 | 222 | aaaaaaaaaaaaaaaaaaaaaaaaa
 21 | 222 | test111
 21 | 222 | test222
 30 | 222 | xxxxxxxxxxxxxxxxxxxxxxxxx
    | 222 | @
    | 222 | _3
    | 222 | _4
    | 222 | test1
    | 222 | test2
(9 rows)

-- delete a row with a TOASTed value
--Testcase 252:
DELETE FROM tntbl3 WHERE c1 > 10;
--Testcase 253:
SELECT c1, c3, _id FROM tntbl3 ORDER BY 1, 2, 3;
 c1 | c3  |  _id  
----+-----+-------
    | 222 | @
    | 222 | _3
    | 222 | _4
    | 222 | test1
    | 222 | test2
(5 rows)

--
-- DELETE with IN feature
--
--Testcase 254:
DELETE FROM tntbl3 IN ('/mongo_svr/') WHERE c1 = 10;
ERROR:  No child node support modification.
--Testcase 255:
DELETE FROM tntbl3 IN ('/dynamodb_svr/', '/odbc_mysql_svr/', '/griddb_svr/', '/oracle_svr/', '/tiny_svr/') WHERE c4 = 3000;
ERROR:  No child node support modification.
Set pgspider_core_fdw.throw_error_ifdead to true;
--Testcase 348:
INSERT INTO tntbl3 (_id, c1, c2, c3, c4) VALUES (100, DEFAULT, DEFAULT, DEFAULT, DEFAULT);
--Testcase 349:
INSERT INTO tntbl3 (_id, c2, c3) VALUES ('_33', 3.0, DEFAULT);
--Testcase 350:
INSERT INTO tntbl3 VALUES(repeat('x', 10), 20, 4.0, 40.0, 5000);
--Testcase 351:
SELECT * FROM tntbl3 ORDER BY 1, 2, 3;
    _id     | c1 | c2 | c3  |  c4  |    __spd_url    
------------+----+----+-----+------+-----------------
 @          |    |    | 222 |      | /jdbc_post_svr/
 100        |    |    |     |      | /jdbc_post_svr/
 _3         |    |    | 222 |      | /jdbc_post_svr/
 _33        |    |  3 |     |      | /jdbc_post_svr/
 _4         |    |    | 222 |      | /jdbc_post_svr/
 test1      |    |    | 222 |      | /jdbc_post_svr/
 test2      |    |    | 222 |      | /jdbc_post_svr/
 xxxxxxxxxx | 20 |  4 |  40 | 5000 | /jdbc_post_svr/
(8 rows)

--Testcase 352:
INSERT INTO tntbl3 IN ('/dynamodb_svr/', '/mongo_svr/', '/griddb_svr/', '/mysql_svr/', '/postgres_svr/', '/postgres_svr_1/') VALUES ('_infea', 20, 6.0, 60.0, 6000);
ERROR:  There is no candidate for INSERT.
--Testcase 353:
SELECT * FROM tntbl3 ORDER BY 1, 2, 3;
    _id     | c1 | c2 | c3  |  c4  |    __spd_url    
------------+----+----+-----+------+-----------------
 @          |    |    | 222 |      | /jdbc_post_svr/
 100        |    |    |     |      | /jdbc_post_svr/
 _3         |    |    | 222 |      | /jdbc_post_svr/
 _33        |    |  3 |     |      | /jdbc_post_svr/
 _4         |    |    | 222 |      | /jdbc_post_svr/
 test1      |    |    | 222 |      | /jdbc_post_svr/
 test2      |    |    | 222 |      | /jdbc_post_svr/
 xxxxxxxxxx | 20 |  4 |  40 | 5000 | /jdbc_post_svr/
(8 rows)

--Testcase 354:
UPDATE tntbl3 SET (c3, c2) = (SELECT c2 + 1 , c3 FROM tntbl3);
ERROR:  more than one row returned by a subquery used as an expression
--Testcase 355:
SELECT * FROM tntbl3 ORDER BY 1, 2, 3;
    _id     | c1 | c2 | c3  |  c4  |    __spd_url    
------------+----+----+-----+------+-----------------
 @          |    |    | 222 |      | /jdbc_post_svr/
 100        |    |    |     |      | /jdbc_post_svr/
 _3         |    |    | 222 |      | /jdbc_post_svr/
 _33        |    |  3 |     |      | /jdbc_post_svr/
 _4         |    |    | 222 |      | /jdbc_post_svr/
 test1      |    |    | 222 |      | /jdbc_post_svr/
 test2      |    |    | 222 |      | /jdbc_post_svr/
 xxxxxxxxxx | 20 |  4 |  40 | 5000 | /jdbc_post_svr/
(8 rows)

--Testcase 356:
UPDATE tntbl3 IN ('/tiny_svr/') SET c3 = 56.0;
ERROR:  No child node support modification.
--Testcase 357:
SELECT * FROM tntbl3 ORDER BY 1, 2, 3;
    _id     | c1 | c2 | c3  |  c4  |    __spd_url    
------------+----+----+-----+------+-----------------
 @          |    |    | 222 |      | /jdbc_post_svr/
 100        |    |    |     |      | /jdbc_post_svr/
 _3         |    |    | 222 |      | /jdbc_post_svr/
 _33        |    |  3 |     |      | /jdbc_post_svr/
 _4         |    |    | 222 |      | /jdbc_post_svr/
 test1      |    |    | 222 |      | /jdbc_post_svr/
 test2      |    |    | 222 |      | /jdbc_post_svr/
 xxxxxxxxxx | 20 |  4 |  40 | 5000 | /jdbc_post_svr/
(8 rows)

--Testcase 358:
DELETE FROM tntbl3 WHERE c1 > 10;
--Testcase 359:
SELECT * FROM tntbl3 ORDER BY 1, 2, 3;
  _id  | c1 | c2 | c3  | c4 |    __spd_url    
-------+----+----+-----+----+-----------------
 @     |    |    | 222 |    | /jdbc_post_svr/
 100   |    |    |     |    | /jdbc_post_svr/
 _3    |    |    | 222 |    | /jdbc_post_svr/
 _33   |    |  3 |     |    | /jdbc_post_svr/
 _4    |    |    | 222 |    | /jdbc_post_svr/
 test1 |    |    | 222 |    | /jdbc_post_svr/
 test2 |    |    | 222 |    | /jdbc_post_svr/
(7 rows)

--Testcase 360:
DELETE FROM tntbl3 IN ('/mongo_svr/') WHERE c3 = 56.0;
ERROR:  No child node support modification.
--Testcase 361:
SELECT * FROM tntbl3 ORDER BY 1, 2, 3;
  _id  | c1 | c2 | c3  | c4 |    __spd_url    
-------+----+----+-----+----+-----------------
 @     |    |    | 222 |    | /jdbc_post_svr/
 100   |    |    |     |    | /jdbc_post_svr/
 _3    |    |    | 222 |    | /jdbc_post_svr/
 _33   |    |  3 |     |    | /jdbc_post_svr/
 _4    |    |    | 222 |    | /jdbc_post_svr/
 test1 |    |    | 222 |    | /jdbc_post_svr/
 test2 |    |    | 222 |    | /jdbc_post_svr/
(7 rows)

-- Reset value of disable_transaction_feature_check
SET disable_transaction_feature_check TO true;
ERROR:  unrecognized configuration parameter "disable_transaction_feature_check"
--
--
-- Test with __spd_url
--
--Testcase 362:
DELETE FROM tntbl3 WHERE __spd_url = '/mongo_svr/';
--Testcase 363:
DELETE FROM tntbl3 WHERE __spd_url IS NOT NULL;
--Testcase 364:
INSERT INTO tntbl3 IN ('/dynamodb_svr/', '/mysql_svr/', '/griddb_svr/') VALUES ('foo', 30, 5.0, 50.0, 6000);
ERROR:  There is no candidate for INSERT.
--Testcase 365:
INSERT INTO tntbl3 (SELECT * FROM tntbl3 ORDER BY 1, 2, 3);
--Testcase 366:
SELECT * FROM tntbl3 ORDER BY 1, 2, 3;
 _id | c1 | c2 | c3 | c4 | __spd_url 
-----+----+----+----+----+-----------
(0 rows)

--Testcase 367:
UPDATE tntbl3 SET _id = _id || '@' WHERE __spd_url = '/postgres_svr/';
--Testcase 368:
SELECT * FROM tntbl3 ORDER BY 1, 2, 3;
 _id | c1 | c2 | c3 | c4 | __spd_url 
-----+----+----+----+----+-----------
(0 rows)

--Testcase 369:
DELETE FROM tntbl3;
--Testcase 370:
INSERT INTO tntbl3 (SELECT * FROM tntbl3 ORDER BY 1, 2, 3);
--Testcase 371:
SELECT * FROM tntbl3 ORDER BY 1, 2, 3;
 _id | c1 | c2 | c3 | c4 | __spd_url 
-----+----+----+----+----+-----------
(0 rows)

--Testcase 372:
INSERT INTO tntbl3 VALUES(repeat('x', 10), 20, 4.0, 40.0, 5000);
--Testcase 373:
SELECT _id, sum(c1), avg(c2) FROM tntbl3 WHERE __spd_url IS NOT NULL GROUP BY _id HAVING _id IS NOT NULL LIMIT 5;
    _id     | sum | avg 
------------+-----+-----
 xxxxxxxxxx |  20 |   4
(1 row)

--Testcase 374:
INSERT INTO tntbl3 VALUES ('foo', 30, 5.0, 50.0, 6000, '/postgres_svr/');
ERROR:  There is no candidate for INSERT.
--Testcase 375:
SELECT * FROM tntbl3 ORDER BY 1, 2, 3;
    _id     | c1 | c2 | c3 |  c4  |    __spd_url    
------------+----+----+----+------+-----------------
 xxxxxxxxxx | 20 |  4 | 40 | 5000 | /jdbc_post_svr/
(1 row)

--
-- Test with optional options: tntbl3
--
--
--
-- ON CONFLICT, this work only on postgres_fdw
--
--Testcase 420:
INSERT INTO tntbl3(_id, c1) VALUES('key$', 12);  -- duplicate key
--Testcase 421:
INSERT INTO tntbl3(_id, c1) VALUES('key$', 12) ON CONFLICT DO NOTHING; -- works
ERROR:  ON CONFLICT clause is not supported
--Testcase 422:
INSERT INTO tntbl3(_id, c1) VALUES('key$', 12) ON CONFLICT (_id, c1) DO NOTHING; -- unsupported
ERROR:  there is no unique or exclusion constraint matching the ON CONFLICT specification
--Testcase 423:
INSERT INTO tntbl3(_id, c1) VALUES('key$', 12) ON CONFLICT (_id, c1) DO UPDATE SET c2 = 'conficted!'; -- unsupported
ERROR:  invalid input syntax for type real: "conficted!"
LINE 1: ...y$', 12) ON CONFLICT (_id, c1) DO UPDATE SET c2 = 'conficted...
                                                             ^
--
-- WITH CHECK, this work only on postgres_fdw
--
--Testcase 424:
CREATE VIEW rw_view AS SELECT * FROM tntbl3
  WHERE c2 < c3 WITH CHECK OPTION;
--Testcase 425:
\d+ rw_view
                                 View "public.rw_view"
  Column   |       Type       | Collation | Nullable | Default | Storage  | Description 
-----------+------------------+-----------+----------+---------+----------+-------------
 _id       | text             |           |          |         | extended | 
 c1        | integer          |           |          |         | plain    | 
 c2        | real             |           |          |         | plain    | 
 c3        | double precision |           |          |         | plain    | 
 c4        | bigint           |           |          |         | plain    | 
 __spd_url | text             |           |          |         | extended | 
View definition:
 SELECT _id,
    c1,
    c2,
    c3,
    c4,
    __spd_url
   FROM tntbl3
  WHERE c2 < c3;
Options: check_option=cascaded

--Testcase 426:
EXPLAIN (VERBOSE, COSTS OFF)
INSERT INTO rw_view(_id, c2, c3) VALUES ('id1', 5, 0);
ERROR:  WITH CHECK clause is not supported
--Testcase 427:
INSERT INTO rw_view(_id, c2, c3) VALUES ('id1', 5, 0); -- should fail
ERROR:  WITH CHECK clause is not supported
--Testcase 428:
EXPLAIN (VERBOSE, COSTS OFF)
INSERT INTO rw_view(_id, c2, c3) VALUES ('id2', 5, 3000);
ERROR:  WITH CHECK clause is not supported
--Testcase 429:
INSERT INTO rw_view(_id, c2, c3) VALUES ('id2', 5, 3000); -- ok
ERROR:  WITH CHECK clause is not supported
--Testcase 430:
SELECT _id, c1, c2, c3, c4 FROM tntbl3 ORDER BY 1, 2, 3;
    _id     | c1 | c2 | c3 |  c4  
------------+----+----+----+------
 key$       | 12 |    |    |     
 xxxxxxxxxx | 20 |  4 | 40 | 5000
(2 rows)

--Testcase 431:
EXPLAIN (VERBOSE, COSTS OFF)
UPDATE rw_view SET c2 = c2 + 10000;
ERROR:  WITH CHECK clause is not supported
--Testcase 432:
UPDATE rw_view SET c2 = c2 + 10000; -- should fail
ERROR:  WITH CHECK clause is not supported
--Testcase 433:
EXPLAIN (VERBOSE, COSTS OFF)
UPDATE rw_view SET c2 = c2 + 15;
ERROR:  WITH CHECK clause is not supported
--Testcase 434:
UPDATE rw_view SET c2 = c2 + 15; -- ok
ERROR:  WITH CHECK clause is not supported
--Testcase 435:
SELECT _id, c1, c2, c3, c4 FROM tntbl3 ORDER BY 1, 2, 3;
    _id     | c1 | c2 | c3 |  c4  
------------+----+----+----+------
 key$       | 12 |    |    |     
 xxxxxxxxxx | 20 |  4 | 40 | 5000
(2 rows)

--Testcase 436:
DROP VIEW rw_view;
--
-- RETURNING
--
--Testcase 437:
INSERT INTO tntbl3 VALUES ('0000', 20, 5.0, 50.0, 5000) RETURNING *;
ERROR:  RETURNING clause is not supported
--Testcase 438:
INSERT INTO tntbl3 (_id, c1, c2, c3, c4) VALUES ('_key_', 30, 4.0, 50.0, 6000) RETURNING c1, c2, c3;
ERROR:  RETURNING clause is not supported
--Testcase 439:
UPDATE tntbl3 SET c2 = 7.0 WHERE c1 = 20 AND c3 = 50.0 RETURNING (tntbl3), *;
ERROR:  RETURNING clause is not supported
--Testcase 440:
DELETE FROM tntbl3 WHERE c3 = 50.0 RETURNING _id, c1, c2;
ERROR:  RETURNING clause is not supported
--Testcase 441:
DELETE FROM tntbl3 RETURNING *;
ERROR:  RETURNING clause is not supported
-- *** Finish test for tntbl3 *** --
--
-- Test case bulk insert
--
--Clean
--Testcase 442:
DELETE FROM tntbl2;
--Testcase 443:
SELECT * FROM tntbl2;
 _id | c1 | c2 | c3 | c4 | c5 | __spd_url 
-----+----+----+----+----+----+-----------
(0 rows)

SET client_min_messages = INFO;
-- Manual config: batch_size server = 5, batch_size table not set, batch_size of FDW = 6, insert 10 records
-- jdbc_fdw not support batch_size
--Testcase 444:
-- ALTER SERVER pgspider_svr OPTIONS (ADD batch_size '5');
--Testcase 445:
INSERT INTO tntbl2
	SELECT to_char(id, 'FM00000'), id, 'foo', true, id/10, id * 1000	FROM generate_series(1, 10) id;
--Testcase 446:
SELECT * FROM tntbl2 ORDER BY 1,2;
  _id  | c1 | c2  | c3 | c4 |  c5   |    __spd_url     
-------+----+-----+----+----+-------+------------------
 00001 |  1 | foo | t  |  0 |  1000 | /jdbc_mysql_svr/
 00002 |  2 | foo | t  |  0 |  2000 | /jdbc_mysql_svr/
 00003 |  3 | foo | t  |  0 |  3000 | /jdbc_mysql_svr/
 00004 |  4 | foo | t  |  0 |  4000 | /jdbc_mysql_svr/
 00005 |  5 | foo | t  |  0 |  5000 | /jdbc_mysql_svr/
 00006 |  6 | foo | t  |  0 |  6000 | /jdbc_mysql_svr/
 00007 |  7 | foo | t  |  0 |  7000 | /jdbc_mysql_svr/
 00008 |  8 | foo | t  |  0 |  8000 | /jdbc_mysql_svr/
 00009 |  9 | foo | t  |  0 |  9000 | /jdbc_mysql_svr/
 00010 | 10 | foo | t  |  1 | 10000 | /jdbc_mysql_svr/
(10 rows)

-- Auto config: batch_size of FDW = 10, insert 25 records
DELETE FROM tntbl2;
--Testcase 447:
-- ALTER SERVER pgspider_svr OPTIONS (DROP batch_size);
--Testcase 448:
INSERT INTO tntbl2
	SELECT to_char(id, 'FM00000'), id, 'foo', true, id/10, id * 1000	FROM generate_series(1, 25) id;
--Testcase 449:
SELECT * FROM tntbl2 ORDER BY 1,2;
  _id  | c1 | c2  | c3 | c4 |  c5   |    __spd_url     
-------+----+-----+----+----+-------+------------------
 00001 |  1 | foo | t  |  0 |  1000 | /jdbc_mysql_svr/
 00002 |  2 | foo | t  |  0 |  2000 | /jdbc_mysql_svr/
 00003 |  3 | foo | t  |  0 |  3000 | /jdbc_mysql_svr/
 00004 |  4 | foo | t  |  0 |  4000 | /jdbc_mysql_svr/
 00005 |  5 | foo | t  |  0 |  5000 | /jdbc_mysql_svr/
 00006 |  6 | foo | t  |  0 |  6000 | /jdbc_mysql_svr/
 00007 |  7 | foo | t  |  0 |  7000 | /jdbc_mysql_svr/
 00008 |  8 | foo | t  |  0 |  8000 | /jdbc_mysql_svr/
 00009 |  9 | foo | t  |  0 |  9000 | /jdbc_mysql_svr/
 00010 | 10 | foo | t  |  1 | 10000 | /jdbc_mysql_svr/
 00011 | 11 | foo | t  |  1 | 11000 | /jdbc_mysql_svr/
 00012 | 12 | foo | t  |  1 | 12000 | /jdbc_mysql_svr/
 00013 | 13 | foo | t  |  1 | 13000 | /jdbc_mysql_svr/
 00014 | 14 | foo | t  |  1 | 14000 | /jdbc_mysql_svr/
 00015 | 15 | foo | t  |  1 | 15000 | /jdbc_mysql_svr/
 00016 | 16 | foo | t  |  1 | 16000 | /jdbc_mysql_svr/
 00017 | 17 | foo | t  |  1 | 17000 | /jdbc_mysql_svr/
 00018 | 18 | foo | t  |  1 | 18000 | /jdbc_mysql_svr/
 00019 | 19 | foo | t  |  1 | 19000 | /jdbc_mysql_svr/
 00020 | 20 | foo | t  |  2 | 20000 | /jdbc_mysql_svr/
 00021 | 21 | foo | t  |  2 | 21000 | /jdbc_mysql_svr/
 00022 | 22 | foo | t  |  2 | 22000 | /jdbc_mysql_svr/
 00023 | 23 | foo | t  |  2 | 23000 | /jdbc_mysql_svr/
 00024 | 24 | foo | t  |  2 | 24000 | /jdbc_mysql_svr/
 00025 | 25 | foo | t  |  2 | 25000 | /jdbc_mysql_svr/
(25 rows)

--Clean
--Testcase 110:
DELETE FROM tntbl2;
--Testcase 111:
DELETE FROM tntbl3;
--Reset data
INSERT INTO tntbl3__jdbc_post_svr__0 VALUES ('jdbc', 10, 10.0, 1000.0, 10000);
--Testcase 112:
DROP FOREIGN TABLE tntbl2, tntbl2__jdbc_mysql_svr__0 CASCADE;
--Testcase 113:
DROP FOREIGN TABLE tntbl3, tntbl3__jdbc_post_svr__0 CASCADE;
--Testcase 114:
DROP EXTENSION jdbc_fdw CASCADE;
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to server jdbc_mysql_svr
drop cascades to user mapping for public on server jdbc_mysql_svr
drop cascades to server jdbc_post_svr
drop cascades to user mapping for public on server jdbc_post_svr
--Testcase 115:
DROP USER MAPPING FOR CURRENT_USER SERVER pgspider_svr;
--Testcase 116:
DROP SERVER pgspider_svr CASCADE;
--Testcase 117:
DROP EXTENSION pgspider_core_fdw CASCADE;
